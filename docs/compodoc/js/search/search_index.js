var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.814,1,1.354]],["body/components/AppComponent.html",[0,1.446,1,2.512,2,2.34,3,0.365,4,0.265,5,2.118,6,2.118,7,2.118,8,0.296,9,4.907,10,2.118,11,3.251,12,3.076,13,4.619,14,2.611,15,6.049,16,0.463,17,0.02,18,1.898,19,0.296,20,0.092,21,1.898,22,2.611,23,2.219,24,2.118,25,2.954,26,2.118,27,1.021,28,2.118,29,1.8,30,2.118,31,1.8,32,1.709,33,2.118,34,1.8,35,2.118,36,1.8,37,2.118,38,1.8,39,2.118,40,1.8,41,2.118,42,1.8,43,2.118,44,1.8,45,2.118,46,1.8,47,2.118,48,1.8,49,1.027,50,2.118,51,2.118,52,0.016,53,0.016]],["title/modules/AppModule.html",[54,2.817,55,2.558]],["body/modules/AppModule.html",[0,0.826,1,2.649,2,1.449,3,0.226,4,0.202,8,0.226,16,0.696,17,0.02,18,1.449,19,0.226,20,0.07,21,1.449,29,2.443,31,2.443,34,2.443,36,2.443,38,2.498,40,2.443,42,2.443,44,2.443,46,2.443,48,2.443,52,0.013,53,0.013,54,2.86,55,5.252,56,2.86,57,2.597,58,4.941,59,4.941,60,4.355,61,3.212,62,3.212,63,3.212,64,3.212,65,3.878,66,3.212,67,2.86,68,3.746,69,5.079,70,5.079,71,5.079,72,3.212,73,2.597,74,3.746,75,3.878,76,2.86,77,5.079,78,3.746,79,5.079,80,5.079,81,3.746,82,3.746,83,3.746,84,3.746,85,3.746,86,3.746,87,3.746,88,3.212,89,3.746,90,3.746,91,3.746,92,3.212,93,3.746,94,3.746,95,3.746,96,3.746,97,3.746,98,0.87,99,5.079,100,3.746,101,3.746,102,3.746,103,3.746,104,1.816,105,3.746,106,5.079,107,3.746,108,3.746,109,3.746,110,3.746,111,3.746,112,3.746,113,3.746,114,3.746,115,3.746,116,3.746,117,3.746,118,3.746,119,3.746,120,3.746,121,3.746,122,5.079,123,3.746,124,2.388,125,3.746,126,3.746]],["title/classes/AppPage.html",[20,0.069,127,3.164]],["body/classes/AppPage.html",[3,0.322,4,0.288,8,0.322,13,4.075,16,0.504,17,0.02,19,0.322,20,0.1,23,1.958,52,0.017,53,0.017,73,3.701,127,5.458,128,1.859,129,5.337,130,0.288,131,1.903,132,6.262,133,7.043,134,7.043,135,1.404,136,5.337,137,1.809,138,2.584,139,5.337,140,4.576,141,1.555,142,5.337,143,5.337,144,2.754,145,5.337]],["title/classes/CancellableImageLoader.html",[20,0.069,146,2.032]],["body/classes/CancellableImageLoader.html",[3,0.163,4,0.145,8,0.163,16,0.379,17,0.02,19,0.321,20,0.09,27,0.96,52,0.01,53,0.01,98,1.653,104,1.947,128,0.938,130,0.145,131,1.2,135,0.594,137,0.766,138,1.952,141,1.66,146,2.645,147,0.47,148,0.409,149,1.306,150,3.144,151,2.373,152,0.96,153,2.936,154,2.645,155,2.694,156,1.141,157,0.356,158,0.847,159,1.947,160,1.592,161,0.886,162,2.58,163,2.437,164,0.658,165,2.072,166,0.382,167,1.592,168,1.306,169,2.212,170,2.601,171,2.212,172,2.212,173,1.592,174,3.526,175,1.592,176,1.672,177,2.837,178,1.592,179,1.592,180,3.144,181,1.032,182,1.592,183,2.373,184,1.592,185,1.592,186,1.592,187,1.484,188,1.174,189,2.645,190,1.592,191,1.592,192,2.373,193,1.592,194,1.592,195,1.592,196,1.592,197,1.592,198,1.592,199,1.592,200,1.484,201,1.484,202,1.733,203,1.592,204,1.592,205,1.592,206,1.592,207,1.592,208,1.592,209,1.592,210,2.373,211,1.947,212,1.592,213,1.592,214,1.484,215,1.592,216,1.592,217,1.592,218,1.484,219,1.592,220,1.592,221,1.39,222,0.938,223,1.592,224,1.592,225,1.592,226,1.592,227,2.373,228,2.324,229,1.458,230,1.592,231,1.592,232,2.373,233,1.592,234,2.373,235,2.837,236,1.592,237,1.592,238,1.592,239,1.592,240,1.592,241,1.592,242,1.733,243,1.733,244,0.938,245,1.592,246,1.592,247,1.592,248,0.321,249,1.762,250,1.163,251,0.64,252,0.989,253,1.1,254,1.484,255,1.592,256,1.592,257,1.592,258,1.592,259,2.173,260,1.484,261,1.484,262,1.484,263,2.936,264,2.931,265,2.837,266,1.484,267,2.837,268,0.692,269,1.463,270,2.373,271,1.592,272,1.592,273,1.592,274,2.373,275,2.837,276,1.592,277,1.484,278,1.592,279,2.373,280,1.592,281,1.484,282,1.592,283,2.373,284,1.592,285,2.212,286,2.324,287,1.042,288,3.653,289,0.626,290,0.981,291,1.592,292,1.592,293,1.484,294,1.592,295,1.592,296,2.212,297,1.592,298,2.373,299,1.592,300,1.592,301,1.592,302,0.594,303,1.592,304,1.592,305,2.373,306,1.592,307,1.592,308,1.592,309,1.592,310,1.306,311,1.592,312,1.592,313,1.592,314,1.733,315,0.989,316,1.163,317,1.592,318,0.626,319,1.592,320,2.837,321,1.592,322,2.373,323,1.592,324,1.39,325,1.163,326,1.592,327,1.592,328,1.306,329,1.39,330,1.592,331,1.761,332,1.484,333,1.592,334,1.592,335,1.592,336,1.592,337,1.592,338,0.847,339,1.592,340,1.592,341,1.592,342,1.592]],["title/interfaces/ClientDimensions.html",[248,0.247,343,2.817]],["body/interfaces/ClientDimensions.html",[3,0.287,4,0.257,8,0.287,16,0.449,17,0.02,19,0.39,52,0.015,53,0.015,98,1.104,130,0.257,141,1.58,147,0.557,148,0.484,157,0.432,170,2.712,248,0.318,251,0.991,329,3.061,343,5.32,344,1.422,345,4.079,346,1.001,347,3.283,348,1.654,349,1.74,350,2.765,351,2.81,352,3.032,353,4,354,4.117,355,5.088,356,4.079,357,4.757,358,2.62,359,5.934,360,1.45,361,4.757,362,5.934,363,2.454,364,1.84,365,4.757,366,3.032,367,3.061,368,4.079,369,6.467,370,5.934,371,4.757,372,3.032]],["title/components/CloseComponent.html",[0,0.814,29,1.354]],["body/components/CloseComponent.html",[0,1.291,1,1.418,2,2.007,3,0.313,4,0.209,5,1.668,6,1.668,7,1.668,8,0.233,10,1.668,11,3.151,12,2.981,14,2.239,16,0.365,17,0.02,18,1.495,19,0.233,20,0.072,21,1.495,22,2.239,23,1.903,24,1.668,25,2.9,26,1.668,27,0.875,28,1.668,29,2.296,30,1.668,31,1.418,32,1.346,33,1.668,34,1.418,35,1.668,36,1.418,37,1.668,38,1.418,39,1.668,40,1.418,41,1.668,42,1.418,43,1.668,44,1.418,45,1.668,46,1.418,47,1.668,48,1.418,49,0.809,50,1.668,51,1.668,52,0.013,53,0.013,124,2.463,130,0.28,131,1.55,135,1.38,137,1.098,144,1.994,157,0.347,166,0.829,188,1.144,229,0.852,315,1.418,348,1.529,349,1.608,360,1.43,373,1.874,374,3.865,375,6.257,376,2.515,377,5.854,378,5.187,379,5.365,380,2.857,381,3.697,382,3.96,383,5.02,384,3.865,385,1.716,386,3.865,387,4.47,388,3.865,389,3.865,390,2.857,391,3.96,392,3.314,393,2.68,394,2.283,395,4.055,396,3.459,397,2.283,398,4.447,399,2.515,400,3.988,401,2.129,402,1.766,403,3.732,404,2.68,405,2.68,406,3.314,407,3.865,408,2.951,409,2.68,410,3.865,411,2.129,412,2.129,413,2.129,414,2.129,415,2.37,416,2.129,417,2.283,418,1.994,419,3.96,420,2.68,421,1.578,422,2.283,423,5.187,424,2.283,425,5.187,426,3.96,427,3.314,428,3.96,429,3.96,430,2.951,431,2.283,432,3.865,433,4.447]],["title/components/ControlsButtonComponent.html",[0,0.814,31,1.354]],["body/components/ControlsButtonComponent.html",[0,1.194,1,1.221,2,1.81,3,0.282,4,0.18,5,1.436,6,1.436,7,1.436,8,0.201,10,1.436,11,3.078,12,2.912,14,2.02,16,0.442,17,0.02,18,1.287,19,0.201,20,0.062,21,1.287,22,2.02,23,1.717,24,1.436,25,2.671,26,1.436,27,0.913,28,1.436,29,1.221,30,1.436,31,2.155,32,2.465,33,1.436,34,2.544,35,1.436,36,1.221,37,1.436,38,1.221,39,1.436,40,1.221,41,1.436,42,1.221,43,1.436,44,1.221,45,1.436,46,1.221,47,1.436,48,1.221,49,0.697,50,1.436,51,1.436,52,0.012,53,0.012,88,5.772,124,2.121,130,0.18,131,1.399,135,1.454,137,0.946,144,1.717,152,0.79,156,0.946,157,0.441,158,1.046,166,0.471,188,1.032,229,0.734,346,0.79,348,1.322,360,1.322,373,1.614,376,2.269,379,5.036,380,2.578,381,3.657,382,3.573,383,4.642,385,1.548,387,4.133,390,3.236,391,3.573,392,2.853,393,2.308,394,3.198,395,4.243,396,3.657,397,3.198,398,2.853,399,2.269,400,3.945,401,2.982,402,2.474,403,2.121,408,3.573,409,3.245,411,1.833,412,1.833,413,3.236,414,1.833,415,2.139,416,1.833,419,2.541,420,3.754,426,2.541,427,4.013,428,3.573,429,3.573,430,2.541,431,1.966,433,2.853,434,6.732,435,3.328,436,6.419,437,5.413,438,4.68,439,3.573,440,6.189,441,3.328,442,3.328,443,2.848,444,3.328,445,3.328,446,3.328,447,3.328,448,3.328,449,3.328,450,3.328,451,3.328,452,4.013,453,2.308,454,3.328,455,2.853,456,3.328,457,3.328,458,3.328,459,3.573,460,4.013,461,2.853,462,2.853,463,1.833,464,3.328,465,2.853,466,3.328,467,3.328,468,3.328,469,3.328,470,3.328,471,3.328,472,2.853,473,2.853,474,3.328,475,2.541,476,2.853]],["title/components/ControlsComponent.html",[0,0.814,34,1.354]],["body/components/ControlsComponent.html",[0,1.326,1,1.496,2,2.08,3,0.324,4,0.22,5,1.76,6,1.76,7,1.76,8,0.246,10,1.76,11,3.175,12,3.004,14,2.32,16,0.385,17,0.02,18,1.578,19,0.246,20,0.076,21,1.578,22,2.32,23,1.972,24,1.76,25,2.945,26,1.76,27,0.907,28,1.76,29,1.496,30,1.76,31,1.496,32,2.376,33,1.76,34,2.346,35,1.76,36,1.496,37,1.76,38,1.496,39,1.76,40,1.496,41,1.76,42,1.496,43,1.76,44,1.496,45,1.76,46,1.496,47,1.76,48,1.496,49,0.854,50,1.76,51,1.76,52,0.014,53,0.014,130,0.29,135,1.326,144,2.104,157,0.359,166,0.852,315,1.496,360,1.623,373,1.978,376,2.607,380,2.961,381,3.777,385,2.115,390,3.313,394,3.176,395,3.777,396,2.41,397,2.41,399,2.607,400,3.833,401,3.313,402,1.864,403,3.833,404,3.728,405,3.728,408,3.114,409,2.828,411,2.961,412,2.247,413,2.247,414,2.247,415,2.457,416,2.247,417,2.41,419,3.114,420,2.828,421,1.665,422,2.41,424,3.176,431,3.176,443,2.607,459,3.114,460,3.497,462,3.497,472,3.497,477,4.078,478,6.013,479,5.376,480,4.607,481,5.376,482,4.078,483,3.497,484,2.828,485,3.497,486,4.078,487,4.61,488,4.078,489,3.497]],["title/components/CursorComponent.html",[0,0.814,36,1.354]],["body/components/CursorComponent.html",[0,1.114,1,1.079,2,1.657,3,0.258,4,0.159,5,1.269,6,1.269,7,1.269,8,0.177,10,1.269,11,3.013,12,2.85,14,1.849,16,0.278,17,0.02,18,1.137,19,0.177,20,0.055,21,1.137,22,1.849,23,1.571,24,1.269,25,2.812,26,1.269,27,0.723,28,1.269,29,1.079,30,1.269,31,1.079,32,1.024,33,1.269,34,1.079,35,1.269,36,2.037,37,1.269,38,1.079,39,1.269,40,1.079,41,1.269,42,1.079,43,1.269,44,1.079,45,1.269,46,1.079,47,1.269,48,1.079,49,0.616,50,1.269,51,1.269,52,0.011,53,0.011,124,4.359,130,0.231,135,1.437,144,1.517,148,0.436,152,0.723,157,0.425,166,0.716,302,0.648,315,2.165,348,1.046,349,1.298,360,1.689,373,1.426,376,2.077,380,2.359,381,3.279,385,2.288,390,3.589,393,2.039,394,1.737,395,3.756,396,2.985,397,1.737,399,2.986,400,1.874,401,3.25,402,1.344,403,1.874,404,2.97,405,2.97,406,2.521,411,3.25,412,1.62,413,1.62,414,1.62,415,1.957,416,1.62,417,2.53,418,3.177,420,2.97,421,1.201,424,4.124,426,2.245,428,4.238,429,3.27,430,2.245,431,3.756,443,2.986,452,4.332,453,2.97,455,2.521,459,2.245,461,2.521,465,2.521,475,3.27,480,3.849,484,4.091,485,2.521,487,5.059,489,2.521,490,2.94,491,5.052,492,4.283,493,6.158,494,5.9,495,4.759,496,4.283,497,2.94,498,2.94,499,2.94,500,2.94,501,2.94,502,2.94,503,2.521,504,2.864,505,3.503,506,2.94,507,3.672,508,2.94,509,3.27,510,4.283,511,4.283,512,3.672,513,3.27,514,2.94,515,2.94,516,4.283,517,5.052,518,6.749,519,5.052,520,5.052,521,4.283,522,5.551,523,4.283,524,4.283,525,4.283,526,2.94,527,4.283,528,4.283,529,4.283,530,4.283,531,2.94,532,2.94,533,2.94,534,3.672,535,2.94,536,5.551,537,2.94,538,2.94,539,4.283,540,2.94,541,2.94]],["title/classes/ExteriorMapPlane.html",[20,0.069,542,2.352]],["body/classes/ExteriorMapPlane.html",[3,0.266,4,0.238,8,0.266,16,0.622,17,0.02,19,0.266,20,0.083,27,0.955,49,1.308,52,0.015,53,0.015,98,1.645,128,1.537,130,0.238,131,1.691,135,1.377,137,1.608,141,1.078,147,0.771,148,0.67,152,1.054,156,1.608,157,0.378,158,1.779,161,1.248,164,1.382,166,0.802,188,0.973,244,1.537,251,0.956,252,2.076,289,1.618,290,1.078,318,1.45,353,3.343,354,3.343,360,1.078,542,3.607,543,4.412,544,4.852,545,4.852,546,2.813,547,2.373,548,4.025,549,2.416,550,3.011,551,4.412,552,4.412,553,2.607,554,4.412,555,3.117,556,3.369,557,2.431,558,1.904,559,2.431,560,3.783,561,4.412,562,4.412,563,3.923,564,5.658,565,4.412,566,4.412,567,4.412,568,4.412,569,3.117,570,2.431,571,4.412,572,3.783]],["title/classes/ExteriorMethod.html",[20,0.069,573,2.352]],["body/classes/ExteriorMethod.html",[3,0.121,4,0.269,8,0.121,16,0.562,17,0.02,19,0.121,20,0.038,27,0.939,32,1.392,49,0.954,52,0.008,53,0.008,98,1.417,128,0.701,130,0.109,131,0.958,135,1.557,137,1.802,141,0.491,147,0.764,148,0.672,152,0.674,156,1.581,157,0.457,158,1.749,161,0.707,164,0.783,166,0.454,168,0.975,176,1.587,181,1.171,188,1.374,202,0.868,211,0.975,222,1.587,229,1.005,248,0.214,251,0.904,259,0.821,268,1.279,269,1.568,289,1.292,290,1.782,302,1.005,318,1.058,328,1.554,338,0.632,346,0.541,347,2.801,348,1.454,349,1.363,350,2.492,351,1.188,352,1.282,353,3.133,354,3.413,360,1.573,364,1.926,366,2.043,367,1.038,372,2.043,385,1.841,399,2.414,415,0.919,418,1.038,422,1.188,443,0.975,542,3.173,546,1.282,547,1.847,549,2.152,550,2.424,557,1.108,558,0.868,563,3.452,573,2.043,574,1.395,575,3.016,576,2.547,577,3.051,578,2.547,579,3.051,580,3.051,581,3.051,582,2.547,583,3.051,584,3.051,585,2.21,586,2.223,587,2.447,588,2.223,589,2.223,590,2.223,591,1.938,592,2.21,593,2.21,594,2.351,595,1.861,596,2.771,597,2.083,598,2.083,599,3.205,600,3.051,601,2.011,602,3.801,603,2.011,604,2.011,605,2.011,606,2.361,607,2.011,608,2.011,609,2.011,610,2.011,611,2.011,612,2.547,613,2.011,614,2.011,615,4.397,616,2.011,617,2.011,618,1.654,619,2.011,620,2.011,621,1.654,622,2.011,623,2.361,624,2.447,625,2.011,626,2.447,627,2.011,628,1.654,629,2.011,630,1.536,631,2.542,632,2.414,633,2.414,634,2.011,635,2.011,636,2.011,637,2.011,638,2.447,639,1.536,640,1.395,641,1.536,642,3.452,643,1.282,644,1.395,645,1.395,646,2.771,647,1.536,648,1.536,649,1.536,650,1.536,651,2.223,652,1.395,653,2.223,654,1.282,655,1.536,656,3.48,657,3.48,658,1.536,659,2.547,660,2.878,661,3.051,662,1.536,663,2.447,664,1.536,665,2.447,666,4.049,667,2.447,668,1.536,669,3.801,670,1.536,671,3.801,672,3.051,673,1.536,674,1.536,675,1.536,676,1.536,677,1.536,678,1.654,679,1.536,680,1.536,681,1.536,682,3.051,683,1.536,684,1.536,685,1.536,686,1.395,687,1.395,688,1.536,689,1.536,690,1.188,691,1.395,692,1.536,693,1.536,694,1.536,695,2.447,696,3.48,697,1.536,698,1.536,699,3.801,700,3.051,701,3.051,702,1.536,703,1.536,704,1.536,705,1.536,706,1.536,707,1.536,708,1.536,709,1.536,710,1.536,711,1.536,712,1.536,713,1.536,714,1.536,715,1.536,716,0.975,717,1.536,718,1.536,719,1.536,720,1.536,721,1.536,722,1.536]],["title/interfaces/ExteriorTilePanorama.html",[248,0.247,550,1.686]],["body/interfaces/ExteriorTilePanorama.html",[3,0.304,4,0.272,8,0.304,17,0.02,19,0.417,52,0.016,53,0.016,130,0.272,147,0.59,148,0.513,152,1.242,157,0.411,164,1.621,248,0.482,251,0.96,269,1.295,316,2.175,318,1.17,344,1.506,346,1.037,348,1.231,349,1.295,547,1.755,550,3.032,723,3.212,724,4.082,725,4.404,726,3.387,727,3.212,728,2.444,729,2.444,730,2.444,731,2.444,732,3.212,733,3.212,734,3.212,735,3.172,736,3.633,737,2.776,738,3.212,739,2.776,740,2.977,741,3.212]],["title/interfaces/HandheldShape.html",[248,0.247,736,2.18]],["body/interfaces/HandheldShape.html",[3,0.299,4,0.268,8,0.299,17,0.02,19,0.415,52,0.016,53,0.016,130,0.268,147,0.58,148,0.505,152,1.256,157,0.48,164,1.487,248,0.48,251,0.956,269,1.693,316,2.965,318,1.151,344,1.482,346,1.027,348,1.212,349,1.274,547,1.727,550,2.782,723,3.161,724,3.893,725,3.161,726,3.354,727,3.161,728,2.405,729,2.405,730,2.405,731,2.405,732,3.161,733,3.161,734,3.161,735,3.141,736,3.893,737,2.732,738,3.161,739,2.732,740,2.93,741,3.161]],["title/components/HomepagePage.html",[0,0.814,38,1.354]],["body/components/HomepagePage.html",[0,0.751,1,0.585,2,1.026,3,0.16,4,0.086,5,0.688,6,0.688,7,0.688,8,0.096,10,0.688,11,2.611,12,2.47,14,1.145,16,0.375,17,0.02,18,0.617,19,0.096,20,0.03,21,0.617,22,1.145,23,0.973,24,0.688,25,1.713,26,0.688,27,0.803,28,0.688,29,0.585,30,0.688,31,0.585,32,1.186,33,0.688,34,0.585,35,0.688,36,0.585,37,0.688,38,1.457,39,0.688,40,0.585,41,0.688,42,0.585,43,0.688,44,0.585,45,0.688,46,0.585,47,0.688,48,0.585,49,0.923,50,0.688,51,0.688,52,0.007,53,0.007,65,1.218,76,1.218,98,0.616,104,3.283,130,0.086,131,0.793,135,1.586,137,1.798,141,0.39,148,0.347,152,1.038,153,0.823,156,1.128,157,0.472,158,1.496,159,1.286,166,0.226,169,1.876,188,1.548,214,0.879,229,0.352,251,0.454,268,1.768,286,1.083,310,2.137,338,2.246,346,0.448,350,0.651,358,3.02,360,0.39,363,2.048,364,2.568,367,1.369,381,2.012,385,2.212,439,5.665,453,2.362,476,3.404,484,1.106,495,2.921,505,1.106,534,1.367,549,1.026,586,2.753,592,1.925,593,1.925,595,1.391,660,1.145,690,0.942,726,1.876,739,1.461,742,1.595,743,2.275,744,2.921,745,3.406,746,2.653,747,2.653,748,3.97,749,3.406,750,3.406,751,3.406,752,3.406,753,3.406,754,3.406,755,3.406,756,3.406,757,3.406,758,5.482,759,4.976,760,3.406,761,2.921,762,3.406,763,3.406,764,3.97,765,2.653,766,3.97,767,3.97,768,3.97,769,3.406,770,3.97,771,3.97,772,3.97,773,3.97,774,3.404,775,2.653,776,3.97,777,2.653,778,2.653,779,3.406,780,1.595,781,3.97,782,3.406,783,3.97,784,1.595,785,2.653,786,5.482,787,1.595,788,5.043,789,2.653,790,2.653,791,1.595,792,2.653,793,1.595,794,1.595,795,1.595,796,1.595,797,2.653,798,1.595,799,1.595,800,1.595,801,1.595,802,1.595,803,1.595,804,3.406,805,2.653,806,2.653,807,2.653,808,1.595,809,1.595,810,1.595,811,1.595,812,3.406,813,2.653,814,1.595,815,1.595,816,1.595,817,3.406,818,3.406,819,1.595,820,2.653,821,1.595,822,4.757,823,1.595,824,1.595,825,1.595,826,2.653,827,1.595,828,2.653,829,1.595,830,2.653,831,2.653,832,1.595,833,1.595,834,1.595,835,1.595,836,2.653,837,1.595,838,4.757,839,1.595,840,2.653,841,2.275,842,2.653,843,2.653,844,3.97,845,1.595,846,1.595,847,2.653,848,1.595,849,1.595,850,2.653,851,1.595,852,1.595,853,1.595,854,1.595,855,1.595,856,1.367,857,2.275,858,1.218,859,1.595,860,2.653,861,1.595,862,1.595,863,1.595,864,1.595,865,1.595,866,2.653,867,2.653,868,5.281,869,1.595,870,3.406,871,1.595,872,1.595,873,1.595,874,1.595,875,2.653,876,1.595,877,1.369,878,1.595,879,2.653,880,2.653,881,1.595,882,1.595,883,1.595,884,1.595,885,1.595,886,2.653,887,1.595,888,1.595,889,1.595,890,2.653,891,1.367,892,1.595,893,1.595,894,1.595,895,1.017,896,1.017,897,3.406,898,3.406,899,4.408,900,1.595,901,2.653,902,1.595,903,1.595,904,1.595,905,2.653,906,1.595,907,1.595,908,1.595,909,1.595,910,1.595,911,1.595,912,1.595,913,1.595,914,1.595,915,4.408,916,3.406,917,1.595,918,2.653,919,1.595,920,1.595,921,1.595,922,1.595,923,1.595,924,1.595,925,1.595,926,2.653,927,2.653,928,2.653,929,2.653,930,4.757,931,2.653,932,2.653,933,2.653,934,2.653,935,2.653,936,2.653,937,2.653,938,2.653]],["title/components/InfoMessageComponent.html",[0,0.814,40,1.354]],["body/components/InfoMessageComponent.html",[0,1.251,1,1.333,2,1.925,3,0.441,4,0.196,5,1.568,6,1.568,7,1.568,8,0.219,10,1.568,11,3.122,12,2.953,14,2.147,16,0.343,17,0.02,18,1.406,19,0.219,20,0.068,21,1.406,22,2.147,23,1.825,24,1.568,25,2.758,26,1.568,27,0.839,28,1.568,29,1.333,30,1.568,31,1.333,32,1.266,33,1.568,34,1.333,35,1.568,36,1.333,37,1.568,38,1.333,39,1.568,40,2.238,41,1.568,42,1.333,43,1.568,44,1.333,45,1.568,46,1.333,47,1.568,48,1.333,49,0.761,50,1.568,51,1.568,52,0.013,53,0.013,92,4.864,124,2.316,130,0.269,135,1.097,144,1.875,157,0.243,166,0.804,221,1.875,302,0.801,315,2.238,348,1.215,349,1.279,360,1.386,373,1.762,376,2.412,380,2.741,385,1.646,390,2.741,393,2.52,395,2.939,396,2.147,397,2.147,399,2.412,401,2.002,411,2.002,412,2.741,413,2.002,414,2.002,415,2.273,416,2.002,417,3.351,418,2.927,421,1.484,422,2.147,424,3.898,431,4.21,443,2.751,475,2.775,480,4.23,484,3.934,503,3.116,504,3.147,505,2.52,507,3.116,509,2.775,513,2.775,759,5.231,939,5.673,940,3.634,941,5.673,942,4.975,943,4.975,944,3.116,945,3.634,946,3.634,947,3.634,948,3.116,949,4.975,950,3.634,951,3.634,952,3.634,953,3.116,954,4.975,955,3.634,956,3.634,957,3.634,958,3.116,959,3.634,960,4.266,961,3.634,962,3.634,963,3.634,964,4.975,965,3.634,966,4.864,967,3.634,968,3.634,969,3.634,970,3.634,971,3.634,972,3.634,973,3.634,974,3.634,975,3.634,976,3.634,977,3.634,978,3.634,979,3.634,980,3.634]],["title/classes/InteriorMapCube.html",[20,0.069,981,2.817]],["body/classes/InteriorMapCube.html",[3,0.238,4,0.213,8,0.238,16,0.595,17,0.02,19,0.238,20,0.074,27,0.665,49,1.32,52,0.014,53,0.014,98,1.647,128,1.373,130,0.213,131,1.571,135,1.159,137,1.12,138,1.446,141,0.963,147,0.692,148,0.602,152,0.997,156,1.12,157,0.263,158,1.239,161,1.159,164,1.284,166,0.745,229,1.49,244,1.373,251,0.788,289,1.569,302,1.642,318,1.373,360,1.798,544,4.506,546,2.512,547,2.574,549,2.287,556,3.009,557,2.171,558,1.701,559,2.171,560,5.915,569,2.895,570,2.171,572,3.379,660,2.722,735,3.254,877,2.711,981,4.012,982,3.941,983,3.941,984,3.941,985,2.895,986,3.941,987,2.895,988,6.757,989,3.941,990,5.255,991,3.941,992,3.941,993,3.941,994,2.895,995,3.941,996,3.941,997,3.941,998,3.941,999,2.895,1000,3.941,1001,6.306,1002,3.941,1003,3.941,1004,3.941,1005,2.895,1006,3.941,1007,3.941,1008,3.941,1009,3.941,1010,3.941,1011,3.941,1012,5.255,1013,3.941,1014,3.941,1015,2.895,1016,3.941,1017,3.941,1018,3.941,1019,3.941,1020,3.379,1021,3.941]],["title/classes/InteriorMethod.html",[20,0.069,1022,2.817]],["body/classes/InteriorMethod.html",[3,0.157,4,0.211,8,0.157,16,0.577,17,0.02,19,0.157,20,0.049,23,0.953,27,1.06,32,1.636,49,0.983,52,0.01,53,0.01,98,1.213,128,0.904,130,0.14,131,1.168,135,1.612,137,1.956,147,0.813,148,0.706,152,0.881,156,1.786,157,0.48,158,2.199,161,0.862,164,0.954,166,0.554,176,1.82,181,1.343,188,1.486,222,1.636,229,1.386,244,0.904,251,0.898,252,1.433,259,1.06,268,0.667,269,0.667,289,1.418,290,1.814,302,1.152,318,1.213,346,0.659,348,1.276,349,1.207,350,1.918,351,1.534,364,1.005,385,1.729,463,1.431,546,1.655,549,2.363,557,1.431,558,1.121,575,3.172,576,2.994,578,2.994,582,2.994,585,2.277,586,2.709,587,2.983,588,2.709,589,2.709,590,2.709,591,1.894,592,2.277,593,2.277,594,2.423,595,2.133,596,3.257,597,2.388,598,2.388,606,2.775,612,2.994,615,4.674,618,1.34,621,1.34,623,1.534,628,1.34,630,1.983,631,2.388,632,1.894,633,1.894,640,1.801,652,1.801,653,2.709,654,1.655,659,2.994,686,1.801,687,1.801,690,2.308,691,1.801,735,3.037,981,4.278,1022,2.983,1023,2.227,1024,4.696,1025,4.696,1026,4.696,1027,4.696,1028,4.696,1029,4.696,1030,3.907,1031,4.696,1032,3.907,1033,5.886,1034,2.597,1035,5.389,1036,2.597,1037,2.597,1038,2.597,1039,5.602,1040,2.597,1041,2.597,1042,2.597,1043,2.597,1044,2.983,1045,2.597,1046,2.597,1047,2.597,1048,2.597,1049,2.597,1050,3.907,1051,2.597,1052,2.597,1053,2.597,1054,2.597,1055,2.597,1056,2.597,1057,2.597,1058,2.597,1059,2.597,1060,2.227,1061,2.597,1062,2.227,1063,2.597,1064,1.983,1065,2.597,1066,4.027,1067,2.227,1068,2.597,1069,2.597,1070,3.35,1071,2.597,1072,2.597,1073,2.597,1074,2.597,1075,2.597,1076,2.597,1077,2.597,1078,2.597,1079,2.597,1080,2.597,1081,2.597,1082,2.597,1083,2.597,1084,2.597,1085,2.597,1086,2.597,1087,2.597,1088,2.227,1089,2.597,1090,2.597,1091,3.907,1092,2.597,1093,2.597,1094,2.597,1095,2.597,1096,2.597,1097,2.597,1098,2.597,1099,2.597,1100,2.597,1101,2.597]],["title/interfaces/InteriorTilePanorama.html",[248,0.247,735,1.904]],["body/interfaces/InteriorTilePanorama.html",[3,0.31,4,0.277,8,0.31,17,0.02,19,0.419,52,0.016,53,0.016,147,0.601,148,0.522,152,1.221,157,0.343,164,1.634,248,0.484,251,0.964,269,1.319,316,2.215,318,1.191,344,1.534,348,1.254,349,1.319,547,1.787,550,2.841,723,3.271,724,4.107,725,3.271,726,3.425,727,3.271,728,2.488,729,2.488,730,2.488,731,2.488,732,3.271,733,3.271,734,3.271,735,3.451,736,3.673,737,2.827,738,3.271,739,2.827,740,3.032,741,3.271]],["title/interfaces/LazyPromise.html",[248,0.247,263,1.904]],["body/interfaces/LazyPromise.html",[3,0.163,4,0.146,8,0.163,16,0.38,17,0.02,19,0.321,20,0.09,27,0.899,52,0.01,53,0.01,98,1.654,104,1.95,130,0.146,138,2.09,141,1.66,146,2.215,147,0.316,148,0.275,149,1.309,150,2.376,151,1.595,152,0.811,153,2.48,154,1.487,156,0.767,157,0.399,159,1.309,161,0.887,162,2.583,163,2.439,164,0.659,165,2.075,166,0.382,167,1.595,168,1.309,169,2.215,170,2.827,171,2.215,172,2.215,173,1.595,174,3.528,175,1.595,176,1.674,177,2.84,178,1.595,179,1.595,180,3.147,181,1.034,182,1.595,183,2.376,184,1.595,185,1.595,186,1.595,187,1.487,188,1.175,189,2.648,190,1.595,191,1.595,192,2.376,193,1.595,194,1.595,195,1.595,196,1.595,197,1.595,198,1.595,199,1.595,200,1.487,201,1.487,202,1.736,203,1.595,204,1.595,205,1.595,206,1.595,207,1.595,208,1.595,209,1.595,210,2.376,211,1.95,212,1.595,213,1.595,214,1.487,215,1.595,216,1.595,217,1.595,218,1.487,219,1.595,220,1.595,221,1.393,222,0.94,223,1.595,224,1.595,225,1.595,226,1.595,227,2.376,228,2.326,229,1.459,230,1.595,231,1.595,232,2.376,233,1.595,234,2.376,235,2.84,236,1.595,237,1.595,238,1.595,239,1.595,240,1.595,241,1.595,242,1.736,243,1.736,244,0.94,245,1.595,246,1.595,247,1.595,248,0.321,249,1.764,250,1.165,251,0.64,252,0.99,253,1.102,254,1.487,255,1.595,256,1.595,257,1.595,258,1.595,259,2.653,260,1.487,261,1.487,262,1.487,263,3.081,264,3.408,265,3.528,266,1.487,267,2.84,268,0.694,269,1.464,270,2.376,271,1.595,272,1.595,273,1.595,274,2.376,275,2.84,276,1.595,277,1.487,278,1.595,279,2.376,280,1.595,281,1.487,282,1.595,283,2.376,284,1.595,285,2.215,286,2.326,287,1.044,288,3.655,289,0.627,290,0.983,291,1.595,292,1.595,293,1.487,294,1.595,295,1.595,296,2.215,297,1.595,298,2.376,299,1.595,300,1.595,301,1.595,302,0.595,303,1.595,304,1.595,305,2.376,306,1.595,307,1.595,308,1.595,309,1.595,310,1.309,311,1.595,312,1.595,313,1.595,314,1.736,315,0.99,316,1.165,317,1.595,318,0.627,319,1.595,320,2.84,321,1.595,322,2.376,323,1.595,324,1.393,325,1.165,326,1.595,327,1.595,328,1.309,329,1.393,330,1.595,331,1.762,332,1.487,333,1.595,334,1.595,335,1.595,336,1.595,337,1.595,338,0.849,339,1.595,340,1.595,341,1.595,342,1.595,344,0.807,346,0.679]],["title/components/LoaderComponent.html",[0,0.814,42,1.354]],["body/components/LoaderComponent.html",[0,1.271,1,1.374,2,1.965,3,0.306,4,0.202,5,1.617,6,1.617,7,1.617,8,0.226,10,1.617,11,3.136,12,2.967,14,2.192,16,0.354,17,0.02,18,1.449,19,0.226,20,0.07,21,1.449,22,2.192,23,1.863,24,1.617,25,2.666,26,1.617,27,0.857,28,1.617,29,1.374,30,1.617,31,1.374,32,1.305,33,1.617,34,1.374,35,1.617,36,1.374,37,1.617,38,1.374,39,1.617,40,1.374,41,1.617,42,2.267,43,1.617,44,1.374,45,1.617,46,1.374,47,1.617,48,1.374,49,0.784,50,1.617,51,1.617,52,0.013,53,0.013,130,0.274,135,1.271,144,2.973,157,0.339,166,0.816,315,1.863,324,3.332,348,1.408,349,1.481,360,1.408,373,1.816,376,2.463,380,2.798,381,3.65,385,2.044,390,3.174,394,2.213,395,4.149,396,3.934,397,3.65,400,4.244,402,3.043,403,3.237,404,2.597,405,2.597,409,3.522,411,2.798,412,2.064,413,2.064,414,2.064,415,2.321,416,2.064,417,3.001,418,2.973,421,1.53,424,4.233,431,3.65,443,2.794,473,4.355,504,1.933,505,3.522,509,2.86,512,3.212,513,2.86,944,4.355,953,3.212,958,3.212,1102,3.746,1103,5.762,1104,5.079,1105,6.178,1106,5.079,1107,3.746,1108,6.178,1109,3.746,1110,5.079,1111,3.746,1112,3.746,1113,3.746,1114,5.079,1115,5.079,1116,3.746,1117,3.746,1118,3.212,1119,3.746,1120,3.746]],["title/components/MainComponent.html",[0,0.814,44,1.354]],["body/components/MainComponent.html",[0,1.397,1,1.669,2,2.232,3,0.348,4,0.246,5,1.963,6,1.963,7,1.963,8,0.274,10,1.963,11,3.221,12,3.047,14,2.49,16,0.429,17,0.02,18,1.76,19,0.274,20,0.085,21,1.76,22,2.49,23,2.117,24,1.963,25,2.875,26,1.963,27,0.973,28,1.963,29,1.669,30,1.963,31,1.669,32,1.584,33,1.963,34,1.669,35,1.963,36,1.669,37,1.963,38,1.669,39,1.963,40,1.669,41,1.963,42,1.669,43,1.963,44,2.445,45,1.963,46,1.669,47,1.963,48,1.669,49,0.952,50,1.963,51,1.963,52,0.015,53,0.015,130,0.246,131,1.724,135,1.397,137,1.293,157,0.304,166,0.898,188,1.272,229,1.003,373,2.206,376,2.797,382,4.405,387,4.837,391,4.405,1121,4.548,1122,5.769,1123,6.335,1124,5.769,1125,6.662,1126,6.335,1127,4.548,1128,4.548,1129,4.548,1130,4.548]],["title/interfaces/Manifest.html",[248,0.247,737,2.032]],["body/interfaces/Manifest.html",[3,0.284,4,0.254,8,0.284,17,0.02,19,0.407,52,0.015,53,0.015,130,0.254,147,0.551,148,0.479,152,1.246,157,0.481,158,1.854,164,1.44,248,0.474,251,0.984,269,1.21,316,2.032,318,1.566,344,1.408,346,0.995,348,1.15,349,1.21,547,1.64,550,3.083,723,3.002,724,3.803,725,3.002,726,3.827,727,3.002,728,2.283,729,2.283,730,2.283,731,2.283,732,3.002,733,3.002,734,3.002,735,3.481,736,3.986,737,3.248,738,4.3,739,3.717,740,3.986,741,4.3]],["title/interfaces/ManifestRenderer.html",[248,0.247,1131,2.817]],["body/interfaces/ManifestRenderer.html",[3,0.178,4,0.273,8,0.178,16,0.601,17,0.02,19,0.305,49,0.618,52,0.011,53,0.011,98,1.514,130,0.159,132,3.681,138,1.082,141,1.236,147,0.345,148,0.3,152,0.498,153,2.215,154,1.625,157,0.467,159,2.082,161,0.65,162,2.082,170,3.385,176,1.936,181,1.518,188,1.489,201,1.625,202,1.273,228,2.27,229,1.489,248,0.197,251,0.674,259,1.753,269,1.103,281,2.365,287,1.661,289,0.685,296,1.625,318,0.685,324,2.611,329,2.215,338,0.927,344,0.882,346,0.724,347,1.43,348,1.236,349,1.103,350,2.067,351,1.743,356,2.529,360,1.506,364,1.141,385,1.839,549,2.15,557,1.625,558,1.273,573,2.736,575,1.962,585,2.864,588,4.096,589,4.096,590,4.096,591,2.864,595,2.27,597,2.313,598,2.313,623,1.743,631,2.699,632,2.454,633,2.454,690,1.743,737,3.062,739,3.062,740,3.284,858,2.252,891,2.529,1020,2.529,1022,3.278,1064,3.278,1070,2.529,1131,3.865,1132,2.529,1133,6.165,1134,6.165,1135,5.907,1136,5.907,1137,5.907,1138,4.293,1139,5.061,1140,2.949,1141,2.949,1142,2.949,1143,2.529,1144,2.949,1145,2.949,1146,2.949,1147,5.061,1148,2.949,1149,2.949,1150,2.949,1151,2.949,1152,2.949,1153,2.529,1154,2.949,1155,2.529,1156,2.949,1157,2.949,1158,2.949,1159,2.949,1160,2.949,1161,2.949,1162,2.949,1163,5.559,1164,4.293,1165,2.949,1166,4.293,1167,4.293,1168,2.949,1169,4.293,1170,4.293,1171,2.949,1172,2.949,1173,2.949,1174,4.293,1175,4.293,1176,2.949,1177,2.949,1178,2.949,1179,2.949,1180,2.949,1181,2.949,1182,2.949,1183,2.949,1184,2.949,1185,2.949,1186,2.949,1187,2.949,1188,2.949,1189,2.949,1190,2.949,1191,2.949,1192,2.949,1193,2.949,1194,2.949,1195,2.949,1196,2.949,1197,2.949,1198,2.949,1199,2.949]],["title/classes/OrthographicTileMesh.html",[20,0.069,555,2.032]],["body/classes/OrthographicTileMesh.html",[3,0.147,4,0.131,8,0.147,16,0.351,17,0.02,19,0.272,20,0.084,27,0.919,49,0.779,52,0.01,53,0.01,98,1.174,128,0.848,130,0.131,131,1.112,135,1.513,137,1.751,141,1.103,147,0.528,148,0.459,152,1.196,156,1.548,157,0.444,158,1.712,160,1.438,161,0.82,163,1.519,164,1.235,166,0.716,181,1.399,188,1.317,228,0.994,229,0.82,242,1.051,243,1.606,244,2,248,0.249,249,2.316,250,2.182,251,0.921,252,2.192,253,2.439,268,0.626,269,0.626,286,1.519,287,1.439,289,1.466,290,1.783,302,1.445,314,2.659,318,1.387,325,1.051,331,0.805,338,1.42,346,0.628,360,1.732,364,0.942,402,1.112,421,1.519,463,3.81,504,1.256,545,3.19,547,2.081,548,3.217,553,2.198,555,2.049,559,1.341,569,2.785,570,1.341,615,4.664,660,1.606,678,1.256,716,1.804,877,2.329,985,1.341,987,1.341,994,1.341,999,2.487,1005,1.341,1015,1.341,1200,1.438,1201,3.906,1202,2.878,1203,2.878,1204,2.878,1205,4.024,1206,3.222,1207,3.222,1208,3.222,1209,3.222,1210,2.84,1211,2.84,1212,1.859,1213,2.434,1214,2.087,1215,2.986,1216,2.087,1217,2.087,1218,2.087,1219,2.087,1220,2.087,1221,2.434,1222,2.087,1223,2.087,1224,2.087,1225,2.087,1226,2.371,1227,2.087,1228,2.371,1229,2.371,1230,2.087,1231,2.371,1232,2.087,1233,2.371,1234,2.667,1235,2.371,1236,1.552,1237,1.552,1238,1.552,1239,3.66,1240,2.371,1241,2.371,1242,2.878,1243,1.552,1244,3.222,1245,2.878,1246,2.878,1247,2.371,1248,2.371,1249,1.552,1250,2.371,1251,2.371,1252,2.371,1253,1.552,1254,2.371,1255,1.552,1256,1.552,1257,2.371,1258,2.371,1259,2.371,1260,2.371,1261,2.371,1262,2.371,1263,1.552,1264,1.552,1265,1.552,1266,1.552,1267,1.552,1268,1.552,1269,1.552,1270,1.552,1271,2.371,1272,1.552,1273,1.552,1274,1.552,1275,1.552,1276,1.552,1277,1.552,1278,1.552,1279,1.552,1280,2.371,1281,1.552,1282,1.552,1283,1.552,1284,1.552,1285,1.552,1286,1.552,1287,1.552,1288,1.552,1289,1.552]],["title/components/PageComponent.html",[0,0.814,46,1.354]],["body/components/PageComponent.html",[0,1.416,1,1.719,2,2.274,3,0.355,4,0.253,5,2.022,6,2.022,7,2.022,8,0.283,10,2.022,11,3.233,12,3.059,14,2.537,16,0.442,17,0.02,18,1.813,19,0.283,20,0.088,21,1.813,22,2.537,23,2.157,24,2.022,25,2.907,26,2.022,27,0.992,28,2.022,29,1.719,30,2.022,31,1.719,32,1.632,33,2.022,34,1.719,35,2.022,36,1.719,37,2.022,38,1.719,39,2.022,40,1.719,41,2.022,42,1.719,43,2.022,44,1.719,45,2.022,46,2.471,47,2.022,48,1.719,49,0.981,50,2.022,51,2.022,52,0.015,53,0.015,130,0.253,135,1.033,166,0.91,302,1.033,315,1.719,348,1.145,349,1.204,373,2.272,376,2.85,421,1.913,480,3.249,483,4.017,948,4.017,1290,4.685,1291,5.507,1292,6.422,1293,5.878,1294,4.685,1295,4.017,1296,4.017]],["title/classes/PerspectiveTileMesh.html",[20,0.069,985,2.032]],["body/classes/PerspectiveTileMesh.html",[3,0.149,4,0.133,8,0.149,16,0.355,17,0.02,19,0.275,20,0.085,27,0.859,49,0.788,52,0.01,53,0.01,98,1.183,128,0.861,130,0.133,131,1.125,135,1.517,137,1.707,141,1.113,147,0.533,148,0.464,152,1.17,156,1.448,157,0.446,158,1.602,160,1.46,161,0.83,163,1.536,164,1.244,166,0.722,181,1.409,188,1.274,228,1.009,229,0.83,242,1.066,243,1.624,244,2.011,248,0.251,249,2.326,250,2.199,251,0.888,252,2.011,253,2.238,268,0.635,269,0.635,286,1.536,287,1.456,289,1.472,290,1.786,302,1.45,314,2.671,318,1.394,325,1.066,331,0.818,338,1.433,346,0.635,360,1.736,364,0.956,402,1.129,421,1.536,463,3.82,504,1.275,547,2.091,548,2.223,553,1.46,555,1.361,559,1.361,569,3.409,570,1.361,615,4.678,660,1.624,678,1.275,716,1.824,877,2.351,985,2.073,987,1.361,994,1.361,999,2.51,1005,1.361,1015,1.361,1200,1.46,1201,3.914,1202,2.904,1203,2.904,1204,2.904,1205,4.042,1206,3.247,1207,3.247,1208,3.247,1209,3.247,1210,2.873,1211,2.873,1212,1.887,1214,2.119,1215,3.01,1216,2.119,1217,2.119,1218,2.119,1219,2.119,1220,2.119,1222,2.119,1223,2.119,1224,2.119,1225,2.119,1226,2.398,1227,2.119,1228,2.398,1229,2.398,1230,2.119,1231,2.398,1232,2.119,1233,2.398,1234,3.412,1235,2.398,1236,1.575,1237,1.575,1238,1.575,1239,3.681,1240,2.398,1241,2.398,1242,2.904,1243,1.575,1244,3.247,1245,2.904,1246,2.904,1247,2.398,1248,2.398,1249,1.575,1250,2.398,1251,2.398,1252,2.398,1253,1.575,1254,2.398,1255,1.575,1256,1.575,1257,2.398,1258,2.398,1259,2.398,1260,2.398,1261,2.398,1262,2.398,1263,1.575,1264,1.575,1265,1.575,1266,1.575,1267,1.575,1268,1.575,1269,1.575,1270,1.575,1271,2.398,1272,1.575,1273,1.575,1274,1.575,1275,1.575,1276,1.575,1277,1.575,1278,1.575,1279,1.575,1280,2.398,1281,1.575,1282,1.575,1283,1.575,1284,1.575,1285,1.575,1286,1.575,1287,1.575,1288,1.575,1289,1.575,1297,3.763]],["title/components/PreloadComponent.html",[0,0.814,48,1.354]],["body/components/PreloadComponent.html",[0,1.296,1,1.428,2,2.016,3,0.314,4,0.21,5,2.249,6,1.68,7,1.68,8,0.235,10,1.68,11,3.154,12,2.984,14,2.249,16,0.367,17,0.02,18,1.505,19,0.235,20,0.073,21,1.505,22,2.249,23,1.912,24,1.68,25,2.708,26,1.68,27,0.879,28,1.68,29,1.428,30,1.68,31,1.428,32,1.355,33,1.68,34,1.428,35,1.68,36,1.428,37,1.68,38,1.428,39,1.68,40,1.428,41,1.68,42,1.428,43,1.68,44,1.428,45,1.68,46,1.428,47,1.68,48,2.302,49,1.314,50,1.68,51,1.68,52,0.014,53,0.014,130,0.281,131,1.558,135,1.443,137,1.106,144,2.008,152,1.059,157,0.393,166,0.832,188,1.149,189,3.236,251,0.836,252,1.428,253,1.589,268,1.51,302,0.858,315,1.428,346,0.879,348,1.273,349,1.339,360,1.68,363,2.689,364,2.273,373,1.887,376,2.527,380,2.871,390,3.236,394,3.471,411,3.236,412,2.144,413,2.144,414,2.144,415,2.381,416,2.144,417,2.299,418,2.008,421,1.589,424,3.079,439,4.486,443,1.887,453,4.536,643,2.481,726,3.236,743,4.468,744,5.037,774,5.38,960,3.337,1118,3.337,1295,3.337,1296,3.337,1298,3.892,1299,5.875,1300,5.211,1301,5.211,1302,3.892,1303,3.892,1304,3.892,1305,3.892,1306,3.892,1307,5.211,1308,3.892,1309,3.892,1310,3.892,1311,3.892]],["title/interfaces/RenderCallbacks.html",[248,0.247,597,1.686]],["body/interfaces/RenderCallbacks.html",[3,0.271,4,0.309,8,0.271,16,0.54,17,0.02,19,0.413,20,0.084,49,0.94,52,0.015,53,0.015,130,0.242,138,1.647,147,0.526,148,0.457,157,0.458,161,0.99,166,0.811,170,3.03,176,1.564,181,1.154,188,1.643,222,1.564,248,0.421,251,0.96,268,1.154,289,1.462,290,1.62,331,1.486,344,1.342,346,0.965,347,2.177,348,1.398,349,1.154,350,2.796,358,2.474,363,2.317,367,2.317,385,1.893,549,1.737,558,1.938,575,2.052,585,2.177,591,2.177,592,2.177,593,2.177,594,2.317,595,2.571,597,2.878,598,2.615,618,2.317,621,2.317,628,2.317,631,2.878,632,2.177,633,2.177,728,2.177,729,2.177,730,2.177,731,2.177,895,4.227,896,4.227,1312,2.862,1313,5.043,1314,3.114,1315,3.114,1316,3.114]],["title/classes/RenderFrustum.html",[20,0.069,606,2.18]],["body/classes/RenderFrustum.html",[3,0.252,4,0.226,8,0.252,16,0.516,17,0.02,19,0.252,20,0.078,27,1.027,52,0.014,53,0.014,98,1.413,128,1.457,130,0.226,131,1.634,135,1.543,137,1.553,141,1.022,147,0.831,148,0.722,156,1.73,157,0.468,158,1.914,161,1.205,166,0.593,188,0.922,229,1.424,244,1.457,251,0.811,290,1.794,346,0.922,556,3.193,576,4.461,578,3.88,582,4.269,606,3.229,612,4.269,654,2.666,659,2.666,716,2.028,1035,5.22,1088,3.586,1201,3.011,1317,4.182,1318,6.088,1319,5.465,1320,5.465,1321,5.465,1322,6.698,1323,5.465,1324,4.182,1325,6.088,1326,6.088,1327,4.182,1328,4.182,1329,5.465,1330,4.182,1331,4.182,1332,5.465,1333,4.182,1334,4.182,1335,4.182,1336,4.182,1337,4.182,1338,4.182,1339,5.465,1340,3.586,1341,4.182,1342,5.465,1343,4.182,1344,4.182,1345,4.182,1346,4.182,1347,4.182,1348,4.182,1349,4.182]],["title/classes/RenderMethod.html",[20,0.069,575,1.686]],["body/classes/RenderMethod.html",[3,0.201,4,0.292,8,0.201,16,0.442,17,0.02,19,0.374,20,0.062,27,1.113,49,1.23,52,0.012,53,0.012,128,1.16,130,0.18,131,1.4,135,1.573,137,2.012,138,1.719,147,0.841,148,0.731,156,1.875,157,0.464,158,2.272,160,1.968,161,0.735,166,0.767,176,1.887,181,1.392,188,1.645,222,2.047,248,0.362,251,0.968,259,1.36,268,0.856,289,1.491,290,1.436,331,1.102,347,1.616,348,1.436,349,1.204,350,2.75,358,1.835,363,1.719,367,1.719,385,2.125,546,2.124,549,1.289,558,1.438,575,2.14,585,2.85,586,3.248,587,3.576,588,3.248,589,3.248,590,3.248,591,2.627,592,2.85,593,2.85,594,3.032,595,2.693,597,2.685,598,2.685,618,2.417,621,2.417,623,1.968,628,2.417,630,2.544,631,3.014,632,2.627,633,2.627,728,1.616,729,1.616,730,1.616,731,1.616,895,2.124,896,2.124,1060,2.857,1062,2.857,1064,2.544,1312,2.124,1313,5.184,1314,2.31,1315,2.31,1316,2.31,1350,3.332,1351,3.332,1352,3.332,1353,3.332,1354,3.332,1355,3.332,1356,3.332,1357,3.332,1358,3.332,1359,3.332,1360,3.332,1361,3.332,1362,3.332]],["title/interfaces/RenderOptions.html",[248,0.247,598,1.686]],["body/interfaces/RenderOptions.html",[3,0.274,4,0.311,8,0.274,16,0.544,17,0.02,19,0.415,20,0.085,49,0.951,52,0.015,53,0.015,130,0.245,138,1.666,147,0.532,148,0.462,157,0.445,161,1.001,166,0.817,176,1.582,181,1.167,188,1.646,222,1.582,248,0.423,251,0.962,268,1.167,289,1.47,290,1.627,331,1.502,344,1.357,346,0.972,347,2.202,348,1.408,349,1.167,350,2.998,358,2.502,363,2.343,367,2.343,385,1.907,549,1.757,558,1.96,575,2.075,585,2.202,591,2.202,592,2.202,593,2.202,594,2.343,595,2.585,597,2.633,598,2.893,618,2.343,621,2.343,628,2.343,631,2.893,632,2.202,633,2.202,728,2.202,729,2.202,730,2.202,731,2.202,895,2.895,896,2.895,1312,2.895,1313,5.053,1314,3.149,1315,3.149,1316,3.149]],["title/classes/TileAbortError.html",[20,0.069,163,1.507]],["body/classes/TileAbortError.html",[3,0.165,4,0.148,8,0.165,16,0.384,17,0.02,19,0.324,20,0.091,27,0.906,52,0.011,53,0.011,98,1.658,104,1.973,128,0.955,135,0.605,138,1.78,141,1.666,146,2.241,147,0.476,148,0.414,149,1.329,150,2.404,151,1.62,152,0.818,153,2.503,154,1.51,156,0.779,157,0.324,159,1.329,161,0.897,162,2.603,163,2.539,164,0.994,165,2.503,166,0.687,167,1.62,168,1.329,169,2.241,170,2.62,171,2.241,172,2.241,173,1.62,174,3.549,175,1.62,176,1.69,177,2.866,178,1.62,179,1.62,180,3.171,181,1.046,182,1.62,183,2.404,184,1.62,185,1.62,186,1.62,187,1.51,188,1.184,189,2.672,190,1.62,191,1.62,192,2.404,193,1.62,194,1.62,195,1.62,196,1.62,197,1.62,198,1.62,199,1.62,200,1.51,201,1.51,202,1.756,203,1.62,204,1.62,205,1.62,206,1.62,207,1.62,208,1.62,209,1.62,210,2.404,211,1.973,212,1.62,213,1.62,214,1.51,215,1.62,216,1.62,217,1.62,218,1.51,219,1.62,220,1.62,221,1.415,222,0.955,223,1.62,224,1.62,225,1.62,226,1.62,227,2.404,228,2.341,229,1.464,230,1.62,231,1.62,232,2.404,233,1.62,234,2.404,235,2.866,236,1.62,237,1.62,238,1.62,239,1.62,240,1.62,241,1.62,242,1.756,243,1.756,244,0.955,245,1.62,246,1.62,247,1.62,248,0.324,249,1.78,250,1.183,251,0.646,252,1.006,253,1.119,254,1.51,255,1.62,256,1.62,257,1.62,258,1.62,259,2.192,260,1.51,261,1.51,262,1.51,263,2.958,264,2.957,265,2.866,266,1.51,267,2.866,268,0.705,269,1.473,270,2.404,271,1.62,272,1.62,273,1.62,274,2.404,275,2.866,276,1.62,277,1.51,278,1.62,279,2.404,280,1.62,281,1.51,282,1.62,283,2.404,284,1.62,285,2.241,286,2.341,287,1.061,288,3.674,289,0.637,290,0.994,291,1.62,292,1.62,293,1.51,294,1.62,295,1.62,296,2.241,297,1.62,298,2.404,299,1.62,300,1.62,301,1.62,302,0.605,303,1.62,304,1.62,305,2.404,306,1.62,307,1.62,308,1.62,309,1.62,310,1.329,311,1.62,312,1.62,313,1.62,314,1.756,315,1.006,316,1.183,317,1.62,318,0.637,319,1.62,320,2.866,321,1.62,322,2.404,323,1.62,324,1.415,325,1.183,326,1.62,327,1.62,328,1.329,329,1.415,330,1.62,331,1.776,332,1.51,333,1.62,334,1.62,335,1.62,336,1.62,337,1.62,338,0.862,339,1.62,340,1.62,341,1.62,342,1.62,1363,2.742]],["title/interfaces/TileJob.html",[248,0.247,285,2.032]],["body/interfaces/TileJob.html",[3,0.163,4,0.146,8,0.163,16,0.381,17,0.02,19,0.322,20,0.09,27,0.9,52,0.01,53,0.01,98,1.655,104,1.954,130,0.146,138,1.767,141,1.661,146,2.22,147,0.317,148,0.275,149,1.313,150,2.381,151,1.599,152,0.812,153,2.484,154,1.491,156,0.769,157,0.381,159,1.313,161,0.889,162,2.586,163,2.441,164,0.661,165,2.079,166,0.384,167,1.599,168,1.313,169,2.22,170,2.606,171,2.22,172,2.22,173,1.599,174,3.532,175,1.599,176,1.677,177,2.845,178,1.599,179,1.599,180,3.151,181,1.036,182,1.599,183,2.381,184,1.599,185,1.599,186,1.599,187,1.491,188,1.176,189,2.652,190,1.599,191,1.599,192,2.381,193,1.599,194,1.599,195,1.599,196,1.599,197,1.599,198,1.599,199,1.599,200,1.491,201,1.491,202,1.74,203,1.599,204,1.599,205,1.599,206,1.599,207,1.599,208,1.599,209,1.599,210,2.381,211,1.954,212,1.599,213,1.599,214,1.491,215,1.599,216,1.599,217,1.599,218,1.491,219,1.599,220,1.599,221,1.397,222,0.943,223,1.599,224,1.599,225,1.599,226,1.599,227,2.381,228,2.329,229,1.46,230,1.599,231,1.599,232,2.381,233,1.599,234,2.381,235,2.845,236,1.599,237,1.599,238,1.599,239,1.599,240,1.599,241,1.599,242,1.74,243,1.74,244,0.943,245,1.599,246,1.599,247,1.599,248,0.322,249,1.767,250,1.168,251,0.641,252,0.993,253,1.105,254,1.491,255,1.599,256,1.599,257,1.599,258,1.599,259,2.178,260,1.491,261,1.491,262,1.491,263,3.195,264,2.938,265,2.845,266,1.491,267,2.845,268,0.696,269,1.466,270,2.381,271,1.599,272,1.599,273,1.599,274,2.381,275,2.845,276,1.599,277,1.491,278,1.599,279,2.381,280,1.599,281,1.491,282,1.599,283,2.381,284,1.599,285,2.652,286,2.702,287,1.863,288,3.91,289,0.629,290,0.985,291,1.599,292,1.599,293,1.491,294,1.599,295,1.599,296,2.22,297,1.599,298,2.381,299,1.599,300,1.599,301,1.599,302,0.597,303,1.599,304,1.599,305,2.381,306,1.599,307,1.599,308,1.599,309,1.599,310,1.313,311,1.599,312,1.599,313,1.599,314,1.74,315,0.993,316,1.168,317,1.599,318,0.629,319,1.599,320,2.845,321,1.599,322,2.381,323,1.599,324,1.397,325,1.168,326,1.599,327,1.599,328,1.313,329,1.397,330,1.599,331,1.765,332,1.491,333,1.599,334,1.599,335,1.599,336,1.599,337,1.599,338,0.851,339,1.599,340,1.599,341,1.599,342,1.599,344,0.809,346,0.68]],["title/classes/TileLoader.html",[20,0.069,289,0.857]],["body/classes/TileLoader.html",[3,0.153,4,0.137,8,0.153,16,0.363,17,0.02,19,0.312,20,0.087,27,0.985,52,0.01,53,0.01,98,1.639,104,1.865,128,0.886,130,0.137,131,1.149,135,1.288,137,1.318,138,1.701,141,1.639,146,2.118,147,0.71,148,0.617,149,1.233,150,3.054,151,1.502,152,1.023,153,2.392,154,1.401,156,1.318,157,0.39,158,1.209,159,1.233,161,0.848,162,2.941,163,2.384,164,0.621,165,1.984,166,0.545,167,1.502,168,1.233,169,2.118,170,2.537,171,2.118,172,2.118,173,1.502,174,3.45,175,1.502,176,1.615,177,2.74,178,1.502,179,1.502,180,3.054,181,0.988,182,1.502,183,2.272,184,1.502,185,1.502,186,1.502,187,1.401,188,1.224,189,2.554,190,1.502,191,1.502,192,2.272,193,1.502,194,1.502,195,1.502,196,1.502,197,1.502,198,1.502,199,1.502,200,1.401,201,1.401,202,1.66,203,1.502,204,1.502,205,1.502,206,1.502,207,1.502,208,1.502,209,1.502,210,2.272,211,1.865,212,1.502,213,1.502,214,1.401,215,1.502,216,1.502,217,1.502,218,1.401,219,1.502,220,1.502,221,1.312,222,0.886,223,1.502,224,1.502,225,1.502,226,1.502,227,2.272,228,2.267,229,1.46,230,1.502,231,1.502,232,2.272,233,1.502,234,2.272,235,2.74,236,1.502,237,1.502,238,1.502,239,1.502,240,1.502,241,1.502,242,1.66,243,1.66,244,0.886,245,1.502,246,1.502,247,1.502,248,0.31,249,2.037,250,1.097,251,0.618,252,0.933,253,1.038,254,1.401,255,1.502,256,1.502,257,1.502,258,1.502,259,2.111,260,1.401,261,1.401,262,1.401,263,2.864,264,2.848,265,2.74,266,1.401,267,2.74,268,0.988,269,1.427,270,2.272,271,1.502,272,1.502,273,1.502,274,2.272,275,2.74,276,1.502,277,1.401,278,1.502,279,2.272,280,1.502,281,1.401,282,1.502,283,2.272,284,1.502,285,2.554,286,2.267,287,0.984,288,3.583,289,0.893,290,1.427,291,2.74,292,2.74,293,2.118,294,2.272,295,1.502,296,2.554,297,1.502,298,2.272,299,1.502,300,1.502,301,1.502,302,0.561,303,3.054,304,1.502,305,2.272,306,1.502,307,1.502,308,1.502,309,1.502,310,1.233,311,1.502,312,1.502,313,2.272,314,2.231,315,1.701,316,1.097,317,1.502,318,0.893,319,1.502,320,2.74,321,1.502,322,2.272,323,1.502,324,1.312,325,1.097,326,1.502,327,1.502,328,1.233,329,1.312,330,1.502,331,1.71,332,1.401,333,1.502,334,1.502,335,1.502,336,1.502,337,1.502,338,0.799,339,1.502,340,1.502,341,3.054,342,1.502,346,0.649,364,0.984,1364,3.845,1365,2.543,1366,2.543,1367,2.543,1368,2.543]],["title/classes/TileMesh.html",[20,0.069,1201,2.032]],["body/classes/TileMesh.html",[3,0.15,4,0.134,8,0.15,16,0.357,17,0.02,19,0.276,20,0.086,27,0.863,49,0.793,52,0.01,53,0.01,98,1.188,128,0.867,130,0.134,131,1.132,135,1.506,137,1.711,141,1.119,147,0.806,148,0.701,152,1.172,156,1.454,157,0.44,158,1.608,160,1.471,161,0.835,163,1.546,164,1.25,166,0.725,181,1.547,188,1.278,228,1.017,229,0.835,242,1.075,243,1.634,244,2.018,248,0.253,249,2.48,250,2.208,251,0.863,252,2.018,253,2.246,268,0.64,269,0.64,286,1.546,287,1.464,289,1.475,290,1.788,302,1.453,314,2.797,318,1.277,325,1.075,331,0.824,338,1.44,346,0.639,360,1.738,364,0.964,402,1.138,421,1.546,463,3.825,504,1.285,547,1.916,548,2.236,553,1.471,555,1.372,559,1.372,569,2.818,570,1.372,660,1.634,678,1.285,716,1.836,877,2.362,985,1.372,987,1.372,994,1.372,999,2.522,1005,1.372,1015,1.372,1200,1.471,1201,3.317,1202,2.919,1203,2.919,1204,2.919,1205,4.051,1206,3.26,1207,3.26,1208,3.26,1209,3.26,1210,2.89,1211,2.89,1212,1.902,1215,3.423,1226,2.413,1228,2.413,1229,2.413,1231,2.413,1233,2.413,1234,2.705,1235,2.919,1236,1.588,1237,1.588,1238,1.588,1239,3.693,1240,2.413,1241,2.413,1242,2.919,1243,1.588,1244,3.26,1245,2.919,1246,2.919,1247,2.413,1248,2.413,1249,1.588,1250,2.413,1251,2.413,1252,2.413,1253,1.588,1254,2.413,1255,1.588,1256,1.588,1257,2.413,1258,2.413,1259,2.413,1260,2.413,1261,2.413,1262,2.413,1263,1.588,1264,1.588,1265,1.588,1266,1.588,1267,1.588,1268,1.588,1269,1.588,1270,1.588,1271,2.413,1272,1.588,1273,1.588,1274,1.588,1275,1.588,1276,1.588,1277,1.588,1278,1.588,1279,1.588,1280,2.413,1281,1.588,1282,1.588,1283,1.588,1284,1.588,1285,1.588,1286,1.588,1287,1.588,1288,1.588,1289,1.588,1369,2.491,1370,2.491,1371,2.491,1372,2.491,1373,2.491,1374,2.491,1375,2.491,1376,2.491,1377,2.491,1378,2.491,1379,2.491,1380,2.491,1381,2.491,1382,2.491]],["title/interfaces/TileOptions.html",[248,0.247,1215,2.18]],["body/interfaces/TileOptions.html",[3,0.182,4,0.163,8,0.182,16,0.413,17,0.02,19,0.31,20,0.096,52,0.011,53,0.011,98,1.305,130,0.163,141,1.254,147,0.354,148,0.308,152,1.16,157,0.376,158,1.374,161,0.964,163,1.784,164,1.254,166,0.727,181,1.319,228,1.234,229,0.964,242,1.305,243,1.886,244,2.165,248,0.292,249,2.281,250,2.427,251,0.926,252,2.189,253,2.436,269,0.777,286,1.234,287,1.169,289,1.443,290,1.659,302,1.414,314,2.575,318,1.524,325,1.305,331,1,338,1.614,344,0.904,346,0.737,360,1.75,402,1.381,421,1.784,463,3.616,504,1.56,547,2.286,548,2.582,553,1.786,555,1.665,559,1.665,569,3.098,570,1.665,660,1.886,678,1.56,716,1.466,877,2.648,985,1.665,987,1.665,994,1.665,999,2.827,1005,1.665,1015,1.665,1200,1.786,1201,3.425,1202,1.927,1203,1.927,1204,1.927,1205,3.963,1206,1.927,1207,1.927,1208,1.927,1209,1.927,1215,3.322,1226,1.927,1228,1.927,1229,1.927,1231,1.927,1233,3.802,1234,3.032,1235,2.785,1236,1.927,1237,1.927,1238,1.927,1239,3.963,1240,2.785,1241,2.785,1242,3.271,1243,1.927,1244,3.584,1245,3.271,1246,3.271,1247,2.785,1248,2.785,1249,1.927,1250,2.785,1251,2.785,1252,2.785,1253,1.927,1254,2.785,1255,1.927,1256,1.927,1257,2.785,1258,2.785,1259,2.785,1260,2.785,1261,2.785,1262,2.785,1263,1.927,1264,1.927,1265,1.927,1266,1.927,1267,1.927,1268,1.927,1269,1.927,1270,1.927,1271,2.785,1272,1.927,1273,1.927,1274,1.927,1275,1.927,1276,1.927,1277,1.927,1278,1.927,1279,1.927,1280,2.785,1281,1.927,1282,1.927,1283,1.927,1284,1.927,1285,1.927,1286,1.927,1287,1.927,1288,1.927,1289,1.927]],["title/interfaces/TilePanorama.html",[248,0.247,724,2.18]],["body/interfaces/TilePanorama.html",[3,0.29,4,0.26,8,0.29,17,0.02,19,0.41,52,0.016,53,0.016,130,0.26,147,0.563,148,0.49,152,1.232,157,0.476,164,1.46,248,0.476,251,1.005,269,1.237,316,2.078,318,1.118,344,1.439,346,1.009,348,1.661,349,1.747,547,2.368,550,2.732,723,3.069,724,4.017,725,3.069,726,3.852,727,4.334,728,2.334,729,2.334,730,2.334,731,2.334,732,3.069,733,3.069,734,3.069,735,3.084,736,3.532,737,2.652,738,3.069,739,2.652,740,2.844,741,3.069]],["title/interfaces/TilePosition.html",[248,0.247,249,1.354]],["body/interfaces/TilePosition.html",[3,0.163,4,0.146,8,0.163,16,0.38,17,0.02,19,0.321,20,0.09,27,0.899,52,0.01,53,0.01,98,1.654,104,1.95,130,0.146,138,1.764,141,1.66,146,2.215,147,0.316,148,0.275,149,1.309,150,2.376,151,1.595,152,0.811,153,2.48,154,1.487,156,0.767,157,0.399,159,1.309,161,0.887,162,2.583,163,2.439,164,0.659,165,2.075,166,0.382,167,1.595,168,1.309,169,2.215,170,2.603,171,2.215,172,2.215,173,1.595,174,3.528,175,1.595,176,1.674,177,2.84,178,1.595,179,1.595,180,3.147,181,1.034,182,1.595,183,2.376,184,1.595,185,1.595,186,1.595,187,1.487,188,1.175,189,2.648,190,1.595,191,1.595,192,2.376,193,1.595,194,1.595,195,1.595,196,1.595,197,1.595,198,1.595,199,1.595,200,1.487,201,1.487,202,1.736,203,1.595,204,1.595,205,1.595,206,1.595,207,1.595,208,1.595,209,1.595,210,2.376,211,1.95,212,1.595,213,1.595,214,1.487,215,1.595,216,1.595,217,1.595,218,1.487,219,1.595,220,1.595,221,1.393,222,0.94,223,1.595,224,1.595,225,1.595,226,1.595,227,2.376,228,2.326,229,1.459,230,1.595,231,1.595,232,2.376,233,1.595,234,2.376,235,2.84,236,1.595,237,1.595,238,1.595,239,1.595,240,1.595,241,1.595,242,1.736,243,1.736,244,0.94,245,1.595,246,1.595,247,1.595,248,0.321,249,1.954,250,2.299,251,0.866,252,1.954,253,2.175,254,1.487,255,1.595,256,1.595,257,1.595,258,1.595,259,2.175,260,1.487,261,1.487,262,1.487,263,2.939,264,2.934,265,2.84,266,1.487,267,2.84,268,0.694,269,1.464,270,2.376,271,1.595,272,1.595,273,1.595,274,2.376,275,2.84,276,1.595,277,1.487,278,1.595,279,2.376,280,1.595,281,1.487,282,1.595,283,2.376,284,1.595,285,2.215,286,2.326,287,1.044,288,3.655,289,0.627,290,0.983,291,1.595,292,1.595,293,1.487,294,1.595,295,1.595,296,2.215,297,1.595,298,2.376,299,1.595,300,1.595,301,1.595,302,0.595,303,1.595,304,1.595,305,2.376,306,1.595,307,1.595,308,1.595,309,1.595,310,1.309,311,1.595,312,1.595,313,1.595,314,1.736,315,0.99,316,1.165,317,1.595,318,0.627,319,1.595,320,2.84,321,1.595,322,2.376,323,1.595,324,1.393,325,1.165,326,1.595,327,1.595,328,1.309,329,1.393,330,1.595,331,1.762,332,1.487,333,1.595,334,1.595,335,1.595,336,1.595,337,1.595,338,0.849,339,1.595,340,1.595,341,1.595,342,1.595,344,0.807,346,0.679]],["title/interfaces/TilePosition-1.html",[248,0.206,249,1.132,302,0.68]],["body/interfaces/TilePosition-1.html",[3,0.183,4,0.164,8,0.183,16,0.413,17,0.02,19,0.31,20,0.096,52,0.011,53,0.011,98,1.307,130,0.164,141,1.255,147,0.355,148,0.308,152,1.129,157,0.376,161,0.965,163,1.787,164,1.255,166,0.728,181,1.321,228,1.237,229,0.965,242,1.307,243,1.889,244,2.167,248,0.292,249,2.354,250,2.769,251,0.942,252,2.41,253,2.682,269,0.778,286,1.237,287,1.172,289,1.445,290,1.66,302,1.415,314,2.577,318,1.386,325,1.307,331,1.002,338,1.616,344,0.905,346,0.738,360,1.751,402,1.384,421,1.787,463,3.618,504,1.563,547,2.079,548,2.586,553,1.79,555,1.669,559,1.669,569,3.101,570,1.669,660,1.889,678,1.563,716,1.469,877,2.651,985,1.669,987,1.669,994,1.669,999,2.831,1005,1.669,1015,1.669,1200,1.79,1201,3.427,1202,1.931,1203,1.931,1204,1.931,1205,3.966,1206,1.931,1207,1.931,1208,1.931,1209,1.931,1215,3.036,1226,1.931,1228,1.931,1229,1.931,1231,1.931,1233,2.79,1234,3.036,1235,2.79,1236,1.931,1237,1.931,1238,1.931,1239,3.966,1240,2.79,1241,2.79,1242,3.275,1243,1.931,1244,3.588,1245,3.275,1246,3.275,1247,2.79,1248,2.79,1249,1.931,1250,2.79,1251,2.79,1252,2.79,1253,1.931,1254,2.79,1255,1.931,1256,1.931,1257,2.79,1258,2.79,1259,2.79,1260,2.79,1261,2.79,1262,2.79,1263,1.931,1264,1.931,1265,1.931,1266,1.931,1267,1.931,1268,1.931,1269,1.931,1270,1.931,1271,2.79,1272,1.931,1273,1.931,1274,1.931,1275,1.931,1276,1.931,1277,1.931,1278,1.931,1279,1.931,1280,2.79,1281,1.931,1282,1.931,1283,1.931,1284,1.931,1285,1.931,1286,1.931,1287,1.931,1288,1.931,1289,1.931]],["title/classes/TileTextureCache.html",[20,0.069,162,1.789]],["body/classes/TileTextureCache.html",[3,0.289,4,0.259,8,0.289,16,0.452,17,0.02,19,0.289,20,0.09,27,1.005,52,0.015,53,0.015,98,1.112,128,1.668,130,0.259,131,1.781,135,1.497,137,1.844,141,1.17,147,0.817,148,0.71,152,1.201,156,1.694,157,0.398,158,1.874,161,1.314,162,2.89,188,1.314,222,2.364,229,1.314,268,1.231,287,2.305,290,1.585,293,3.283,331,2.31,332,3.846,346,1.005,364,1.853,549,2.509,1340,5.109,1383,4.789,1384,4.789,1385,4.789,1386,5.959,1387,4.789,1388,5.959,1389,5.959,1390,4.789,1391,4.789,1392,4.789,1393,4.789,1394,4.789,1395,4.789]],["title/interfaces/Transition.html",[248,0.247,399,1.789]],["body/interfaces/Transition.html",[3,0.162,4,0.334,8,0.162,16,0.613,17,0.02,19,0.162,20,0.05,32,0.936,49,0.562,52,0.01,53,0.01,98,1.534,130,0.145,141,0.656,147,0.314,148,0.408,152,0.453,157,0.32,161,0.884,164,0.656,166,0.381,168,1.303,176,1.396,181,1.03,202,1.159,211,1.303,222,0.936,229,1.172,248,0.268,251,0.794,269,1.632,289,1.234,290,1.659,302,1.172,318,0.93,328,1.943,338,0.845,344,0.803,346,0.676,347,2.995,348,1.509,349,1.461,350,2.321,351,1.587,352,1.712,353,3.522,354,3.751,360,1.585,366,2.554,372,2.554,385,1.881,399,2.756,415,1.228,418,1.386,422,1.587,443,1.303,542,3.387,547,2.076,549,1.854,550,2.19,557,1.48,558,1.159,563,3.942,573,1.712,574,1.863,575,1.831,576,1.712,577,2.051,578,1.712,579,2.051,580,2.051,581,2.051,582,1.712,583,2.051,584,2.051,585,1.303,591,1.303,592,1.303,593,1.303,594,1.386,595,1.636,596,1.863,597,1.831,598,1.831,600,3.06,602,4.057,606,2.368,612,2.554,618,1.386,621,1.386,623,2.368,624,2.051,626,2.051,628,1.386,631,2.19,632,2.891,633,2.891,638,3.06,639,2.051,640,1.863,641,2.051,642,3.942,643,1.712,644,1.863,645,1.863,646,4.283,647,2.051,648,2.051,649,2.051,650,2.051,651,2.779,652,1.863,653,2.779,654,1.712,655,2.051,656,4.057,657,4.057,658,2.051,659,3.055,660,3.036,661,3.66,662,2.051,663,3.06,664,2.051,665,3.06,666,4.552,667,3.06,668,2.051,669,4.34,670,2.051,671,4.34,672,3.66,673,2.051,674,2.051,675,2.051,676,2.051,677,2.051,678,2.068,679,2.051,680,2.051,681,2.051,682,3.66,683,2.051,684,2.051,685,2.051,686,1.863,687,1.863,688,2.051,689,2.051,690,1.587,691,1.863,692,2.051,693,2.051,694,2.051,695,3.06,696,4.057,697,2.051,698,2.051,699,4.34,700,3.66,701,3.66,702,2.051,703,2.051,704,2.051,705,2.051,706,2.051,707,2.051,708,2.051,709,2.051,710,2.051,711,2.051,712,2.051,713,2.051,714,2.051,715,2.051,716,1.303,717,2.051,718,2.051,719,2.051,720,2.051,721,2.051,722,2.051]],["title/interfaces/TransitionViewport.html",[248,0.247,631,1.686]],["body/interfaces/TransitionViewport.html",[3,0.268,4,0.307,8,0.268,16,0.536,17,0.02,19,0.412,20,0.083,49,0.93,52,0.015,53,0.015,130,0.24,138,1.629,147,0.52,148,0.452,157,0.467,161,0.979,166,0.805,176,1.547,181,1.141,188,1.641,222,1.547,248,0.419,251,0.987,268,1.141,289,1.454,290,1.613,331,1.469,344,1.327,346,0.958,347,3.202,348,1.667,349,1.697,350,2.898,358,2.446,363,2.291,367,2.291,385,1.88,549,1.718,558,1.916,575,2.029,585,2.153,591,2.153,592,2.153,593,2.153,594,2.291,595,2.558,597,2.596,598,2.596,618,2.291,621,2.291,628,2.291,631,3.018,632,2.153,633,2.153,728,2.153,729,2.153,730,2.153,731,2.153,895,2.83,896,2.83,1312,2.83,1313,5.033,1314,3.079,1315,3.079,1316,3.079]],["title/interfaces/Viewport.html",[248,0.247,646,2.558]],["body/interfaces/Viewport.html",[3,0.162,4,0.287,8,0.162,16,0.613,17,0.02,19,0.162,20,0.05,32,0.936,49,0.562,52,0.01,53,0.01,98,1.534,130,0.145,141,0.656,147,0.314,148,0.408,152,0.453,157,0.32,161,0.884,164,0.656,166,0.381,168,1.303,176,1.396,181,1.03,202,1.159,211,1.303,222,0.936,229,1.172,248,0.268,251,0.88,269,1.632,289,1.234,290,1.659,302,1.172,318,0.93,328,1.943,338,0.845,344,0.803,346,0.676,347,3.203,348,1.614,349,1.632,350,2.522,351,1.587,352,1.712,353,3.522,354,3.751,360,1.585,366,2.554,372,2.554,385,1.586,399,2.577,415,1.228,418,1.386,422,1.587,443,1.303,542,3.387,547,2.076,549,1.854,550,2.19,557,1.48,558,1.159,563,3.942,573,1.712,574,1.863,575,1.831,576,1.712,577,2.051,578,1.712,579,2.051,580,2.051,581,2.051,582,1.712,583,2.051,584,2.051,585,1.303,591,1.303,592,1.303,593,1.303,594,1.386,595,1.636,596,1.863,597,1.831,598,1.831,600,3.06,602,4.057,606,2.368,612,2.554,618,1.386,621,1.386,623,2.368,624,2.051,626,2.051,628,1.386,631,2.19,632,2.324,633,2.324,638,3.06,639,2.051,640,1.863,641,2.051,642,3.942,643,1.712,644,1.863,645,1.863,646,3.685,647,2.051,648,2.051,649,2.051,650,2.051,651,2.779,652,1.863,653,2.779,654,1.712,655,2.051,656,4.057,657,4.057,658,2.051,659,3.055,660,3.036,661,3.66,662,2.051,663,3.06,664,2.051,665,3.06,666,4.552,667,3.06,668,2.051,669,4.34,670,2.051,671,4.34,672,3.66,673,2.051,674,2.051,675,2.051,676,2.051,677,2.051,678,2.068,679,2.051,680,2.051,681,2.051,682,3.66,683,2.051,684,2.051,685,2.051,686,1.863,687,1.863,688,2.051,689,2.051,690,1.587,691,1.863,692,2.051,693,2.051,694,2.051,695,3.06,696,4.057,697,2.051,698,2.051,699,4.34,700,3.66,701,3.66,702,2.051,703,2.051,704,2.051,705,2.051,706,2.051,707,2.051,708,2.051,709,2.051,710,2.051,711,2.051,712,2.051,713,2.051,714,2.051,715,2.051,716,1.303,717,2.051,718,2.051,719,2.051,720,2.051,721,2.051,722,2.051]],["title/dependencies.html",[57,3.075,1396,2.645]],["body/dependencies.html",[17,0.02,18,2.121,52,0.017,53,0.017,57,3.802,72,5.546,73,4.485,76,4.187,856,4.701,1397,5.483,1398,7.475,1399,5.483,1400,6.468,1401,5.483,1402,5.483,1403,5.483,1404,5.483,1405,5.483,1406,5.483,1407,5.483,1408,5.483,1409,5.483,1410,5.483]],["title/miscellaneous/enumerations.html",[1411,1.592,1412,3.803]],["body/miscellaneous/enumerations.html",[17,0.019,52,0.017,53,0.017,130,0.303,147,0.767,148,0.667,149,2.717,165,2.891,259,2.922,260,3.087,261,3.087,262,3.087,268,1.784,302,1.236,310,2.717,401,3.087,660,2.418,1411,2.891,1412,4.805,1413,5.604,1414,4.279,1415,5.604,1416,5.604,1417,5.604,1418,4.805]],["title/miscellaneous/functions.html",[1411,1.592,1419,3.803]],["body/miscellaneous/functions.html",[17,0.02,23,1.539,27,1.239,52,0.014,53,0.014,130,0.226,137,1.837,138,1.539,147,0.756,148,0.658,149,2.034,152,0.924,156,2.088,157,0.48,158,2.31,159,2.034,160,2.478,165,3.334,171,2.311,172,3.56,181,1.567,202,1.81,249,2.009,251,0.999,254,2.311,263,2.164,266,2.311,268,1.407,277,2.311,315,1.539,343,4.181,345,3.597,352,3.49,353,3.235,354,3.818,355,4.695,364,2.118,366,3.49,367,2.825,368,4.695,372,2.674,595,2.236,761,3.597,857,4.695,858,4.181,1044,3.203,1131,3.203,1132,3.597,1143,3.597,1155,3.597,1411,2.164,1414,4.655,1419,3.597,1420,5.476,1421,5.476,1422,6.704,1423,5.476,1424,5.476,1425,5.476,1426,5.476,1427,4.695,1428,5.476,1429,5.476,1430,6.096,1431,3.597,1432,4.194,1433,4.194,1434,3.597,1435,4.194,1436,5.476,1437,4.695,1438,4.194,1439,4.194,1440,4.194,1441,4.194,1442,4.194,1443,3.597]],["title/index.html",[130,0.167,1444,3.085,1445,3.085]],["body/index.html",[0,1.441,4,0.263,12,1.986,13,3.714,17,0.016,27,0.821,52,0.016,53,0.016,67,3.714,140,4.171,147,0.569,148,0.495,200,3.314,229,1.073,264,3.314,595,1.986,841,4.171,1291,4.171,1446,4.864,1447,7.242,1448,6.016,1449,6.016,1450,6.016,1451,4.864,1452,6.016,1453,4.864,1454,6.532,1455,6.532,1456,4.171,1457,4.864,1458,4.864,1459,6.016,1460,7.242,1461,4.864,1462,4.864,1463,4.864,1464,4.864,1465,4.864,1466,4.171,1467,4.864,1468,4.864,1469,4.864,1470,6.532,1471,6.532,1472,4.864,1473,7.013,1474,4.864,1475,4.864,1476,4.864,1477,4.864,1478,4.864,1479,4.864,1480,4.171,1481,6.016,1482,6.016,1483,6.825,1484,4.864,1485,4.864,1486,5.852,1487,4.864,1488,4.864,1489,6.532,1490,4.864,1491,4.864,1492,4.864,1493,3.714,1494,4.864,1495,4.864]],["title/modules.html",[56,3.838]],["body/modules.html",[17,0.018,52,0.018,53,0.018,55,4.099,56,4.513,73,4.099,1496,5.911,1497,5.911,1498,5.911]],["title/overview.html",[1493,3.838]],["body/overview.html",[1,2.667,2,1.915,17,0.02,21,1.915,29,2.415,31,2.415,34,2.415,36,2.415,38,2.415,40,2.415,42,2.415,44,2.415,46,2.415,48,2.415,52,0.016,53,0.016,54,4.644,55,5.34,57,3.433,58,4.245,59,4.245,60,4.245,61,4.245,62,4.245,63,4.245,64,4.245,65,4.644,66,4.245,67,3.78,128,1.724,302,1.092,344,1.48,360,1.209,1493,3.78,1499,4.95,1500,4.95,1501,4.95]],["title/properties.html",[346,0.748,1396,2.645]],["body/properties.html",[17,0.018,52,0.018,53,0.018,346,1.001,1456,5.09,1502,5.936]],["title/routes.html",[75,3.838]],["body/routes.html",[17,0.018,52,0.018,53,0.018,75,4.561]],["title/miscellaneous/typealiases.html",[1411,1.592,1503,4.435]],["body/miscellaneous/typealiases.html",[17,0.019,52,0.017,53,0.017,130,0.294,147,0.803,148,0.698,149,2.643,157,0.364,170,2.491,187,3.551,350,2.632,358,3.003,363,2.812,877,2.812,987,3.003,994,3.003,999,3.003,1005,3.003,1015,3.003,1153,4.674,1200,3.22,1234,3.808,1312,3.475,1411,2.812,1414,4.162,1431,5.527,1443,4.674,1504,5.451,1505,6.445,1506,6.445,1507,5.451,1508,5.451,1509,5.451]],["title/miscellaneous/variables.html",[1411,1.592,1510,3.803]],["body/miscellaneous/variables.html",[17,0.02,52,0.015,53,0.015,104,2.133,130,0.238,147,0.77,148,0.67,157,0.502,218,3.111,221,2.913,251,0.907,259,2.306,268,1.901,302,0.97,310,2.133,338,1.776,360,1.075,364,2.861,401,2.423,574,3.05,642,3.916,643,2.804,644,3.916,645,3.05,651,4.829,966,3.772,1023,3.772,1044,3.359,1066,4.842,1067,3.772,1411,2.269,1418,3.772,1427,3.772,1434,3.772,1437,5.642,1466,3.772,1480,4.842,1486,3.772,1510,3.772,1511,5.647,1512,6.805,1513,5.647,1514,5.647,1515,5.647,1516,5.647,1517,6.58,1518,4.399,1519,4.399,1520,5.647,1521,4.399,1522,4.399,1523,4.399,1524,4.399,1525,4.399,1526,4.399,1527,4.399,1528,4.399,1529,4.399,1530,4.399,1531,4.399]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":360,"title":{},"body":{"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"components/LoaderComponent.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0).multiplyscalar(0.5",{"_index":1001,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["0.0.0",{"_index":1502,"title":{},"body":{"properties.html":{}}}],["0.000001",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.01",{"_index":1286,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["0.1",{"_index":1112,"title":{},"body":{"components/LoaderComponent.html":{}}}],["0.14.4",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":410,"title":{},"body":{"components/CloseComponent.html":{}}}],["0.25",{"_index":463,"title":{},"body":{"components/ControlsButtonComponent.html":{},"classes/InteriorMethod.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["0.25s",{"_index":511,"title":{},"body":{"components/CursorComponent.html":{}}}],["0.3",{"_index":486,"title":{},"body":{"components/ControlsComponent.html":{}}}],["0.35",{"_index":467,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["0.4",{"_index":530,"title":{},"body":{"components/CursorComponent.html":{}}}],["0.5",{"_index":1269,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["1",{"_index":302,"title":{"interfaces/TilePosition-1.html":{}},"body":{"classes/CancellableImageLoader.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1).multiplyscalar(0.5",{"_index":990,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["1.2s",{"_index":1116,"title":{},"body":{"components/LoaderComponent.html":{}}}],["100",{"_index":505,"title":{},"body":{"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["1000",{"_index":422,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"classes/ExteriorMethod.html":{},"components/InfoMessageComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["100px",{"_index":515,"title":{},"body":{"components/CursorComponent.html":{}}}],["100vh",{"_index":1296,"title":{},"body":{"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["100vw",{"_index":1295,"title":{},"body":{"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["11",{"_index":1499,"title":{},"body":{"overview.html":{}}}],["11.2.8",{"_index":1457,"title":{},"body":{"index.html":{}}}],["120px",{"_index":508,"title":{},"body":{"components/CursorComponent.html":{}}}],["12px",{"_index":489,"title":{},"body":{"components/ControlsComponent.html":{},"components/CursorComponent.html":{}}}],["136px",{"_index":980,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["13px",{"_index":454,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["15",{"_index":972,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["15px",{"_index":957,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["16",{"_index":1500,"title":{},"body":{"overview.html":{}}}],["16px",{"_index":426,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["17",{"_index":1501,"title":{},"body":{"overview.html":{}}}],["17.2.2",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["17.2.4",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["180px",{"_index":1113,"title":{},"body":{"components/LoaderComponent.html":{}}}],["18px",{"_index":419,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{}}}],["1deg",{"_index":978,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["1e",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":1310,"title":{},"body":{"components/PreloadComponent.html":{}}}],["1px",{"_index":472,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{}}}],["2",{"_index":660,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/enumerations.html":{}}}],["2.5.3",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":643,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/PreloadComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["20px",{"_index":433,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{}}}],["22px",{"_index":488,"title":{},"body":{"components/ControlsComponent.html":{}}}],["230",{"_index":645,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["231px",{"_index":951,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["248",{"_index":528,"title":{},"body":{"components/CursorComponent.html":{}}}],["24px",{"_index":461,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["25",{"_index":960,"title":{},"body":{"components/InfoMessageComponent.html":{},"components/PreloadComponent.html":{}}}],["250",{"_index":529,"title":{},"body":{"components/CursorComponent.html":{}}}],["256",{"_index":1067,"title":{},"body":{"classes/InteriorMethod.html":{},"miscellaneous/variables.html":{}}}],["285px",{"_index":950,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["2px",{"_index":541,"title":{},"body":{"components/CursorComponent.html":{}}}],["3",{"_index":310,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["30px",{"_index":423,"title":{},"body":{"components/CloseComponent.html":{}}}],["32px",{"_index":525,"title":{},"body":{"components/CursorComponent.html":{}}}],["33px",{"_index":952,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["35",{"_index":962,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["35px",{"_index":464,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["360",{"_index":148,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["38px",{"_index":398,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{}}}],["3deg",{"_index":973,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["3px",{"_index":485,"title":{},"body":{"components/ControlsComponent.html":{},"components/CursorComponent.html":{}}}],["40px",{"_index":953,"title":{},"body":{"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["46px",{"_index":522,"title":{},"body":{"components/CursorComponent.html":{}}}],["48px",{"_index":539,"title":{},"body":{"components/CursorComponent.html":{}}}],["4px",{"_index":406,"title":{},"body":{"components/CloseComponent.html":{},"components/CursorComponent.html":{}}}],["5",{"_index":221,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/InfoMessageComponent.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":424,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["54px",{"_index":536,"title":{},"body":{"components/CursorComponent.html":{}}}],["57.5",{"_index":965,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["5deg",{"_index":967,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["5px",{"_index":526,"title":{},"body":{"components/CursorComponent.html":{}}}],["5s",{"_index":955,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["600",{"_index":456,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["64px",{"_index":1114,"title":{},"body":{"components/LoaderComponent.html":{}}}],["65",{"_index":968,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["6px",{"_index":1110,"title":{},"body":{"components/LoaderComponent.html":{}}}],["7.8.1",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":540,"title":{},"body":{"components/CursorComponent.html":{}}}],["72.5",{"_index":971,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["75",{"_index":1074,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["80",{"_index":974,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["80px",{"_index":1108,"title":{},"body":{"components/LoaderComponent.html":{}}}],["82.5",{"_index":977,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["84",{"_index":900,"title":{},"body":{"components/HomepagePage.html":{}}}],["8px",{"_index":460,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{}}}],["900343408_1647603373",{"_index":863,"title":{},"body":{"components/HomepagePage.html":{}}}],["90px",{"_index":958,"title":{},"body":{"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["999px",{"_index":533,"title":{},"body":{"components/CursorComponent.html":{}}}],["9px",{"_index":407,"title":{},"body":{"components/CloseComponent.html":{}}}],["_changeevent",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_doc",{"_index":861,"title":{},"body":{"components/HomepagePage.html":{}}}],["_endevent",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_startevent",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortcontroller",{"_index":286,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["abortcontroller.signal",{"_index":888,"title":{},"body":{"components/HomepagePage.html":{}}}],["abortcontroller.signal).then(image",{"_index":335,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["abortsignal",{"_index":154,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["absolute",{"_index":417,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["abstract",{"_index":1313,"title":{},"body":{"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{}}}],["activatedroute",{"_index":783,"title":{},"body":{"components/HomepagePage.html":{}}}],["active",{"_index":428,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["actual_component",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["add",{"_index":325,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["afterviewinit",{"_index":745,"title":{},"body":{"components/HomepagePage.html":{}}}],["aliases",{"_index":1504,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":413,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["alpha",{"_index":1157,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["alt",{"_index":430,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["altvariant",{"_index":1228,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["anchorscrolling",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["angle",{"_index":548,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["angular",{"_index":1454,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":856,"title":{},"body":{"components/HomepagePage.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["angular/material/icon",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"components/HomepagePage.html":{},"dependencies.html":{}}}],["animate",{"_index":1174,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["animation",{"_index":509,"title":{},"body":{"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["anonymous",{"_index":205,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"index.html":{}}}],["app.component",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":127,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{}}}],["approutes",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["args",{"_index":184,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["arguments",{"_index":785,"title":{},"body":{"components/HomepagePage.html":{}}}],["artifacts",{"_index":1474,"title":{},"body":{"index.html":{}}}],["async",{"_index":132,"title":{},"body":{"classes/AppPage.html":{},"interfaces/ManifestRenderer.html":{}}}],["aures",{"_index":224,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["auto",{"_index":476,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/HomepagePage.html":{}}}],["automatically",{"_index":1464,"title":{},"body":{"index.html":{}}}],["available",{"_index":697,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["await",{"_index":1147,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["b",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["background",{"_index":394,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["baseurl",{"_index":318,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["baseurl}/exterior/${data.id",{"_index":561,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["baseurl}/interior/${data.id",{"_index":986,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["before",{"_index":1111,"title":{},"body":{"components/LoaderComponent.html":{}}}],["bind",{"_index":179,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["bindonce",{"_index":1420,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindonce(image",{"_index":171,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["black",{"_index":409,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/LoaderComponent.html":{}}}],["bloburl",{"_index":232,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["block",{"_index":1118,"title":{},"body":{"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["boolean",{"_index":385,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMethod.html":{},"components/LoaderComponent.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":400,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/LoaderComponent.html":{}}}],["bottom",{"_index":487,"title":{},"body":{"components/ControlsComponent.html":{},"components/CursorComponent.html":{}}}],["box",{"_index":404,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/LoaderComponent.html":{}}}],["break",{"_index":1170,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["browse",{"_index":1498,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":142,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1473,"title":{},"body":{"index.html":{}}}],["button",{"_index":436,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button'},{'name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["button.component",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":438,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.scss",{"_index":437,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts",{"_index":435,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:11",{"_index":445,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:12",{"_index":446,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:13",{"_index":444,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:14",{"_index":447,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:16",{"_index":448,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:18",{"_index":442,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button.component.ts:20",{"_index":449,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button/controls",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"components/ControlsButtonComponent.html":{}}}],["button:not(.controls",{"_index":471,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["button__icon",{"_index":468,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["buttons",{"_index":748,"title":{},"body":{"components/HomepagePage.html":{}}}],["cache",{"_index":296,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["cache.destroy",{"_index":1189,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["cachedtask",{"_index":320,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["cachedtask.abortcontroller?.signal.aborted",{"_index":323,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["cachedtask.task.state",{"_index":322,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["calc(50",{"_index":1109,"title":{},"body":{"components/LoaderComponent.html":{}}}],["callback",{"_index":174,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["callbacks",{"_index":176,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["callbacks.bind('error",{"_index":238,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["callbacks.bind('load",{"_index":236,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["callbacks.cancel",{"_index":209,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["callbacks.push([name",{"_index":182,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["camera",{"_index":576,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["cancel",{"_index":177,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["cancelall",{"_index":341,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["cancelanimationframe(lastanimationframe",{"_index":1187,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["cancellableimageloader",{"_index":146,"title":{"classes/CancellableImageLoader.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["canvasdiv",{"_index":749,"title":{},"body":{"components/HomepagePage.html":{}}}],["canvasmousedown",{"_index":764,"title":{},"body":{"components/HomepagePage.html":{}}}],["canvasmousemove",{"_index":765,"title":{},"body":{"components/HomepagePage.html":{}}}],["canvasmousemove(event",{"_index":792,"title":{},"body":{"components/HomepagePage.html":{}}}],["canvasmouseout",{"_index":766,"title":{},"body":{"components/HomepagePage.html":{}}}],["canvasmouseup",{"_index":767,"title":{},"body":{"components/HomepagePage.html":{}}}],["case",{"_index":329,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["catch(err",{"_index":242,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["cel",{"_index":937,"title":{},"body":{"components/HomepagePage.html":{}}}],["center",{"_index":415,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["change",{"_index":1466,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["changesize",{"_index":768,"title":{},"body":{"components/HomepagePage.html":{}}}],["changetype",{"_index":769,"title":{},"body":{"components/HomepagePage.html":{}}}],["changetype(type",{"_index":797,"title":{},"body":{"components/HomepagePage.html":{}}}],["check",{"_index":1492,"title":{},"body":{"index.html":{}}}],["child",{"_index":1091,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["child.dataset['x",{"_index":1094,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["child.dataset['y",{"_index":1095,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["child.dataset['z",{"_index":1096,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["childplane",{"_index":1259,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["childplane.geometry.computeboundingbox",{"_index":1276,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["childplane.position.set",{"_index":1270,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["childplane.scale.set(0.5",{"_index":1268,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["childplane.updatematrix",{"_index":1274,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["childplane.updatematrixworld(true",{"_index":1275,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["childtranslate",{"_index":1203,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["chrome",{"_index":193,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["clamp",{"_index":638,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["class",{"_index":20,"title":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileAbortError.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"classes/TileTextureCache.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["classes",{"_index":128,"title":{},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileAbortError.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"classes/TileTextureCache.html":{},"overview.html":{}}}],["cli",{"_index":1455,"title":{},"body":{"index.html":{}}}],["click",{"_index":379,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{}}}],["clicked",{"_index":383,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{}}}],["clientdimensions",{"_index":343,"title":{"interfaces/ClientDimensions.html":{}},"body":{"interfaces/ClientDimensions.html":{},"miscellaneous/functions.html":{}}}],["clientheight",{"_index":657,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["clientwidth",{"_index":656,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["clock",{"_index":1139,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["clock.getdelta",{"_index":1181,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["close",{"_index":375,"title":{},"body":{"components/CloseComponent.html":{}}}],["close'},{'name",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["close.component.html",{"_index":378,"title":{},"body":{"components/CloseComponent.html":{}}}],["close.component.scss",{"_index":377,"title":{},"body":{"components/CloseComponent.html":{}}}],["close__icon",{"_index":425,"title":{},"body":{"components/CloseComponent.html":{}}}],["closecomponent",{"_index":29,"title":{"components/CloseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["closefullscreen",{"_index":770,"title":{},"body":{"components/HomepagePage.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1468,"title":{},"body":{"index.html":{}}}],["color",{"_index":395,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["column",{"_index":947,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["columns",{"_index":1308,"title":{},"body":{"components/PreloadComponent.html":{}}}],["combat",{"_index":1284,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["command",{"_index":1494,"title":{},"body":{"index.html":{}}}],["compatibility",{"_index":223,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"index.html":{}}}],["component_template",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["components/close/close.component",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["components/controls/controls",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["components/controls/controls.component",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["components/cursor/cursor.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["components/info",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["components/loader/loader.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main/main.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["components/page/page.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["components/preload/preload.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["computebottomright",{"_index":1024,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["computecamera",{"_index":1025,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["computetopleft",{"_index":1026,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["consider",{"_index":674,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["considered",{"_index":190,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["const",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["constructor",{"_index":166,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["constructor(cache",{"_index":294,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["constructor(controlscomponent",{"_index":441,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["constructor(iconregistry",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["constructor(private",{"_index":906,"title":{},"body":{"components/HomepagePage.html":{}}}],["constructor(public",{"_index":451,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["constructor(renderer",{"_index":780,"title":{},"body":{"components/HomepagePage.html":{}}}],["constructor(scene",{"_index":1321,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["constructor(textureloader",{"_index":1212,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{}}}],["constructor(tileloader",{"_index":546,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"classes/RenderMethod.html":{}}}],["contain",{"_index":358,"title":{},"body":{"interfaces/ClientDimensions.html":{},"components/HomepagePage.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{},"miscellaneous/typealiases.html":{}}}],["container",{"_index":690,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["container.children",{"_index":1092,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["container.style.opacity",{"_index":691,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["containspoint",{"_index":1319,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["containspoint(vec",{"_index":1329,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["content",{"_index":144,"title":{},"body":{"classes/AppPage.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["context",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contextmenu",{"_index":778,"title":{},"body":{"components/HomepagePage.html":{}}}],["contextmenu(event",{"_index":787,"title":{},"body":{"components/HomepagePage.html":{}}}],["controlprop",{"_index":1505,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["controls",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMethod.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["controls'},{'name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["controls.component",{"_index":450,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["controls.component.html",{"_index":479,"title":{},"body":{"components/ControlsComponent.html":{}}}],["controls.component.scss",{"_index":478,"title":{},"body":{"components/ControlsComponent.html":{}}}],["controlsbuttoncomponent",{"_index":31,"title":{"components/ControlsButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["controlscallbacks",{"_index":1506,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["controlscomponent",{"_index":34,"title":{"components/ControlsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["coords",{"_index":1093,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["coords.length",{"_index":1100,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["cover",{"_index":363,"title":{},"body":{"interfaces/ClientDimensions.html":{},"components/HomepagePage.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{},"miscellaneous/typealiases.html":{}}}],["createlazypromise",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createlazypromise(execute",{"_index":339,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["createlazypromise(innerfn",{"_index":266,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["createmanifestrenderer",{"_index":857,"title":{},"body":{"components/HomepagePage.html":{},"miscellaneous/functions.html":{}}}],["createmanifestrenderer(options",{"_index":1155,"title":{},"body":{"interfaces/ManifestRenderer.html":{},"miscellaneous/functions.html":{}}}],["cs",{"_index":831,"title":{},"body":{"components/HomepagePage.html":{}}}],["cubemap",{"_index":1027,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["cursor",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{}}}],["cursor'},{'name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["cursor.component.html",{"_index":492,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursor.component.scss",{"_index":491,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursor.svg",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["cursor__arrow",{"_index":517,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursor__main",{"_index":524,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursoractive",{"_index":750,"title":{},"body":{"components/HomepagePage.html":{}}}],["cursoranimation",{"_index":510,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursoranimation2",{"_index":516,"title":{},"body":{"components/CursorComponent.html":{}}}],["cursorcomponent",{"_index":36,"title":{"components/CursorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["cursormove",{"_index":751,"title":{},"body":{"components/HomepagePage.html":{}}}],["cursorposition",{"_index":752,"title":{},"body":{"components/HomepagePage.html":{}}}],["customcontrols",{"_index":753,"title":{},"body":{"components/HomepagePage.html":{}}}],["dark",{"_index":911,"title":{},"body":{"components/HomepagePage.html":{}}}],["data",{"_index":549,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["data.baseurl",{"_index":1169,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["data.exterior.length",{"_index":1165,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["data.exterior[0",{"_index":1168,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["data.height",{"_index":565,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["data.interior.length",{"_index":891,"title":{},"body":{"components/HomepagePage.html":{},"interfaces/ManifestRenderer.html":{}}}],["data.interior[0",{"_index":1171,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["data.maxzoom",{"_index":564,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["data.width",{"_index":562,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["declarations",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decode",{"_index":213,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["decorators",{"_index":804,"title":{},"body":{"components/HomepagePage.html":{}}}],["default",{"_index":364,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"classes/TileTextureCache.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultsize",{"_index":754,"title":{},"body":{"components/HomepagePage.html":{}}}],["defined",{"_index":135,"title":{},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileAbortError.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"classes/TileTextureCache.html":{}}}],["delta",{"_index":623,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"classes/RenderMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["deltax",{"_index":577,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroy",{"_index":222,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["dev",{"_index":841,"title":{},"body":{"components/HomepagePage.html":{},"index.html":{}}}],["development",{"_index":1458,"title":{},"body":{"index.html":{}}}],["dimensions",{"_index":355,"title":{},"body":{"interfaces/ClientDimensions.html":{},"miscellaneous/functions.html":{}}}],["dimensions.fit",{"_index":357,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["dimensions.height",{"_index":362,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["direction",{"_index":946,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["directive",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["directives",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1472,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1477,"title":{},"body":{"index.html":{}}}],["disable",{"_index":729,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TransitionViewport.html":{}}}],["display",{"_index":411,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["dispose",{"_index":1133,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["dist",{"_index":1476,"title":{},"body":{"index.html":{}}}],["divideself",{"_index":1206,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["document",{"_index":855,"title":{},"body":{"components/HomepagePage.html":{}}}],["document.createelement('img",{"_index":203,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["document.documentelement",{"_index":908,"title":{},"body":{"components/HomepagePage.html":{}}}],["document.queryselector('.hotspots",{"_index":1090,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["domexception",{"_index":245,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["domexception.abort_err",{"_index":247,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["domsanitizer",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["download",{"_index":212,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["driverama",{"_index":859,"title":{},"body":{"components/HomepagePage.html":{}}}],["driverama.azureedge.net/public",{"_index":842,"title":{},"body":{"components/HomepagePage.html":{}}}],["driveramaangular",{"_index":1451,"title":{},"body":{"index.html":{}}}],["drops",{"_index":299,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["dx",{"_index":1261,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["dy",{"_index":1262,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["dynamic",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1487,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":129,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":139,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":136,"title":{},"body":{"classes/AppPage.html":{}}}],["ease",{"_index":956,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["edge",{"_index":679,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["ekran",{"_index":936,"title":{},"body":{"components/HomepagePage.html":{}}}],["elem",{"_index":755,"title":{},"body":{"components/HomepagePage.html":{}}}],["element",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMethod.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"miscellaneous/functions.html":{}}}],["element(by.css('app",{"_index":143,"title":{},"body":{"classes/AppPage.html":{}}}],["element?.clientheight",{"_index":1145,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["element?.clientwidth",{"_index":1144,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["elementref",{"_index":812,"title":{},"body":{"components/HomepagePage.html":{}}}],["empty",{"_index":734,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["enabled",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["enabletracing",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1486,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["endtransition",{"_index":585,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["enum",{"_index":258,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["enumerations",{"_index":1412,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eps",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":243,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["err.code",{"_index":246,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["error",{"_index":165,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["error('invalid",{"_index":1172,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["error('no",{"_index":1166,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["error('resolver",{"_index":280,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["error(`failed",{"_index":1151,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["eslint",{"_index":728,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TransitionViewport.html":{}}}],["eslint/no",{"_index":733,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["etc",{"_index":194,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["event",{"_index":786,"title":{},"body":{"components/HomepagePage.html":{}}}],["event.clientx",{"_index":876,"title":{},"body":{"components/HomepagePage.html":{}}}],["event.clienty",{"_index":878,"title":{},"body":{"components/HomepagePage.html":{}}}],["event.data.message",{"_index":915,"title":{},"body":{"components/HomepagePage.html":{}}}],["event.data.value",{"_index":916,"title":{},"body":{"components/HomepagePage.html":{}}}],["event.preventdefault",{"_index":865,"title":{},"body":{"components/HomepagePage.html":{}}}],["eventemitter",{"_index":387,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/MainComponent.html":{}}}],["events",{"_index":503,"title":{},"body":{"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{}}}],["execute",{"_index":264,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"index.html":{}}}],["export",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["exports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["extends",{"_index":164,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["exterior",{"_index":739,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/TilePanorama.html":{}}}],["exterior/exteriormethod",{"_index":1140,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["exteriorcontrols",{"_index":602,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["exteriormapplane",{"_index":542,"title":{"classes/ExteriorMapPlane.html":{}},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["exteriormethod",{"_index":573,"title":{"classes/ExteriorMethod.html":{}},"body":{"classes/ExteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["exteriortilepanorama",{"_index":550,"title":{"interfaces/ExteriorTilePanorama.html":{}},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["exteriorutils",{"_index":641,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["exteriér",{"_index":932,"title":{},"body":{"components/HomepagePage.html":{}}}],["false",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":201,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["fetch(`${url}/manifest.json",{"_index":1148,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["fetch(url",{"_index":225,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["fetching",{"_index":1185,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["fetchmanifest",{"_index":858,"title":{},"body":{"components/HomepagePage.html":{},"interfaces/ManifestRenderer.html":{},"miscellaneous/functions.html":{}}}],["fetchmanifest(this.props.url",{"_index":887,"title":{},"body":{"components/HomepagePage.html":{}}}],["fetchmanifest(url",{"_index":1432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fighting",{"_index":1285,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["filename",{"_index":316,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{}}}],["filename].join",{"_index":319,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["files",{"_index":1467,"title":{},"body":{"index.html":{}}}],["filter",{"_index":306,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["filter((x",{"_index":1097,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["finally",{"_index":240,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["fit",{"_index":347,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["flag",{"_index":1479,"title":{},"body":{"index.html":{}}}],["flex",{"_index":412,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["fn",{"_index":1442,"title":{},"body":{"miscellaneous/functions.html":{}}}],["folder",{"_index":1450,"title":{},"body":{"index.html":{}}}],["font",{"_index":452,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["found",{"_index":281,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["fov",{"_index":1050,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["fraction",{"_index":300,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["frame",{"_index":298,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["fromzoom",{"_index":369,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["frustum",{"_index":578,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["fullscreen",{"_index":922,"title":{},"body":{"components/HomepagePage.html":{}}}],["func",{"_index":180,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["func(...args",{"_index":185,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["function",{"_index":170,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1419,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1488,"title":{},"body":{"index.html":{}}}],["gap",{"_index":462,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{}}}],["gc",{"_index":327,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["generate",{"_index":1470,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1453,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":1386,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["getlevelfov",{"_index":1030,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["getlevelfov(fov",{"_index":1048,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["getminzoom",{"_index":352,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["getminzoom(minwidth",{"_index":372,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["getminzoominterpolate",{"_index":366,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["getminzoominterpolate(minwidth",{"_index":1433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getparentsize",{"_index":1424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getparentsize(element",{"_index":1143,"title":{},"body":{"interfaces/ManifestRenderer.html":{},"miscellaneous/functions.html":{}}}],["getparentsize(options.container",{"_index":1176,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["gettilepositionstring",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettilepositionstring(position",{"_index":254,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["gettilepositionstring(position)}.jpg",{"_index":317,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["getting",{"_index":1444,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":133,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":1491,"title":{},"body":{"index.html":{}}}],["grid",{"_index":1307,"title":{},"body":{"components/PreloadComponent.html":{}}}],["handheld",{"_index":741,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["handheldshape",{"_index":736,"title":{"interfaces/HandheldShape.html":{}},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["handle",{"_index":328,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["happening",{"_index":698,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["has(.controls",{"_index":474,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["hasinterior",{"_index":756,"title":{},"body":{"components/HomepagePage.html":{}}}],["height",{"_index":348,"title":{},"body":{"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["help",{"_index":1489,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":480,"title":{},"body":{"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/PageComponent.html":{}}}],["hide",{"_index":917,"title":{},"body":{"components/HomepagePage.html":{}}}],["hidemessage",{"_index":771,"title":{},"body":{"components/HomepagePage.html":{}}}],["high",{"_index":198,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["hints",{"_index":196,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["homepage",{"_index":746,"title":{},"body":{"components/HomepagePage.html":{}}}],["homepage'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["homepage.page.html",{"_index":747,"title":{},"body":{"components/HomepagePage.html":{}}}],["homepagepage",{"_index":38,"title":{"components/HomepagePage.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["horizontal",{"_index":493,"title":{},"body":{"components/CursorComponent.html":{}}}],["host",{"_index":469,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["hostlistener",{"_index":853,"title":{},"body":{"components/HomepagePage.html":{}}}],["hostlistener('contextmenu",{"_index":807,"title":{},"body":{"components/HomepagePage.html":{}}}],["hostlistener('window:resize",{"_index":805,"title":{},"body":{"components/HomepagePage.html":{}}}],["hostlisteners",{"_index":777,"title":{},"body":{"components/HomepagePage.html":{}}}],["hotspots",{"_index":689,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["hover",{"_index":427,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{}}}],["html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["htmldivelement",{"_index":1156,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["htmlelement",{"_index":1070,"title":{},"body":{"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{}}}],["http://localhost:4200",{"_index":1463,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["https://cdn",{"_index":840,"title":{},"body":{"components/HomepagePage.html":{}}}],["https://web.dev/priority",{"_index":195,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["i.abortcontroller?.signal.aborted",{"_index":308,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["i.blob",{"_index":230,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["i.task.state",{"_index":307,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["icon",{"_index":440,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["iconregistry.addsvgicon('arrow",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["iconregistry.addsvgicon('close",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["iconregistry.addsvgicon('expand",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["iconregistry.addsvgicon('eye",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["iconregistry.addsvgicon('minus",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["iconregistry.addsvgicon('plus",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["iconregistry.addsvgicon('pointer",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":726,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"components/PreloadComponent.html":{},"interfaces/TilePanorama.html":{}}}],["idbaseurl",{"_index":560,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{}}}],["idle",{"_index":262,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{}}}],["idletasks",{"_index":304,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["image",{"_index":202,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["image.addeventlistener(name",{"_index":186,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["image.crossorigin",{"_index":204,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["image.removeeventlistener(name",{"_index":178,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["image.src",{"_index":210,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["images",{"_index":189,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"components/PreloadComponent.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["implements",{"_index":743,"title":{},"body":{"components/HomepagePage.html":{},"components/PreloadComponent.html":{}}}],["import",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["important",{"_index":465,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":130,"title":{"index.html":{}},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1117,"title":{},"body":{"components/LoaderComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["infomessagecomponent",{"_index":40,"title":{"components/InfoMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["inherited",{"_index":615,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["init",{"_index":1134,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["initcanvas",{"_index":772,"title":{},"body":{"components/HomepagePage.html":{}}}],["inject",{"_index":854,"title":{},"body":{"components/HomepagePage.html":{}}}],["inject(document",{"_index":862,"title":{},"body":{"components/HomepagePage.html":{}}}],["innerfn",{"_index":277,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["innerhtml",{"_index":883,"title":{},"body":{"components/HomepagePage.html":{}}}],["inprogress",{"_index":260,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{}}}],["input",{"_index":390,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["inputs",{"_index":380,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["install",{"_index":1449,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1446,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":244,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["interface",{"_index":248,"title":{"interfaces/ClientDimensions.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"interfaces/RenderOptions.html":{},"interfaces/TileJob.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["interfaces",{"_index":344,"title":{},"body":{"interfaces/ClientDimensions.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"interfaces/RenderOptions.html":{},"interfaces/TileJob.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"overview.html":{}}}],["interior",{"_index":740,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/TilePanorama.html":{}}}],["interior/interiormethod",{"_index":1141,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["interiorcontrols",{"_index":1039,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["interiormapcube",{"_index":981,"title":{"classes/InteriorMapCube.html":{}},"body":{"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{}}}],["interiormethod",{"_index":1022,"title":{"classes/InteriorMethod.html":{}},"body":{"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{}}}],["interiortilepanorama",{"_index":735,"title":{"interfaces/InteriorTilePanorama.html":{}},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["interiér",{"_index":934,"title":{},"body":{"components/HomepagePage.html":{}}}],["isapproxequals",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isapproxequals(a",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isapproxzero",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isapproxzero(number",{"_index":1438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfullscreen",{"_index":757,"title":{},"body":{"components/HomepagePage.html":{}}}],["item",{"_index":1280,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["item.updatevariant(variant",{"_index":1281,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["items",{"_index":414,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["job",{"_index":1250,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["job.abortcontroller",{"_index":1253,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["job.task.execute",{"_index":1283,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["job.task.result",{"_index":1254,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["joblist",{"_index":292,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["jobs",{"_index":301,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["justify",{"_index":416,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{}}}],["karma",{"_index":1485,"title":{},"body":{"index.html":{}}}],["key",{"_index":1388,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["keyframes",{"_index":513,"title":{},"body":{"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["lang",{"_index":758,"title":{},"body":{"components/HomepagePage.html":{}}}],["lastanimationframe",{"_index":1175,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["lazypromise",{"_index":263,"title":{"interfaces/LazyPromise.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["lazypromise.state",{"_index":275,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["left",{"_index":443,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["legend",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["level",{"_index":250,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["light",{"_index":1105,"title":{},"body":{"components/LoaderComponent.html":{}}}],["line",{"_index":731,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TransitionViewport.html":{}}}],["linear",{"_index":512,"title":{},"body":{"components/CursorComponent.html":{},"components/LoaderComponent.html":{}}}],["literal",{"_index":1044,"title":{},"body":{"classes/InteriorMethod.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":150,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["load(baseurl",{"_index":313,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["load(url",{"_index":151,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["loader",{"_index":324,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["loader'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["loader.cancelall",{"_index":1188,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["loader.component.html",{"_index":1104,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1103,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.load(url",{"_index":334,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["loader.work",{"_index":1186,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["loaderanimation",{"_index":1115,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":42,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["loading",{"_index":169,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["loadtexturemap",{"_index":1207,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["logic",{"_index":676,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["low",{"_index":191,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["main",{"_index":1122,"title":{},"body":{"components/MainComponent.html":{}}}],["main'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["main.component.html",{"_index":1124,"title":{},"body":{"components/MainComponent.html":{}}}],["main.component.scss",{"_index":1123,"title":{},"body":{"components/MainComponent.html":{}}}],["maincomponent",{"_index":44,"title":{"components/MainComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["manifest",{"_index":737,"title":{"interfaces/Manifest.html":{}},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/TilePanorama.html":{}}}],["manifestrenderer",{"_index":1131,"title":{"interfaces/ManifestRenderer.html":{}},"body":{"interfaces/ManifestRenderer.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":293,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{}}}],["map(i",{"_index":1098,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["mapcontrols",{"_index":677,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["margin",{"_index":475,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{}}}],["matching",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(math.log2(this.camera.zoom",{"_index":717,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["math.floor((starting_angle",{"_index":662,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["math.floor(this.deltax",{"_index":684,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["math.max",{"_index":359,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["math.max(dimensions.width",{"_index":365,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["math.max(this.minzoom",{"_index":711,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["math.min(dimensions.width",{"_index":361,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["math.pi",{"_index":1012,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["math.pow(2",{"_index":563,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["maticonmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonregistry",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["matrix4",{"_index":1318,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["max",{"_index":532,"title":{},"body":{"components/CursorComponent.html":{}}}],["maxdelta",{"_index":579,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["maxzoom",{"_index":727,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["media",{"_index":531,"title":{},"body":{"components/CursorComponent.html":{}}}],["mergechildren",{"_index":1208,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["mergeself",{"_index":1209,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["message",{"_index":759,"title":{},"body":{"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{}}}],["message'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["message.component",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["message.component.html",{"_index":942,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["message.component.scss",{"_index":941,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["message.component.ts",{"_index":940,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["message.component.ts:9",{"_index":943,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["message/info",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"components/InfoMessageComponent.html":{}}}],["message__content",{"_index":945,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["message__content__pointer",{"_index":949,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["message__text",{"_index":979,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["messagecontentanimation",{"_index":954,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["method",{"_index":1163,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.destroy",{"_index":1164,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.endtransition",{"_index":1196,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.onresize(width",{"_index":1179,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.preload",{"_index":1173,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.render(delta",{"_index":1182,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.setobjectfit?.(objectfit",{"_index":1198,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.settransitionprogress?.(progress",{"_index":1197,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.setwheelzoomenabled?.(state",{"_index":1199,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.starttransition?.(source",{"_index":1195,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.zoomin",{"_index":1193,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.zoomout",{"_index":1192,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["method?.zoomreset",{"_index":1194,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["methods",{"_index":131,"title":{},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"components/MainComponent.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"classes/TileTextureCache.html":{}}}],["minheight",{"_index":354,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["minwidth",{"_index":353,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["minzoom",{"_index":580,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["miscellaneous",{"_index":1411,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":381,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/LoaderComponent.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":1490,"title":{},"body":{"index.html":{}}}],["mototechna",{"_index":864,"title":{},"body":{"components/HomepagePage.html":{}}}],["mouseevent",{"_index":788,"title":{},"body":{"components/HomepagePage.html":{}}}],["move",{"_index":494,"title":{},"body":{"components/CursorComponent.html":{}}}],["moving",{"_index":675,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["mutablerefobject",{"_index":1509,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1462,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":134,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":199,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["new",{"_index":229,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/MainComponent.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"index.html":{}}}],["newsize",{"_index":899,"title":{},"body":{"components/HomepagePage.html":{}}}],["next",{"_index":730,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TransitionViewport.html":{}}}],["ng",{"_index":1460,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":773,"title":{},"body":{"components/HomepagePage.html":{}}}],["ngmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":774,"title":{},"body":{"components/HomepagePage.html":{},"components/PreloadComponent.html":{}}}],["node",{"_index":1342,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["node.requestlevel(targetlevel",{"_index":1348,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["none",{"_index":401,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["not(.cursor",{"_index":506,"title":{},"body":{"components/CursorComponent.html":{}}}],["not(:first",{"_index":470,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["nowrap",{"_index":458,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["npm",{"_index":1448,"title":{},"body":{"index.html":{}}}],["nth",{"_index":518,"title":{},"body":{"components/CursorComponent.html":{}}}],["null",{"_index":269,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["number",{"_index":251,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number.parsefloat(i",{"_index":1099,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["nx",{"_index":1015,"title":{},"body":{"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["nx.position.set",{"_index":1016,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["nx.rotation.set(0",{"_index":1017,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["nx.scale.set(1",{"_index":1018,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["ny",{"_index":1005,"title":{},"body":{"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["ny.position.set(0",{"_index":1006,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["ny.rotation.set(math.pi",{"_index":1007,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["ny.scale.set(1",{"_index":1008,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["nz",{"_index":994,"title":{},"body":{"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["nz.position.set(0",{"_index":995,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["nz.rotation.set(0",{"_index":996,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["nz.scale.set",{"_index":997,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["object",{"_index":651,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["objectfit",{"_index":350,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/typealiases.html":{}}}],["obr",{"_index":926,"title":{},"body":{"components/HomepagePage.html":{}}}],["obrazovka",{"_index":938,"title":{},"body":{"components/HomepagePage.html":{}}}],["omit",{"_index":1153,"title":{},"body":{"interfaces/ManifestRenderer.html":{},"miscellaneous/typealiases.html":{}}}],["onactive",{"_index":895,"title":{},"body":{"components/HomepagePage.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{}}}],["oninit",{"_index":744,"title":{},"body":{"components/HomepagePage.html":{},"components/PreloadComponent.html":{}}}],["onresize",{"_index":586,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"classes/RenderMethod.html":{}}}],["onresize(width",{"_index":618,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["onrightclick",{"_index":775,"title":{},"body":{"components/HomepagePage.html":{}}}],["onrightclick(event",{"_index":806,"title":{},"body":{"components/HomepagePage.html":{}}}],["onzoomchange",{"_index":896,"title":{},"body":{"components/HomepagePage.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{}}}],["onzoomin",{"_index":1135,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["onzoomout",{"_index":1136,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["onzoomreset",{"_index":1137,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["opacity",{"_index":504,"title":{},"body":{"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["openfullscreen",{"_index":776,"title":{},"body":{"components/HomepagePage.html":{}}}],["optional",{"_index":158,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/Manifest.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"classes/TileTextureCache.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":181,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["options.container.appendchild(renderer.domelement",{"_index":1162,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["options.objectfit",{"_index":670,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["options.tilesize",{"_index":1238,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["options?.signal",{"_index":1149,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["orthographictilemesh",{"_index":555,"title":{"classes/OrthographicTileMesh.html":{}},"body":{"classes/ExteriorMapPlane.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["otoči",{"_index":928,"title":{},"body":{"components/HomepagePage.html":{}}}],["otočit",{"_index":929,"title":{},"body":{"components/HomepagePage.html":{}}}],["out",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":391,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/MainComponent.html":{}}}],["outputs",{"_index":382,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/MainComponent.html":{}}}],["overflow",{"_index":483,"title":{},"body":{"components/ControlsComponent.html":{},"components/PageComponent.html":{}}}],["override",{"_index":696,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["overview",{"_index":1493,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwriting",{"_index":330,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["package",{"_index":1396,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":459,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{}}}],["page",{"_index":1291,"title":{},"body":{"components/PageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["page.component.html",{"_index":1293,"title":{},"body":{"components/PageComponent.html":{}}}],["page.component.scss",{"_index":1292,"title":{},"body":{"components/PageComponent.html":{}}}],["pagecomponent",{"_index":46,"title":{"components/PageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["pages",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/homepage/homepage.page",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["pan",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["panorama",{"_index":1167,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["parameters",{"_index":156,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{},"miscellaneous/functions.html":{}}}],["parameters[0",{"_index":173,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["parameters[1",{"_index":175,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["path",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["perform",{"_index":326,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["perspectiveorientationtype",{"_index":1234,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["perspectivetilemesh",{"_index":985,"title":{"classes/PerspectiveTileMesh.html":{}},"body":{"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["perspectivetilemesh(tileloader",{"_index":988,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["pełny",{"_index":935,"title":{},"body":{"components/HomepagePage.html":{}}}],["photos",{"_index":725,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["pl",{"_index":930,"title":{},"body":{"components/HomepagePage.html":{}}}],["plane",{"_index":569,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["planemap",{"_index":581,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["pointer",{"_index":393,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{}}}],["points",{"_index":1028,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["position",{"_index":315,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["position.level",{"_index":255,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["position.x",{"_index":256,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["position.y].join('_",{"_index":257,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["preload",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileMesh.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["preload(altvariant",{"_index":1226,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["preload.component.html",{"_index":1300,"title":{},"body":{"components/PreloadComponent.html":{}}}],["preload.component.scss",{"_index":1299,"title":{},"body":{"components/PreloadComponent.html":{}}}],["preload__content",{"_index":1306,"title":{},"body":{"components/PreloadComponent.html":{}}}],["preload__item",{"_index":1311,"title":{},"body":{"components/PreloadComponent.html":{}}}],["preloadcomponent",{"_index":48,"title":{"components/PreloadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"overview.html":{}}}],["preloadsize",{"_index":760,"title":{},"body":{"components/HomepagePage.html":{}}}],["preservezoom",{"_index":633,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["prevent",{"_index":297,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["primary",{"_index":429,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["priority",{"_index":192,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["private",{"_index":860,"title":{},"body":{"components/HomepagePage.html":{}}}],["process",{"_index":1183,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["prod",{"_index":1478,"title":{},"body":{"index.html":{}}}],["production",{"_index":1480,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":1064,"title":{},"body":{"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"classes/RenderMethod.html":{}}}],["project",{"_index":1452,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"classes/InteriorMapCube.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"interfaces/TransitionViewport.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":234,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["promise.all(idletasks.map",{"_index":311,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["promise.all(tasks",{"_index":572,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{}}}],["promise.reject(new",{"_index":207,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["properties",{"_index":346,"title":{"properties.html":{}},"body":{"interfaces/ClientDimensions.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"interfaces/RenderOptions.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"properties.html":{}}}],["props",{"_index":761,"title":{},"body":{"components/HomepagePage.html":{},"miscellaneous/functions.html":{}}}],["protected",{"_index":290,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["protractor",{"_index":140,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":439,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/HomepagePage.html":{},"components/PreloadComponent.html":{}}}],["px",{"_index":877,"title":{},"body":{"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["px.position.set(1",{"_index":1010,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["px.rotation.set(0",{"_index":1011,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["px.scale.set",{"_index":1013,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["px_per_angle",{"_index":642,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["py",{"_index":999,"title":{},"body":{"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["py.position.set(0",{"_index":1000,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["py.rotation.set(math.pi",{"_index":1002,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["py.scale.set(1",{"_index":1003,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["pz",{"_index":987,"title":{},"body":{"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["pz.position.set(0",{"_index":989,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["pz.rotation.set(0",{"_index":991,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["pz.scale.set(1",{"_index":992,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["queued",{"_index":1184,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["radius",{"_index":403,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/LoaderComponent.html":{}}}],["ranges",{"_index":368,"title":{},"body":{"interfaces/ClientDimensions.html":{},"miscellaneous/functions.html":{}}}],["ranges.map(dimensions",{"_index":371,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["ratio",{"_index":367,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{},"miscellaneous/functions.html":{}}}],["reason",{"_index":271,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["reduce",{"_index":216,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["reference",{"_index":1495,"title":{},"body":{"index.html":{}}}],["reject",{"_index":235,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["reject(new",{"_index":239,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["rejecter",{"_index":270,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["rejecter?.(err",{"_index":284,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["relative",{"_index":948,"title":{},"body":{"components/InfoMessageComponent.html":{},"components/PageComponent.html":{}}}],["reload",{"_index":1465,"title":{},"body":{"index.html":{}}}],["render",{"_index":587,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderMethod.html":{}}}],["render(delta",{"_index":621,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["render/renderfrustum",{"_index":640,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["render/rendermethod",{"_index":351,"title":{},"body":{"interfaces/ClientDimensions.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["rendercallbacks",{"_index":597,"title":{"interfaces/RenderCallbacks.html":{}},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["renderer",{"_index":595,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["renderer(props",{"_index":1440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["renderer.domelement",{"_index":658,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["renderer.domelement.clientheight",{"_index":1178,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderer.domelement.clientwidth",{"_index":1177,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderer.domelement.remove",{"_index":1191,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderer.setclearcolor(0xffffff",{"_index":1161,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderer.setpixelratio(window.devicepixelratio",{"_index":1159,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderer.setsize(...getparentsize(options.container",{"_index":1160,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderer/src/exterior/exteriorcontrols.ts",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["renderer/src/exterior/exteriormapplane.ts",{"_index":543,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["renderer/src/exterior/exteriormapplane.ts:39",{"_index":554,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["renderer/src/exterior/exteriormapplane.ts:47",{"_index":552,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["renderer/src/exterior/exteriormapplane.ts:6",{"_index":551,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["renderer/src/exterior/exteriormethod.ts",{"_index":574,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["renderer/src/exterior/exteriormethod.ts:33",{"_index":613,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:34",{"_index":601,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:35",{"_index":611,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:37",{"_index":607,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:38",{"_index":603,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:40",{"_index":604,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:43",{"_index":605,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:44",{"_index":608,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:47",{"_index":609,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:50",{"_index":610,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:53",{"_index":614,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriormethod.ts:54",{"_index":599,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["renderer/src/exterior/exteriorutils.ts",{"_index":345,"title":{},"body":{"interfaces/ClientDimensions.html":{},"miscellaneous/functions.html":{}}}],["renderer/src/interior/interiorcontrols.ts",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renderer/src/interior/interiormapcube.ts",{"_index":982,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["renderer/src/interior/interiormapcube.ts:54",{"_index":984,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["renderer/src/interior/interiormapcube.ts:6",{"_index":983,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["renderer/src/interior/interiormethod.ts",{"_index":1023,"title":{},"body":{"classes/InteriorMethod.html":{},"miscellaneous/variables.html":{}}}],["renderer/src/interior/interiormethod.ts:143",{"_index":1049,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:17",{"_index":1046,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:174",{"_index":1055,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:18",{"_index":1034,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:20",{"_index":1041,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:22",{"_index":1043,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:23",{"_index":1040,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:25",{"_index":1042,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:26",{"_index":1045,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:32",{"_index":1037,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:33",{"_index":1038,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:34",{"_index":1036,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/interior/interiormethod.ts:36",{"_index":1032,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderer/src/math.ts",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["renderer/src/render/renderfrustum.ts",{"_index":1317,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/renderfrustum.ts:19",{"_index":1333,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/renderfrustum.ts:43",{"_index":1330,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/renderfrustum.ts:5",{"_index":1328,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/renderfrustum.ts:6",{"_index":1324,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/renderfrustum.ts:8",{"_index":1327,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/renderfrustum.ts:9",{"_index":1323,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["renderer/src/render/rendermethod.ts",{"_index":1312,"title":{},"body":{"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{},"miscellaneous/typealiases.html":{}}}],["renderer/src/render/rendermethod.ts:21",{"_index":1350,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:30",{"_index":1351,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:31",{"_index":1355,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:33",{"_index":1353,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:34",{"_index":1360,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:35",{"_index":1361,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:36",{"_index":1362,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:37",{"_index":1354,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:39",{"_index":1359,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:44",{"_index":1352,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:45",{"_index":1357,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:47",{"_index":1356,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/render/rendermethod.ts:49",{"_index":1358,"title":{},"body":{"classes/RenderMethod.html":{}}}],["renderer/src/renderer.ts",{"_index":1132,"title":{},"body":{"interfaces/ManifestRenderer.html":{},"miscellaneous/functions.html":{}}}],["renderer/src/tile/tileloader.ts",{"_index":149,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["renderer/src/tile/tileloader.ts:148",{"_index":1365,"title":{},"body":{"classes/TileLoader.html":{}}}],["renderer/src/tile/tileloader.ts:149",{"_index":1364,"title":{},"body":{"classes/TileLoader.html":{}}}],["renderer/src/tile/tileloader.ts:156",{"_index":1368,"title":{},"body":{"classes/TileLoader.html":{}}}],["renderer/src/tile/tileloader.ts:166",{"_index":1367,"title":{},"body":{"classes/TileLoader.html":{}}}],["renderer/src/tile/tileloader.ts:208",{"_index":1366,"title":{},"body":{"classes/TileLoader.html":{}}}],["renderer/src/tile/tileloader.ts:4",{"_index":1363,"title":{},"body":{"classes/TileAbortError.html":{}}}],["renderer/src/tile/tileloader.ts:46",{"_index":155,"title":{},"body":{"classes/CancellableImageLoader.html":{}}}],["renderer/src/tile/tilemesh.ts",{"_index":1200,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/typealiases.html":{}}}],["renderer/src/tile/tilemesh.ts:115",{"_index":1378,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:123",{"_index":1379,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:129",{"_index":1382,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:148",{"_index":1381,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:156",{"_index":1380,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:169",{"_index":1297,"title":{},"body":{"classes/PerspectiveTileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:188",{"_index":1213,"title":{},"body":{"classes/OrthographicTileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:19",{"_index":1375,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:20",{"_index":1374,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:200",{"_index":1221,"title":{},"body":{"classes/OrthographicTileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:21",{"_index":1371,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:23",{"_index":1372,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:24",{"_index":1373,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:26",{"_index":1370,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:31",{"_index":1369,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:56",{"_index":1377,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tilemesh.ts:83",{"_index":1376,"title":{},"body":{"classes/TileMesh.html":{}}}],["renderer/src/tile/tiletexturecache.ts",{"_index":1383,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["renderer/src/tile/tiletexturecache.ts:10",{"_index":1390,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["renderer/src/tile/tiletexturecache.ts:14",{"_index":1385,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["renderer/src/tile/tiletexturecache.ts:4",{"_index":1384,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["renderer/src/tile/tiletexturecache.ts:6",{"_index":1387,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["renderer/src/types.ts",{"_index":723,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["renderer2",{"_index":781,"title":{},"body":{"components/HomepagePage.html":{}}}],["renderer360",{"_index":762,"title":{},"body":{"components/HomepagePage.html":{}}}],["renderer?.dispose",{"_index":1190,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["renderersize",{"_index":1029,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderfrustum",{"_index":606,"title":{"classes/RenderFrustum.html":{}},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["renderfrustum(this.scene",{"_index":1089,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod",{"_index":575,"title":{"classes/RenderMethod.html":{}},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["rendermethod:111",{"_index":1047,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:115",{"_index":1052,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:119",{"_index":1053,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:147",{"_index":616,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:151",{"_index":635,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:155",{"_index":636,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:159",{"_index":637,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:163",{"_index":625,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:164",{"_index":1051,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:170",{"_index":634,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:178",{"_index":617,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:188",{"_index":1056,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:191",{"_index":627,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:192",{"_index":1057,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:195",{"_index":619,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:196",{"_index":1058,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:200",{"_index":1054,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:234",{"_index":620,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:238",{"_index":622,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:251",{"_index":629,"title":{},"body":{"classes/ExteriorMethod.html":{}}}],["rendermethod:39",{"_index":1065,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:44",{"_index":1059,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:45",{"_index":1063,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["rendermethod:47",{"_index":1061,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["renderoptions",{"_index":598,"title":{"interfaces/RenderOptions.html":{}},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["repeat",{"_index":1305,"title":{},"body":{"components/PreloadComponent.html":{}}}],["repeat(3",{"_index":1309,"title":{},"body":{"components/PreloadComponent.html":{}}}],["requestanimationframe(animate",{"_index":1180,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["requestlevel",{"_index":1210,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{}}}],["requestlevel(targetlevel",{"_index":1229,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["require",{"_index":218,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":1146,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["res.json",{"_index":1154,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["res.ok",{"_index":1150,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["res.status",{"_index":1152,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["reset",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolve",{"_index":273,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["resolve(image",{"_index":237,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["resolver",{"_index":267,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["resolver?.(value",{"_index":282,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["responsive",{"_index":495,"title":{},"body":{"components/CursorComponent.html":{},"components/HomepagePage.html":{}}}],["result",{"_index":265,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["results",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":141,"title":{},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["returns",{"_index":137,"title":{},"body":{"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"components/MainComponent.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"classes/TileTextureCache.html":{},"miscellaneous/functions.html":{}}}],["rgb(var",{"_index":396,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["rgba(240",{"_index":527,"title":{},"body":{"components/CursorComponent.html":{}}}],["rgba(var",{"_index":408,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{}}}],["right",{"_index":420,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"index.html":{}}}],["root'},{'name",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["rotate",{"_index":966,"title":{},"body":{"components/InfoMessageComponent.html":{},"miscellaneous/variables.html":{}}}],["rotate(0deg",{"_index":1119,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rotate(180deg",{"_index":535,"title":{},"body":{"components/CursorComponent.html":{}}}],["rotate(270deg",{"_index":537,"title":{},"body":{"components/CursorComponent.html":{}}}],["rotate(2deg",{"_index":976,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["rotate(360deg",{"_index":1120,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rotate(3deg",{"_index":970,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["rotate(90deg",{"_index":538,"title":{},"body":{"components/CursorComponent.html":{}}}],["rotation",{"_index":648,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["route",{"_index":782,"title":{},"body":{"components/HomepagePage.html":{}}}],["routermodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":75,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["run",{"_index":1447,"title":{},"body":{"index.html":{}}}],["running",{"_index":1481,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["samochód",{"_index":927,"title":{},"body":{"components/HomepagePage.html":{}}}],["sanitizer",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/arrow.svg",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/close.svg",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/expand.svg",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/eye.svg",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/minus.svg",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/plus.svg",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/pointer",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl('assets/icons/pointer.svg",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["scaffolding",{"_index":1469,"title":{},"body":{"index.html":{}}}],["scale(0.3",{"_index":959,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["scale(0.5",{"_index":514,"title":{},"body":{"components/CursorComponent.html":{}}}],["scale(0.9",{"_index":963,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["scale(1",{"_index":507,"title":{},"body":{"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{}}}],["scale(1.05",{"_index":961,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["scale(1.1",{"_index":432,"title":{},"body":{"components/CloseComponent.html":{}}}],["scaling",{"_index":649,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["scene",{"_index":582,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["screen",{"_index":650,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["screencoords",{"_index":1069,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["scrollpositionrestoration",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["serve",{"_index":1461,"title":{},"body":{"index.html":{}}}],["server",{"_index":1459,"title":{},"body":{"index.html":{}}}],["set",{"_index":1340,"title":{},"body":{"classes/RenderFrustum.html":{},"classes/TileTextureCache.html":{}}}],["set(key",{"_index":1389,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["setobjectfit",{"_index":588,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"classes/RenderMethod.html":{}}}],["setobjectfit(fit",{"_index":624,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["setobjectfit(objectfit",{"_index":1060,"title":{},"body":{"classes/InteriorMethod.html":{},"classes/RenderMethod.html":{}}}],["setobjectfit?(objectfit",{"_index":1316,"title":{},"body":{"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{}}}],["settimeout",{"_index":925,"title":{},"body":{"components/HomepagePage.html":{}}}],["settransitionprogress",{"_index":589,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"classes/RenderMethod.html":{}}}],["settransitionprogress(progress",{"_index":1062,"title":{},"body":{"classes/InteriorMethod.html":{},"classes/RenderMethod.html":{}}}],["settransitionprogress(ratio",{"_index":626,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["settransitionprogress?(progress",{"_index":1315,"title":{},"body":{"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{}}}],["setwheelzoomenabled",{"_index":590,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"classes/RenderMethod.html":{}}}],["setwheelzoomenabled(state",{"_index":628,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["shadow",{"_index":405,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/LoaderComponent.html":{}}}],["signal",{"_index":153,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["signal.aborted",{"_index":206,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["signal.addeventlistener('abort",{"_index":208,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["signal?.aborted",{"_index":227,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["size",{"_index":453,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/PreloadComponent.html":{}}}],["slice(0",{"_index":309,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["solid",{"_index":473,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/LoaderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"index.html":{}}}],["space",{"_index":457,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["span')).gettext",{"_index":145,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exteriorcontrols.ts",{"_index":1413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../exteriormethod.ts",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../exteriorutils.ts",{"_index":1423,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../interiorcontrols.ts",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interiormethod.ts",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../math.ts",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../renderer.ts",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../renderer.utils.ts",{"_index":1431,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../rendermethod.ts",{"_index":1507,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tileloader.ts",{"_index":1414,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../tilemesh.ts",{"_index":1508,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/close/close.component.ts",{"_index":374,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/components/close/close.component.ts:10",{"_index":388,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/components/close/close.component.ts:12",{"_index":389,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/components/close/close.component.ts:14",{"_index":384,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/components/close/close.component.ts:9",{"_index":386,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/components/controls/controls",{"_index":434,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["src/app/components/controls/controls.component.ts",{"_index":477,"title":{},"body":{"components/ControlsComponent.html":{}}}],["src/app/components/controls/controls.component.ts:10",{"_index":481,"title":{},"body":{"components/ControlsComponent.html":{}}}],["src/app/components/controls/controls.component.ts:9",{"_index":482,"title":{},"body":{"components/ControlsComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts",{"_index":490,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:10",{"_index":501,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:11",{"_index":497,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:12",{"_index":498,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:13",{"_index":500,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:14",{"_index":499,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:15",{"_index":496,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/cursor/cursor.component.ts:9",{"_index":502,"title":{},"body":{"components/CursorComponent.html":{}}}],["src/app/components/info",{"_index":939,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":1102,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:10",{"_index":1106,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:9",{"_index":1107,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/main/main.component.ts",{"_index":1121,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:11",{"_index":1129,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:13",{"_index":1127,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/main/main.component.ts:9",{"_index":1128,"title":{},"body":{"components/MainComponent.html":{}}}],["src/app/components/page/page.component.ts",{"_index":1290,"title":{},"body":{"components/PageComponent.html":{}}}],["src/app/components/page/page.component.ts:8",{"_index":1294,"title":{},"body":{"components/PageComponent.html":{}}}],["src/app/components/preload/preload.component.ts",{"_index":1298,"title":{},"body":{"components/PreloadComponent.html":{}}}],["src/app/components/preload/preload.component.ts:10",{"_index":1303,"title":{},"body":{"components/PreloadComponent.html":{}}}],["src/app/components/preload/preload.component.ts:11",{"_index":1301,"title":{},"body":{"components/PreloadComponent.html":{}}}],["src/app/components/preload/preload.component.ts:15",{"_index":1304,"title":{},"body":{"components/PreloadComponent.html":{}}}],["src/app/components/preload/preload.component.ts:9",{"_index":1302,"title":{},"body":{"components/PreloadComponent.html":{}}}],["src/app/pages/homepage/homepage.page.ts",{"_index":742,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:110",{"_index":796,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:129",{"_index":800,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:134",{"_index":808,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:138",{"_index":799,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:14",{"_index":814,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:140",{"_index":784,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:144",{"_index":803,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:15",{"_index":827,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:16",{"_index":832,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:17",{"_index":835,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:176",{"_index":802,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:18",{"_index":849,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:19",{"_index":823,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:20",{"_index":821,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:21",{"_index":851,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:22",{"_index":845,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:26",{"_index":846,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:27",{"_index":833,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:28",{"_index":819,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:29",{"_index":816,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:30",{"_index":815,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:31",{"_index":834,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:32",{"_index":824,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:33",{"_index":829,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:34",{"_index":848,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:35",{"_index":837,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:36",{"_index":839,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:37",{"_index":825,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:38",{"_index":811,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:40",{"_index":789,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:44",{"_index":790,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:48",{"_index":798,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:54",{"_index":809,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:59",{"_index":810,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:64",{"_index":793,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:69",{"_index":794,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:74",{"_index":791,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:78",{"_index":795,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/pages/homepage/homepage.page.ts:82",{"_index":801,"title":{},"body":{"components/HomepagePage.html":{}}}],["src/app/renderer/src/renderer.ts",{"_index":1439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/renderer/src/renderer.utils.ts",{"_index":1443,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/driverama",{"_index":147,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":1445,"title":{"index.html":{}},"body":{}}],["starting_angle",{"_index":644,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["starttransition",{"_index":591,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["starttransition(source",{"_index":630,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderMethod.html":{}}}],["state",{"_index":259,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/RenderMethod.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["state.error",{"_index":283,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["state.idle",{"_index":274,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["state.inprogress",{"_index":276,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["state.success",{"_index":279,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["static",{"_index":1202,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["stored",{"_index":1475,"title":{},"body":{"index.html":{}}}],["string",{"_index":152,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":373,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["styleurls",{"_index":376,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["success",{"_index":261,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/enumerations.html":{}}}],["super",{"_index":559,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["super('aborted",{"_index":167,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["super(new",{"_index":1236,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["super(textureloader",{"_index":1288,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["super(tileloader",{"_index":652,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["support",{"_index":1496,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1497,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":356,"title":{},"body":{"interfaces/ClientDimensions.html":{},"interfaces/ManifestRenderer.html":{}}}],["t",{"_index":172,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["target",{"_index":632,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["targetfit",{"_index":700,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["targetlevel",{"_index":716,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["task",{"_index":288,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["task.abortcontroller?.abort",{"_index":342,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["task.execute",{"_index":312,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["tasks",{"_index":1020,"title":{},"body":{"classes/InteriorMapCube.html":{},"interfaces/ManifestRenderer.html":{}}}],["tasks.push(plane.preload",{"_index":1021,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["tasks.push(plane.preload(angle",{"_index":571,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["test",{"_index":1484,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1483,"title":{},"body":{"index.html":{}}}],["text",{"_index":466,"title":{},"body":{"components/ControlsButtonComponent.html":{}}}],["texture",{"_index":331,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/TransitionViewport.html":{}}}],["texture.dispose",{"_index":1394,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["texture.image",{"_index":336,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["texture.needsupdate",{"_index":337,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["textureabortcontroller",{"_index":1204,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["texturecache",{"_index":291,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["textureloader",{"_index":1205,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["then(blob",{"_index":231,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["then(data",{"_index":889,"title":{},"body":{"components/HomepagePage.html":{}}}],["then(i",{"_index":226,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["then(texture",{"_index":1255,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["then(value",{"_index":278,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["this.add(childplane",{"_index":1273,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.add(nx",{"_index":1019,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["this.add(ny",{"_index":1009,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["this.add(nz",{"_index":998,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["this.add(px",{"_index":1014,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["this.add(py",{"_index":1004,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["this.add(pz",{"_index":993,"title":{},"body":{"classes/InteriorMapCube.html":{}}}],["this.buttons",{"_index":918,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.callbacks.onactive",{"_index":688,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.callbacks.onzoomchange",{"_index":1086,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.camera",{"_index":659,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.bottom",{"_index":708,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.left",{"_index":705,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.matrixworldinverse",{"_index":1338,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.camera.position.set",{"_index":681,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.position.setfromsphericalcoords",{"_index":1081,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.camera.projectionmatrix",{"_index":1337,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.camera.right",{"_index":706,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.top",{"_index":707,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.up.set(0",{"_index":673,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":682,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.camera.zoom",{"_index":672,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.canvasdiv?.nativeelement",{"_index":885,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.changesize",{"_index":866,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.changetype(event.data.value",{"_index":919,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.children",{"_index":570,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.children.length",{"_index":1260,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.clicked.emit(true",{"_index":392,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{}}}],["this.closefullscreen",{"_index":924,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.computebottomright",{"_index":1078,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.computecamera",{"_index":1079,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.computecamera.copy(this.camera",{"_index":1080,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.computetopleft",{"_index":1077,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.controls",{"_index":686,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.clickzoomin",{"_index":693,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.clickzoomout",{"_index":694,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.dispose",{"_index":692,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.setwheelenabled(state",{"_index":722,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.update(delta",{"_index":718,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.updateminzoom(this.minzoom",{"_index":712,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.controls.zoomreset",{"_index":695,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.cubemap",{"_index":1084,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.cursoractive",{"_index":880,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.cursormove",{"_index":879,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.cursorposition",{"_index":875,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.data",{"_index":653,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.data.clear",{"_index":1395,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["this.data.get(key",{"_index":1391,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["this.data.height",{"_index":667,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.data.maxzoom",{"_index":666,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.data.photos",{"_index":568,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["this.data.photos.length",{"_index":663,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.data.set(key",{"_index":1392,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["this.data.tilesize",{"_index":668,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.data.values",{"_index":1393,"title":{},"body":{"classes/TileTextureCache.html":{}}}],["this.data.width",{"_index":665,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.defaultsize",{"_index":902,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.deltax",{"_index":661,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.elem",{"_index":907,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.frustum",{"_index":1088,"title":{},"body":{"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{}}}],["this.frustum.containspoint(vec",{"_index":1349,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.frustum.intersectsbox(worldbox3",{"_index":1346,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.frustum.setfromprojectionmatrix",{"_index":1335,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.frustum.update(targetlevel",{"_index":719,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.geometry",{"_index":1266,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.geometry.parameters.width",{"_index":1271,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.getlevelfov(fov",{"_index":1101,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.hasinterior",{"_index":890,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.id",{"_index":843,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.initcanvas",{"_index":870,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.isfullscreen",{"_index":909,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.joblist.get(url",{"_index":321,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["this.joblist.set(url",{"_index":340,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["this.joblist.values",{"_index":305,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["this.loading",{"_index":886,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.loadtexturemap",{"_index":1247,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.material",{"_index":1245,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.material.map",{"_index":1256,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.material.needsupdate",{"_index":1258,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.material.opacity",{"_index":1257,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.matrix4",{"_index":1334,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.matrix4.multiplymatrices",{"_index":1336,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.maxdelta",{"_index":664,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.mergeself",{"_index":1282,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.message",{"_index":903,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.minzoom",{"_index":671,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.objectfit",{"_index":669,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.openfullscreen",{"_index":923,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.options",{"_index":1241,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.options.baseurl",{"_index":1252,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.options.zoffset",{"_index":1272,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.parent",{"_index":1278,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.parent.mergechildren",{"_index":1279,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.plane",{"_index":1287,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.planemap",{"_index":683,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.planemap.preload",{"_index":715,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.planemap.updateangle(math.floor(this.deltax",{"_index":721,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.preload",{"_index":881,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.preloadsize",{"_index":901,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.props.type",{"_index":867,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.remove(this.children[i",{"_index":1277,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.renderer.addclass(document.body",{"_index":910,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderer.addclass(this._doc.documentelement",{"_index":912,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderer.domelement",{"_index":687,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.renderer.domelement.clientheight",{"_index":1073,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.renderer.domelement.clientwidth",{"_index":1072,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.renderer.render(this.scene",{"_index":720,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.renderer.setproperty(this.canvasdiv?.nativeelement",{"_index":882,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderer.setsize(width",{"_index":714,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.renderer360",{"_index":884,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderer360.init",{"_index":894,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderer360.onzoomin",{"_index":871,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderer360.onzoomout",{"_index":873,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.renderersize",{"_index":1071,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.renderersize.height",{"_index":1076,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.renderersize.width",{"_index":1075,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.renderorder",{"_index":1243,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.route.snapshot.queryparammap.get('custom",{"_index":820,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('fullscreen",{"_index":828,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('id",{"_index":826,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('lang",{"_index":830,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('mobile",{"_index":822,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('preload",{"_index":836,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('responsive",{"_index":847,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('type",{"_index":844,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.route.snapshot.queryparammap.get('web",{"_index":850,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.scene",{"_index":654,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.scene.add(this.cubemap",{"_index":1085,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.scene.add(this.planemap",{"_index":685,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.scene.background",{"_index":655,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.scene.traverse(node",{"_index":1341,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["this.size",{"_index":897,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.textureabortcontroller",{"_index":1248,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.textureabortcontroller.abort",{"_index":1249,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.texturecache",{"_index":295,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["this.texturecache.set(url",{"_index":333,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["this.textureloader",{"_index":1240,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.textureloader.load",{"_index":1251,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.tileposition",{"_index":1242,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.tileposition.level",{"_index":1244,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.tileposition.x",{"_index":1264,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.tileposition.y",{"_index":1265,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.touched.emit(true",{"_index":1130,"title":{},"body":{"components/MainComponent.html":{}}}],["this.transitionobjectfit",{"_index":699,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.transitionobjectfit.preservezoom",{"_index":713,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.transitionobjectfit.source",{"_index":709,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.transitionobjectfit.target",{"_index":710,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.transitionobjectfit?.source.fit",{"_index":703,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.transitionobjectfit?.target.fit",{"_index":702,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.transitionprogress",{"_index":701,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["this.updateminzoom",{"_index":1087,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["this.updatevariant(angle",{"_index":1289,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.variant",{"_index":1239,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["this.webtype",{"_index":913,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.zoomin",{"_index":920,"title":{},"body":{"components/HomepagePage.html":{}}}],["this.zoomout",{"_index":921,"title":{},"body":{"components/HomepagePage.html":{}}}],["three",{"_index":161,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["three.box3",{"_index":1344,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["three.camera",{"_index":1322,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["three.frustum",{"_index":1325,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["three.group",{"_index":544,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{}}}],["three.mathutils.clamp(ratio",{"_index":704,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["three.mathutils.degtorad(145",{"_index":1083,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["three.mathutils.degtorad(75",{"_index":1082,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["three.matrix4",{"_index":1326,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["three.mesh",{"_index":1235,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["three.meshbasicmaterial",{"_index":1246,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["three.orthographiccamera",{"_index":600,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["three.perspectivecamera",{"_index":1033,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["three.planegeometry",{"_index":1267,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["three.planegeometry(options.tilesize",{"_index":1237,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["three.renderer",{"_index":596,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["three.scene",{"_index":612,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["three.texture",{"_index":332,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{}}}],["three.vector3",{"_index":1035,"title":{},"body":{"classes/InteriorMethod.html":{},"classes/RenderFrustum.html":{}}}],["three/src/math/mathutils",{"_index":639,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["threesixtyfullscreen",{"_index":905,"title":{},"body":{"components/HomepagePage.html":{}}}],["threesixtyhasinterior",{"_index":893,"title":{},"body":{"components/HomepagePage.html":{}}}],["threesixtyloaded",{"_index":892,"title":{},"body":{"components/HomepagePage.html":{}}}],["threesixtymove",{"_index":904,"title":{},"body":{"components/HomepagePage.html":{}}}],["threesixtytype",{"_index":869,"title":{},"body":{"components/HomepagePage.html":{}}}],["threesixtyzoomin",{"_index":872,"title":{},"body":{"components/HomepagePage.html":{}}}],["threesixtyzoomout",{"_index":874,"title":{},"body":{"components/HomepagePage.html":{}}}],["throw",{"_index":228,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["thus",{"_index":197,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["tile",{"_index":168,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["tile/tileloader",{"_index":558,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["tile/tilemesh",{"_index":556,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/InteriorMapCube.html":{},"classes/RenderFrustum.html":{}}}],["tile/tiletexturecache",{"_index":1142,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["tileaborterror",{"_index":163,"title":{"classes/TileAbortError.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["tilejob",{"_index":285,"title":{"interfaces/TileJob.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["tileloader",{"_index":289,"title":{"classes/TileLoader.html":{}},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["tileloader(cache",{"_index":1158,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["tileloadercancel",{"_index":187,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/typealiases.html":{}}}],["tilemesh",{"_index":1201,"title":{"classes/TileMesh.html":{}},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderFrustum.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["tilemesh.childtranslate",{"_index":1263,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["tilemesh:115",{"_index":1224,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:123",{"_index":1225,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:129",{"_index":1232,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:148",{"_index":1230,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:156",{"_index":1227,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:19",{"_index":1220,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:20",{"_index":1219,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:21",{"_index":1216,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:23",{"_index":1217,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:24",{"_index":1218,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:26",{"_index":1214,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:56",{"_index":1223,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tilemesh:83",{"_index":1222,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{}}}],["tileoptions",{"_index":1215,"title":{"interfaces/TileOptions.html":{}},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["tilepanorama",{"_index":724,"title":{"interfaces/TilePanorama.html":{}},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["tileposition",{"_index":249,"title":{"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"miscellaneous/functions.html":{}}}],["tilesize",{"_index":547,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"classes/InteriorMapCube.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["tiletexturecache",{"_index":162,"title":{"classes/TileTextureCache.html":{}},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{}}}],["times",{"_index":217,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["timestamp",{"_index":738,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["todo",{"_index":211,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["top",{"_index":418,"title":{},"body":{"components/CloseComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/PreloadComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["touch",{"_index":1125,"title":{},"body":{"components/MainComponent.html":{}}}],["touch_dolly_pan",{"_index":1418,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["touch_pan",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["touch_rotate",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touched",{"_index":1126,"title":{},"body":{"components/MainComponent.html":{}}}],["tozoom",{"_index":370,"title":{},"body":{"interfaces/ClientDimensions.html":{}}}],["transform",{"_index":431,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["transition",{"_index":399,"title":{"interfaces/Transition.html":{}},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"components/InfoMessageComponent.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["transitionobjectfit",{"_index":583,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["transitionprogress",{"_index":584,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["transitionviewport",{"_index":631,"title":{"interfaces/TransitionViewport.html":{}},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["translate",{"_index":944,"title":{},"body":{"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["translatex",{"_index":484,"title":{},"body":{"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{}}}],["translatex(0",{"_index":964,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["translatex(0px",{"_index":817,"title":{},"body":{"components/HomepagePage.html":{}}}],["translatex(10",{"_index":975,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["translatex(20",{"_index":969,"title":{},"body":{"components/InfoMessageComponent.html":{}}}],["translatey",{"_index":534,"title":{},"body":{"components/CursorComponent.html":{},"components/HomepagePage.html":{}}}],["translatey(0px",{"_index":818,"title":{},"body":{"components/HomepagePage.html":{}}}],["translation",{"_index":678,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["transparent",{"_index":402,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/LoaderComponent.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["true",{"_index":338,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["turntable",{"_index":647,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["type",{"_index":157,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/LazyPromise.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type(1",{"_index":521,"title":{},"body":{"components/CursorComponent.html":{}}}],["type(2",{"_index":519,"title":{},"body":{"components/CursorComponent.html":{}}}],["type(3",{"_index":523,"title":{},"body":{"components/CursorComponent.html":{}}}],["type(4",{"_index":520,"title":{},"body":{"components/CursorComponent.html":{}}}],["typealiases",{"_index":1503,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":183,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["types",{"_index":557,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"classes/InteriorMapCube.html":{},"classes/InteriorMethod.html":{},"interfaces/ManifestRenderer.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["typescript",{"_index":732,"title":{},"body":{"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"interfaces/InteriorTilePanorama.html":{},"interfaces/Manifest.html":{},"interfaces/TilePanorama.html":{}}}],["undefined",{"_index":287,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{},"classes/TileTextureCache.html":{}}}],["unit",{"_index":1482,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":272,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["update",{"_index":1320,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["update(targetlevel",{"_index":1332,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["updateangle",{"_index":545,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/OrthographicTileMesh.html":{}}}],["updateangle(angle",{"_index":553,"title":{},"body":{"classes/ExteriorMapPlane.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["updateminzoom",{"_index":1031,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["updatevariant",{"_index":1211,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{}}}],["updatevariant(variant",{"_index":1231,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["upgrade",{"_index":219,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["url",{"_index":159,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"interfaces/ManifestRenderer.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"miscellaneous/functions.html":{}}}],["url.createobjecturl(blob",{"_index":233,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["url.revokeobjecturl(bloburl",{"_index":241,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["use",{"_index":1471,"title":{},"body":{"index.html":{}}}],["useless",{"_index":1314,"title":{},"body":{"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TransitionViewport.html":{}}}],["userefcallback",{"_index":1429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userefcallback(fn",{"_index":1441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["userenderercontrols",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":268,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{},"interfaces/TransitionViewport.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/HomepagePage.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"components/MainComponent.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{}}}],["variables",{"_index":1510,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":314,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["vec",{"_index":1331,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["version",{"_index":1456,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":200,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{},"index.html":{}}}],["viewchild",{"_index":852,"title":{},"body":{"components/HomepagePage.html":{}}}],["viewchild('canvasdiv",{"_index":813,"title":{},"body":{"components/HomepagePage.html":{}}}],["viewport",{"_index":646,"title":{"interfaces/Viewport.html":{}},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["visiblenodes",{"_index":1339,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["visiblenodes.add(node",{"_index":1347,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["void",{"_index":188,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"classes/ExteriorMapPlane.html":{},"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"components/MainComponent.html":{},"interfaces/ManifestRenderer.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderFrustum.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TilePosition.html":{},"classes/TileTextureCache.html":{},"interfaces/TransitionViewport.html":{}}}],["web",{"_index":214,"title":{},"body":{"classes/CancellableImageLoader.html":{},"components/HomepagePage.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["webglrenderer",{"_index":1138,"title":{},"body":{"interfaces/ManifestRenderer.html":{}}}],["webpack",{"_index":220,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["webtype",{"_index":763,"title":{},"body":{"components/HomepagePage.html":{}}}],["weight",{"_index":455,"title":{},"body":{"components/ControlsButtonComponent.html":{},"components/CursorComponent.html":{}}}],["white",{"_index":397,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsButtonComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{}}}],["whole",{"_index":680,"title":{},"body":{"classes/ExteriorMethod.html":{},"interfaces/Transition.html":{},"interfaces/Viewport.html":{}}}],["width",{"_index":349,"title":{},"body":{"interfaces/ClientDimensions.html":{},"components/CloseComponent.html":{},"components/CursorComponent.html":{},"classes/ExteriorMethod.html":{},"interfaces/ExteriorTilePanorama.html":{},"interfaces/HandheldShape.html":{},"components/InfoMessageComponent.html":{},"classes/InteriorMethod.html":{},"interfaces/InteriorTilePanorama.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestRenderer.html":{},"components/PageComponent.html":{},"components/PreloadComponent.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/TilePanorama.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["window.addeventlistener('message",{"_index":914,"title":{},"body":{"components/HomepagePage.html":{}}}],["window.innerheight",{"_index":898,"title":{},"body":{"components/HomepagePage.html":{}}}],["window.innerwidth",{"_index":838,"title":{},"body":{"components/HomepagePage.html":{}}}],["window.parent.postmessage",{"_index":868,"title":{},"body":{"components/HomepagePage.html":{}}}],["window:resize",{"_index":779,"title":{},"body":{"components/HomepagePage.html":{}}}],["wnętrze",{"_index":933,"title":{},"body":{"components/HomepagePage.html":{}}}],["work",{"_index":303,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["worker",{"_index":215,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"interfaces/TilePosition.html":{}}}],["world_tile_size",{"_index":1066,"title":{},"body":{"classes/InteriorMethod.html":{},"miscellaneous/variables.html":{}}}],["worldbox3",{"_index":1343,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["worldbox3.setfromobject(node",{"_index":1345,"title":{},"body":{"classes/RenderFrustum.html":{}}}],["worldcoords",{"_index":1068,"title":{},"body":{"classes/InteriorMethod.html":{}}}],["x",{"_index":252,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/ExteriorMapPlane.html":{},"classes/InteriorMethod.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["xsize",{"_index":566,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["y",{"_index":253,"title":{},"body":{"classes/CancellableImageLoader.html":{},"interfaces/LazyPromise.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileAbortError.html":{},"interfaces/TileJob.html":{},"classes/TileLoader.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition.html":{},"interfaces/TilePosition-1.html":{}}}],["yes",{"_index":160,"title":{},"body":{"classes/CancellableImageLoader.html":{},"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/RenderMethod.html":{},"classes/TileMesh.html":{},"miscellaneous/functions.html":{}}}],["ysize",{"_index":567,"title":{},"body":{"classes/ExteriorMapPlane.html":{}}}],["z",{"_index":421,"title":{},"body":{"components/CloseComponent.html":{},"components/ControlsComponent.html":{},"components/CursorComponent.html":{},"components/InfoMessageComponent.html":{},"components/LoaderComponent.html":{},"classes/OrthographicTileMesh.html":{},"components/PageComponent.html":{},"classes/PerspectiveTileMesh.html":{},"components/PreloadComponent.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["zewnętrzny",{"_index":931,"title":{},"body":{"components/HomepagePage.html":{}}}],["zoffset",{"_index":1233,"title":{},"body":{"classes/OrthographicTileMesh.html":{},"classes/PerspectiveTileMesh.html":{},"classes/TileMesh.html":{},"interfaces/TileOptions.html":{},"interfaces/TilePosition-1.html":{}}}],["zone.js",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"components/HomepagePage.html":{},"overview.html":{}}}],["zoomin",{"_index":592,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["zoomout",{"_index":593,"title":{},"body":{"classes/ExteriorMethod.html":{},"components/HomepagePage.html":{},"classes/InteriorMethod.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}],["zoomreset",{"_index":594,"title":{},"body":{"classes/ExteriorMethod.html":{},"classes/InteriorMethod.html":{},"interfaces/RenderCallbacks.html":{},"classes/RenderMethod.html":{},"interfaces/RenderOptions.html":{},"interfaces/Transition.html":{},"interfaces/TransitionViewport.html":{},"interfaces/Viewport.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n}\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCloseComponent\n\nCloseComponent\n\nAppModule -->\n\nCloseComponent->AppModule\n\n\n\n\n\nControlsButtonComponent\n\nControlsButtonComponent\n\nAppModule -->\n\nControlsButtonComponent->AppModule\n\n\n\n\n\nControlsComponent\n\nControlsComponent\n\nAppModule -->\n\nControlsComponent->AppModule\n\n\n\n\n\nCursorComponent\n\nCursorComponent\n\nAppModule -->\n\nCursorComponent->AppModule\n\n\n\n\n\nHomepagePage\n\nHomepagePage\n\nAppModule -->\n\nHomepagePage->AppModule\n\n\n\n\n\nInfoMessageComponent\n\nInfoMessageComponent\n\nAppModule -->\n\nInfoMessageComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nPageComponent\n\nPageComponent\n\nAppModule -->\n\nPageComponent->AppModule\n\n\n\n\n\nPreloadComponent\n\nPreloadComponent\n\nAppModule -->\n\nPreloadComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CloseComponent\n                        \n                        \n                            ControlsButtonComponent\n                        \n                        \n                            ControlsComponent\n                        \n                        \n                            CursorComponent\n                        \n                        \n                            HomepagePage\n                        \n                        \n                            InfoMessageComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MainComponent\n                        \n                        \n                            PageComponent\n                        \n                        \n                            PreloadComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatIconModule, MatIconRegistry } from '@angular/material/icon';\n\nimport { AppComponent } from './app.component';\n\n/* Pages */\nimport { HomepagePage } from './pages/homepage/homepage.page';\n\n/* Components */\nimport { CloseComponent } from './components/close/close.component';\nimport { ControlsComponent } from './components/controls/controls.component';\nimport { ControlsButtonComponent } from './components/controls/controls-button/controls-button.component';\nimport { CursorComponent } from './components/cursor/cursor.component';\nimport { InfoMessageComponent } from './components/info-message/info-message.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { MainComponent } from './components/main/main.component';\nimport { PageComponent } from './components/page/page.component';\nimport { PreloadComponent } from './components/preload/preload.component';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomepagePage }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomepagePage,\n    CloseComponent,\n    ControlsComponent,\n    ControlsButtonComponent,\n    CursorComponent,\n    InfoMessageComponent,\n    LoaderComponent,\n    MainComponent,\n    PageComponent,\n    PreloadComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false,\n        scrollPositionRestoration: 'enabled',\n        anchorScrolling: 'enabled',\n      }\n    ),\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon('arrow', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/arrow.svg'));\n    iconRegistry.addSvgIcon('eye', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/eye.svg'));\n    iconRegistry.addSvgIcon('expand', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/expand.svg'));\n    iconRegistry.addSvgIcon('close', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/close.svg'));\n    iconRegistry.addSvgIcon('minus', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/minus.svg'));\n    iconRegistry.addSvgIcon('plus', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/plus.svg'));\n    iconRegistry.addSvgIcon('pointer', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/pointer.svg'));\n    iconRegistry.addSvgIcon('pointer-cursor', sanitizer.bypassSecurityTrustResourceUrl('assets/icons/pointer-cursor.svg'));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTitleText\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTitleText\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTitleText()\n                \n            \n\n\n                    \n                        \n                            Defined in e2e/src/app.po.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        navigateTo\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigateTo()\n                \n            \n\n\n                    \n                        \n                            Defined in e2e/src/app.po.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancellableImageLoader.html":{"url":"classes/CancellableImageLoader.html","title":"class - CancellableImageLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancellableImageLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileLoader.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(url: string, signal?: AbortSignal)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signal\n                                            \n                                                        AbortSignal\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileTextureCache } from './TileTextureCache'\n\nexport class TileAbortError extends Error {\n  constructor() {\n    super('Aborted tile loading')\n  }\n}\n\nfunction bindOnce(image: T) {\n  type Name = Parameters[0]\n  type Callback = Parameters[1]\n  const callbacks: [Name, Callback][] = []\n\n  function cancel() {\n    for (const [name, callback] of callbacks) {\n      image.removeEventListener(name, callback)\n    }\n  }\n\n  return {\n    bind(\n      ...[name, func, options]: Parameters\n    ) {\n      callbacks.push([name, func])\n\n      const callback: typeof func = (...args) => {\n        cancel()\n        if (typeof func === 'function') {\n          func(...args)\n        }\n      }\n\n      image.addEventListener(name, callback, options)\n    },\n    cancel\n  }\n}\n\nexport type TileLoaderCancel = () => void\n\n// Images are considered low priority by Chrome etc.\n// https://web.dev/priority-hints/\n// Thus, to load images in high priority, we need to load them via fetch\nclass CancellableImageLoader {\n  load(url: string, signal?: AbortSignal): Promise {\n    const image = document.createElement('img')\n    const callbacks = bindOnce(image)\n    image.crossOrigin = 'anonymous'\n\n    if (signal) {\n      if (signal.aborted) return Promise.reject(new TileAbortError())\n      signal.addEventListener('abort', () => {\n        callbacks.cancel()\n        image.src = ''\n      })\n    }\n\n    // TODO: download and decode images in a web worker to reduce loading times\n    // This will require us to upgrade to Webpack 5 and might destroy\n    // compatibility with Aures\n    return fetch(url, { signal })\n      .then(i => {\n        if (signal?.aborted) throw new TileAbortError()\n        return i.blob()\n      })\n      .then(blob => {\n        if (signal?.aborted) throw new TileAbortError()\n\n        const blobUrl = URL.createObjectURL(blob)\n        image.src = blobUrl\n        return new Promise((resolve, reject) => {\n          callbacks.bind('load', () => resolve(image), false)\n          callbacks.bind('error', () => reject(new TileAbortError()), false)\n        }).finally(() => URL.revokeObjectURL(blobUrl))\n      })\n      .catch(err => {\n        if (\n          err instanceof DOMException &&\n          err.code === DOMException.ABORT_ERR\n        ) {\n          throw new TileAbortError()\n        }\n        throw err\n      })\n  }\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\nfunction getTilePositionString(position: TilePosition) {\n  return [position.level, position.x, position.y].join('_')\n}\n\nenum State {\n  Error,\n  InProgress,\n  Success,\n  Idle\n}\n\ninterface LazyPromise {\n  state: State\n  execute: () => void\n  result: Promise\n}\n\nfunction createLazyPromise(innerFn: () => Promise): LazyPromise {\n  let resolver: ((value: T) => void) | null = null\n  let rejecter: ((reason?: unknown) => void) | null = null\n\n  const result = new Promise((resolve, reject) => {\n    resolver = resolve\n    rejecter = reject\n  })\n\n  const lazyPromise = {\n    state: State.Idle,\n    execute: () => {\n      lazyPromise.state = State.InProgress\n      innerFn()\n        .then(value => {\n          lazyPromise.state = State.Success\n          if (!resolver) throw new Error('Resolver not found')\n          resolver?.(value)\n        })\n        .catch(err => {\n          lazyPromise.state = State.Error\n          rejecter?.(err)\n        })\n    },\n    result\n  }\n\n  return lazyPromise\n}\n\nexport interface TileJob {\n  abortController: AbortController | undefined\n  task: LazyPromise\n}\n\nexport class TileLoader {\n  protected textureCache: TileTextureCache\n  protected jobList = new Map()\n\n  constructor(cache: TileTextureCache) {\n    this.textureCache = cache\n  }\n\n  // To prevent frame drops, execute only a fraction of jobs at 1 frame\n  work() {\n    const idleTasks = [...this.jobList.values()]\n      .filter(\n        i => i.task.state === State.Idle && !i.abortController?.signal.aborted\n      )\n      .slice(0, 3)\n\n    return Promise.all(idleTasks.map(({ task }) => task.execute()))\n  }\n\n  load(baseUrl: string, variant: string, position: TilePosition): TileJob {\n    const fileName = `${getTilePositionString(position)}.jpg`\n    const url = [baseUrl, variant, fileName].join('/')\n\n    const cachedTask = this.jobList.get(url)\n    if (\n      cachedTask != null &&\n      cachedTask.task.state !== State.Error &&\n      !(\n        cachedTask.abortController?.signal.aborted &&\n        cachedTask.task.state !== State.Success\n      )\n    ) {\n      return cachedTask\n    }\n\n    const loader = new CancellableImageLoader()\n    const abortController = new AbortController()\n\n    const execute = () => {\n      // add to cache to perform GC\n      // TODO: handle case when overwriting texture\n      const texture = new THREE.Texture()\n      this.textureCache.set(url, texture)\n\n      return loader.load(url, abortController.signal).then(image => {\n        texture.image = image\n        texture.needsUpdate = true\n\n        return texture\n      })\n    }\n\n    const task = {\n      abortController,\n      task: createLazyPromise(execute)\n    }\n\n    this.jobList.set(url, task)\n    return task\n  }\n\n  cancelAll() {\n    for (const task of this.jobList.values()) {\n      task.abortController?.abort()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientDimensions.html":{"url":"interfaces/ClientDimensions.html","title":"interface - ClientDimensions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClientDimensions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/exterior/ExteriorUtils.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fit\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fit:         ObjectFit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectFit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectFit } from '../render/RenderMethod'\n\nexport interface ClientDimensions {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\nexport function getMinZoom(\n  minWidth: number,\n  minHeight: number,\n  dimensions: ClientDimensions\n) {\n  switch (dimensions.fit) {\n    case 'contain':\n      return Math.max(\n        0,\n        Math.min(dimensions.width / minWidth, dimensions.height / minHeight)\n      )\n    case 'cover':\n    default:\n      return Math.max(\n        0,\n        Math.max(dimensions.width / minWidth, dimensions.height / minHeight)\n      )\n  }\n}\n\nexport function getMinZoomInterpolate(\n  minWidth: number,\n  minHeight: number,\n  ratio: number,\n  ranges: [ClientDimensions, ClientDimensions]\n) {\n  const [fromZoom, toZoom] = ranges.map(dimensions =>\n    getMinZoom(minWidth, minHeight, dimensions)\n  )\n\n  return fromZoom + (toZoom - fromZoom) * ratio\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseComponent.html":{"url":"components/CloseComponent.html","title":"component - CloseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/close/close.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close\n            \n\n\n\n            \n                styleUrls\n                ./close.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./close.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/close/close.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mobile\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/close/close.component.ts:9\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/close/close.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/close/close.component.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  templateUrl: './close.component.html',\n  styleUrls: ['./close.component.scss']\n})\nexport class CloseComponent {\n  @Input() mobile?: boolean;\n  @Output() clicked = new EventEmitter();\n\n  click(): void {\n    this.clicked.emit(true);\n  }\n\n  constructor() { }\n}\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./close.component.scss\n                \n                .close {\n  cursor: pointer;\n  background-color: rgb(var(--white-color));\n  width: 38px;\n  height: 38px;\n  transition: all var(--transition);\n  border: 0 none transparent;\n  border-radius: var(--border-radius);\n  box-shadow: 0 4px 9px 0 rgba(var(--black-color), 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  z-index: 1000;\n  &.close--mobile {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    .close__icon {\n      width: 16px;\n      height: 16px;\n    }\n  }\n  &:hover, &:active {\n    color: rgb(var(--primary-alt-color));\n    transform: scale(1.1);\n  }\n  &:active {\n    color: rgb(var(--primary-color));\n  }\n  .close__icon {\n    width: 20px;\n    height: 20px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlsButtonComponent.html":{"url":"components/ControlsButtonComponent.html","title":"component - ControlsButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlsButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/controls/controls-button/controls-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-controls-button\n            \n\n\n\n            \n                styleUrls\n                ./controls-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./controls-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                controlsComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                align\n                            \n                            \n                                icon\n                            \n                            \n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlsComponent: ControlsComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/controls/controls-button/controls-button.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlsComponent\n                                                  \n                                                        \n                                                                        ControlsComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        align\n                    \n                \n                \n                    \n                        Type :     \"left\" | \"right\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/controls-button/controls-button.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/controls-button/controls-button.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mobile\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/controls-button/controls-button.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/controls-button/controls-button.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/controls/controls-button/controls-button.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        controlsComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ControlsComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/controls/controls-button/controls-button.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ControlsComponent } from '../controls.component';\n\n@Component({\n  selector: 'app-controls-button',\n  templateUrl: './controls-button.component.html',\n  styleUrls: ['./controls-button.component.scss']\n})\nexport class ControlsButtonComponent {\n  @Input() icon?: string;\n  @Input() mobile?: boolean;\n  @Input() align?: 'left' | 'right';\n  @Output() clicked = new EventEmitter();\n\n  click(): void {\n    this.clicked.emit(true);\n  }\n\n  constructor(public controlsComponent: ControlsComponent) { }\n}\n    \n\n    \n        \n  @if (icon) {\n    \n  }\n  \n\n    \n\n    \n                \n                    ./controls-button.component.scss\n                \n                .controls-button {\n  cursor: pointer;\n  background-color: transparent;\n  height: 38px;\n  font-size: 13px;\n  font-weight: 600;\n  white-space: nowrap;\n  transition: all var(--transition);\n  padding: 8px 24px;\n  border: 0 none transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  &:hover {\n    color: rgb(var(--primary-alt-color));\n  }\n  &:active {\n    color: rgb(var(--primary-color));\n  }\n  &.controls-button--mobile {\n    background-color: rgba(var(--black-color), 0.25);\n    height: 35px;\n    color: rgb(var(--white-color));\n    border: 0 none transparent !important;\n    border-radius: 18px;\n    text-transform: none;\n    padding: 0 16px;\n    &:hover, &:active {\n      background-color: rgba(var(--black-color), 0.35);\n      color: rgb(var(--white-color));\n    }\n  }\n  .controls-button__icon {\n    height: 20px;\n  }\n}\n\n:host {\n  &:not(:first-of-type) {\n    .controls-button:not(.controls-button--mobile) {\n      border-left: 1px solid rgb(var(--border-color));\n    }\n  }\n  &:has(.controls-button--right) {\n    margin-left: auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (icon) {      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlsButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlsComponent.html":{"url":"components/ControlsComponent.html","title":"component - ControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/controls/controls.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-controls\n            \n\n\n\n            \n                styleUrls\n                ./controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hidden\n                            \n                            \n                                mobile\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/controls/controls.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/controls.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mobile\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/controls/controls.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-controls',\n  templateUrl: './controls.component.html',\n  styleUrls: ['./controls.component.scss']\n})\nexport class ControlsComponent {\n  @Input() hidden?: boolean;\n  @Input() mobile?: boolean;\n\n  constructor() { }\n}\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./controls.component.scss\n                \n                .controls {\n  background-color: rgb(var(--white-color));\n  overflow: hidden;\n  transition: all var(--transition);\n  transform: translateX(-50%);\n  border-radius: var(--border-radius);\n  box-shadow: 0 1px 3px rgba(var(--black-color), 0.3);\n  display: flex;\n  align-items: center;\n  position: absolute;\n  bottom: 22px;\n  left: 50%;\n  z-index: 1000;\n  &.controls--hidden {\n    display: none;\n  }\n  &.controls--mobile {\n    background-color: transparent;\n    transform: none;\n    padding: 0 18px;\n    border-radius: 0;\n    box-shadow: none;\n    justify-content: center;\n    gap: 8px;\n    right: 0;\n    bottom: 12px;\n    left: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorComponent.html":{"url":"components/CursorComponent.html","title":"component - CursorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CursorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cursor/cursor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cursor\n            \n\n\n\n            \n                styleUrls\n                ./cursor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hidden\n                            \n                            \n                                horizontal\n                            \n                            \n                                mobile\n                            \n                            \n                                move\n                            \n                            \n                                position\n                            \n                            \n                                responsive\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cursor/cursor.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        horizontal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mobile\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        move\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        position\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        responsive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor/cursor.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-cursor',\n  templateUrl: './cursor.component.html',\n  styleUrls: ['./cursor.component.scss']\n})\nexport class CursorComponent {\n  @Input() position?: string;\n  @Input() move?: boolean;\n  @Input() active?: boolean;\n  @Input() hidden?: boolean;\n  @Input() mobile?: boolean;\n  @Input() horizontal?: boolean;\n  @Input() responsive?: boolean;\n\n  constructor() { }\n}\n    \n\n    \n        \n  360°\n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./cursor.component.scss\n                \n                .cursor {\n  pointer-events: none;\n  transition: opacity var(--transition);\n  position: absolute;\n  z-index: 100;\n  &.cursor--mobile {\n    display: none;\n  }\n  &:not(.cursor--move) {\n    transform: translateX(-50%) scale(1) !important;\n    bottom: 120px;\n    left: 50%;\n    animation: cursorAnimation 0.25s linear;\n    @keyframes cursorAnimation {\n      0% {\n        transform: translateX(-50%) scale(0.5);\n      }\n      100% {\n        transform: translateX(-50%) scale(1);\n      }\n    }\n    &.cursor--horizontal {\n      bottom: var(--cursor-horizontal-bottom, 100px);\n    }\n  }\n  &.cursor--hidden {\n    opacity: 0;\n    display: none;\n  }\n  &.cursor--move {\n    top: 0;\n    left: 0;\n    animation: cursorAnimation2 0.25s linear;\n    @keyframes cursorAnimation2 {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n  }\n  &.cursor--horizontal {\n    .cursor__arrow {\n      &:nth-of-type(2), &:nth-of-type(4) {\n        display: none;\n      }\n    }\n  }\n  &.cursor--active {\n    .cursor__arrow {\n      &:nth-of-type(1) {\n        left: -46px;\n      }\n      &:nth-of-type(2) {\n        top: -46px;\n      }\n      &:nth-of-type(3) {\n        right: -46px;\n      }\n      &:nth-of-type(4) {\n        bottom: -46px;\n      }\n    }\n    .cursor__main {\n      width: 32px;\n      height: 32px;\n      font-size: 5px;\n      color: transparent;\n      margin: -16px;\n      box-shadow: 0 0 0 3px rgba(240, 248, 250, 0.4);\n    }\n  }\n  &.cursor--responsive {\n    @media (max-width: 999px) {\n      display: none;\n    }\n  }\n  .cursor__arrow {\n    color: rgb(var(--primary-alt-color));\n    transition: all var(--transition);\n    position: absolute;\n    &:nth-of-type(1) {\n      transform: translateY(-50%) rotate(180deg);\n      top: 50%;\n      left: -54px;\n    }\n    &:nth-of-type(2) {\n      transform: translateX(-50%) rotate(270deg);\n      top: -54px;\n      left: 50%;\n    }\n    &:nth-of-type(3) {\n      transform: translateY(-50%);\n      top: 50%;\n      right: -54px;\n    }\n    &:nth-of-type(4) {\n      transform: translateX(-50%) rotate(90deg);\n      bottom: -54px;\n      left: 50%;\n    }\n  }\n  .cursor__main {\n    background-color: rgb(var(--white-color));\n    width: 48px;\n    height: 48px;\n    font-size: 12px;\n    font-weight: 700;\n    color: rgb(var(--primary-color));\n    transition: all var(--transition);\n    padding-top: 2px;\n    border-radius: 50%;\n    margin: -24px;\n    box-shadow: 0 0 0 4px rgba(240, 248, 250, 0.4);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  360°        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CursorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExteriorMapPlane.html":{"url":"classes/ExteriorMapPlane.html","title":"class - ExteriorMapPlane","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExteriorMapPlane\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/exterior/ExteriorMapPlane.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        THREE.Group\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                            \n                                updateAngle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileLoader: TileLoader, tileSize: number, angle: number, data: ExteriorTilePanorama, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMapPlane.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tileSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angle\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ExteriorTilePanorama\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/exterior/ExteriorMapPlane.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAngle\n                        \n                    \n                \n            \n            \n                \nupdateAngle(angle: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/exterior/ExteriorMapPlane.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                angle\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { OrthographicTileMesh } from '../tile/TileMesh'\nimport { ExteriorTilePanorama } from '../types'\nimport { TileLoader } from '../tile/TileLoader'\n\nexport class ExteriorMapPlane extends THREE.Group {\n  constructor(\n    tileLoader: TileLoader,\n    tileSize: number,\n    angle: number,\n    protected data: ExteriorTilePanorama,\n    baseUrl: string\n  ) {\n    super()\n\n    const idBaseUrl = `${baseUrl}/exterior/${data.id}`\n    const minWidth = data.width / Math.pow(2, data.maxZoom)\n    const minHeight = data.height / Math.pow(2, data.maxZoom)\n\n    const xSize = minWidth / tileSize\n    const ySize = minHeight / tileSize\n\n    for (let x = 0; x [] = []\n\n    for (const angle of this.data.photos) {\n      for (const plane of this.children) {\n        if (plane instanceof OrthographicTileMesh) {\n          tasks.push(plane.preload(angle))\n        }\n      }\n    }\n\n    return Promise.all(tasks)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExteriorMethod.html":{"url":"classes/ExteriorMethod.html","title":"class - ExteriorMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExteriorMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/exterior/ExteriorMethod.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            RenderMethod\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                camera\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    Protected\n                                data\n                            \n                            \n                                    Protected\n                                deltaX\n                            \n                            \n                                    Protected\n                                frustum\n                            \n                            \n                                    Protected\n                                maxDelta\n                            \n                            \n                                    Protected\n                                minZoom\n                            \n                            \n                                    Protected\n                                objectFit\n                            \n                            \n                                    Protected\n                                planeMap\n                            \n                            \n                                    Protected\n                                scene\n                            \n                            \n                                    Protected\n                                transitionObjectFit\n                            \n                            \n                                    Protected\n                                transitionProgress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    \n                                endTransition\n                            \n                            \n                                onResize\n                            \n                            \n                                preload\n                            \n                            \n                                render\n                            \n                            \n                                    \n                                setObjectFit\n                            \n                            \n                                    \n                                setTransitionProgress\n                            \n                            \n                                setWheelZoomEnabled\n                            \n                            \n                                    \n                                startTransition\n                            \n                            \n                                zoomIn\n                            \n                            \n                                zoomOut\n                            \n                            \n                                zoomReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileLoader: TileLoader, renderer: THREE.Renderer, callbacks: RenderCallbacks, options: RenderOptions, data: ExteriorTilePanorama, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        THREE.Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        callbacks\n                                                  \n                                                        \n                                                                        RenderCallbacks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        RenderOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ExteriorTilePanorama\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.OrthographicCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExteriorControls\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExteriorTilePanorama\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        deltaX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        frustum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RenderFrustum\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        maxDelta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        minZoom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        objectFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ObjectFit\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        planeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExteriorMapPlane\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        transitionObjectFit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transition | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        transitionProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/exterior/ExteriorMethod.ts:53\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:147\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    endTransition()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:178\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(width: number, height: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:195\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:234\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(delta: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:238\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setObjectFit\n                        \n                    \n                \n            \n            \n                \n                        \n                    setObjectFit(fit: ObjectFit)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:163\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fit\n                                            \n                                                            ObjectFit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setTransitionProgress\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransitionProgress(ratio: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:191\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ratio\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setWheelZoomEnabled\n                        \n                    \n                \n            \n            \n                \nsetWheelZoomEnabled(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:251\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startTransition\n                        \n                    \n                \n            \n            \n                \n                        \n                    startTransition(source: TransitionViewport, target: TransitionViewport, preserveZoom: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:170\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            TransitionViewport\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            TransitionViewport\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preserveZoom\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomIn\n                        \n                    \n                \n            \n            \n                \nzoomIn()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:151\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomOut\n                        \n                    \n                \n            \n            \n                \nzoomOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:155\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomReset\n                        \n                    \n                \n            \n            \n                \nzoomReset()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:159\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { ExteriorControls } from './ExteriorControls'\nimport {\n  ObjectFit,\n  RenderCallbacks,\n  RenderMethod,\n  RenderOptions,\n  TransitionViewport\n} from '../render/RenderMethod'\nimport { ExteriorTilePanorama } from '../types'\nimport { clamp } from 'three/src/math/MathUtils'\nimport { TileLoader } from '../tile/TileLoader'\nimport { ExteriorMapPlane } from './ExteriorMapPlane'\nimport { RenderFrustum } from '../render/RenderFrustum'\nimport { getMinZoom, getMinZoomInterpolate } from './ExteriorUtils'\n\nconst PX_PER_ANGLE = 20\nconst STARTING_ANGLE = 230\n\ninterface Viewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\ninterface Transition {\n  source: Viewport\n  target: Viewport\n  preserveZoom: boolean\n}\n\nexport class ExteriorMethod extends RenderMethod {\n  protected scene: THREE.Scene\n  protected camera: THREE.OrthographicCamera\n  protected planeMap: ExteriorMapPlane\n\n  protected frustum: RenderFrustum\n  protected controls: ExteriorControls\n\n  protected data: ExteriorTilePanorama\n\n  // handle turntable rotation\n  protected deltaX = 0\n  protected maxDelta = 0\n\n  // handle scaling to fit screen\n  protected minZoom = 0\n\n  // object fit\n  protected objectFit: ObjectFit\n\n  // transition of object fit\n  protected transitionProgress = 0\n  protected transitionObjectFit: Transition | null = null\n\n  constructor(\n    tileLoader: TileLoader,\n    renderer: THREE.Renderer,\n    callbacks: RenderCallbacks,\n    options: RenderOptions,\n    data: ExteriorTilePanorama,\n    baseUrl: string\n  ) {\n    super(tileLoader, renderer, callbacks, options)\n\n    this.data = data\n    this.scene = new THREE.Scene()\n    this.scene.background = null\n\n    const { clientWidth, clientHeight } = renderer.domElement\n    this.camera = new THREE.OrthographicCamera(\n      clientWidth / -2,\n      clientWidth / 2,\n      clientHeight / 2,\n      clientHeight / -2,\n      1,\n      1000\n    )\n\n    this.deltaX =\n      Math.floor((STARTING_ANGLE / 360) * this.data.photos.length) *\n      PX_PER_ANGLE\n\n    this.maxDelta = PX_PER_ANGLE * this.data.photos.length\n\n    const minWidth = this.data.width / Math.pow(2, this.data.maxZoom)\n    const minHeight = this.data.height / Math.pow(2, this.data.maxZoom)\n    const tileSize = this.data.tileSize\n\n    this.objectFit = options.objectFit\n\n    this.minZoom = getMinZoom(minWidth, minHeight, {\n      width: clientWidth,\n      height: clientHeight,\n      fit: this.objectFit\n    })\n    this.camera.zoom = this.minZoom\n    this.camera.up.set(0, 0, 0)\n\n    // TODO: consider moving this logic to MapControls\n    // [-tileSize / 2, tileSize / 2] ... translation to the top-left edge of tile\n    // [minWidth / 2, -minHeight / 2] ... translation to the center of the whole image\n    this.camera.position.set(\n      -tileSize / 2 + minWidth / 2,\n      tileSize / 2 - minHeight / 2,\n      1\n    )\n    this.camera.updateProjectionMatrix()\n\n    this.planeMap = new ExteriorMapPlane(\n      tileLoader,\n      tileSize,\n      Math.floor(this.deltaX / PX_PER_ANGLE),\n      this.data,\n      baseUrl\n    )\n    this.scene.add(this.planeMap)\n\n    this.controls = new ExteriorControls(\n      this.camera,\n      this.renderer.domElement,\n      this.minZoom,\n      Math.pow(2, this.data.maxZoom),\n      minWidth,\n      minHeight,\n      delta => {\n        this.callbacks.onActive()\n\n        this.deltaX -= delta\n        if (this.deltaX ('.hotspots')\n    if (container) {\n      container.style.opacity = '0'\n    }\n  }\n\n  destroy() {\n    this.controls.dispose()\n  }\n\n  zoomIn() {\n    this.controls.clickZoomIn()\n  }\n\n  zoomOut() {\n    this.controls.clickZoomOut()\n  }\n\n  zoomReset() {\n    this.controls.zoomReset()\n  }\n\n  override setObjectFit(fit: ObjectFit) {\n    // only available if no transition is happening\n    if (this.transitionObjectFit == null) {\n      this.objectFit = fit\n    }\n  }\n\n  override startTransition(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ) {\n    this.transitionObjectFit = { source, target, preserveZoom }\n  }\n\n  override endTransition() {\n    const targetFit =\n      this.transitionProgress >= 1\n        ? this.transitionObjectFit?.target.fit\n        : this.transitionObjectFit?.source.fit\n\n    if (targetFit != null) {\n      this.objectFit = targetFit\n    }\n\n    this.transitionObjectFit = null\n  }\n\n  override setTransitionProgress(ratio: number) {\n    this.transitionProgress = THREE.MathUtils.clamp(ratio, 0, 1)\n  }\n\n  onResize(width: number, height: number) {\n    this.camera.left = width / -2\n    this.camera.right = width / 2\n    this.camera.top = height / 2\n    this.camera.bottom = height / -2\n    this.camera.updateProjectionMatrix()\n\n    const minWidth = this.data.width / Math.pow(2, this.data.maxZoom)\n    const minHeight = this.data.height / Math.pow(2, this.data.maxZoom)\n\n    if (this.transitionObjectFit != null) {\n      this.minZoom = getMinZoomInterpolate(\n        minWidth,\n        minHeight,\n        this.transitionProgress,\n        [this.transitionObjectFit.source, this.transitionObjectFit.target]\n      )\n    } else {\n      this.minZoom = getMinZoom(minWidth, minHeight, {\n        width,\n        height,\n        fit: this.objectFit\n      })\n    }\n\n    this.camera.zoom = Math.max(this.minZoom, this.camera.zoom)\n    this.camera.updateProjectionMatrix()\n\n    this.controls.updateMinZoom(this.minZoom)\n\n    if (\n      this.transitionObjectFit == null ||\n      this.transitionObjectFit.preserveZoom !== true\n    ) {\n      this.controls.zoomReset()\n    }\n    this.renderer.setSize(width, height)\n  }\n\n  preload() {\n    return this.planeMap.preload()\n  }\n\n  render(delta: number) {\n    const targetLevel = clamp(\n      Math.ceil(Math.log2(this.camera.zoom)),\n      0,\n      this.data.maxZoom\n    )\n\n    this.controls.update(delta)\n    this.frustum.update(targetLevel)\n    this.renderer.render(this.scene, this.camera)\n    this.planeMap.updateAngle(Math.floor(this.deltaX / PX_PER_ANGLE))\n  }\n\n  setWheelZoomEnabled(state: boolean) {\n    this.controls.setWheelEnabled(state)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExteriorTilePanorama.html":{"url":"interfaces/ExteriorTilePanorama.html","title":"interface - ExteriorTilePanorama","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExteriorTilePanorama\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TilePanorama\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            photos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photos:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TilePanorama {\n  id: string\n  width: number\n  height: number\n  tileSize: number\n  maxZoom: number\n}\n\nexport interface ExteriorTilePanorama extends TilePanorama {\n  photos: string[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface InteriorTilePanorama extends TilePanorama {}\n\nexport interface HandheldShape {\n  fileName: string\n  type: string | null\n}\n\nexport interface Manifest {\n  baseUrl: string\n  id: number\n  timestamp: number\n  exterior: ExteriorTilePanorama[]\n  interior: InteriorTilePanorama[]\n  handheld?: (HandheldShape | string)[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandheldShape.html":{"url":"interfaces/HandheldShape.html","title":"interface - HandheldShape","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandheldShape\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TilePanorama {\n  id: string\n  width: number\n  height: number\n  tileSize: number\n  maxZoom: number\n}\n\nexport interface ExteriorTilePanorama extends TilePanorama {\n  photos: string[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface InteriorTilePanorama extends TilePanorama {}\n\nexport interface HandheldShape {\n  fileName: string\n  type: string | null\n}\n\nexport interface Manifest {\n  baseUrl: string\n  id: number\n  timestamp: number\n  exterior: ExteriorTilePanorama[]\n  interior: InteriorTilePanorama[]\n  handheld?: (HandheldShape | string)[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomepagePage.html":{"url":"components/HomepagePage.html","title":"component - HomepagePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomepagePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/homepage/homepage.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-homepage\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./homepage.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buttons\n                            \n                            \n                                    \n                                    Optional\n                                canvasDiv\n                            \n                            \n                                    Public\n                                cursorActive\n                            \n                            \n                                    Public\n                                cursorMove\n                            \n                            \n                                    Public\n                                cursorPosition\n                            \n                            \n                                    Public\n                                customControls\n                            \n                            \n                                    Public\n                                defaultSize\n                            \n                            \n                                    Public\n                                elem\n                            \n                            \n                                    Public\n                                hasInterior\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                isFullScreen\n                            \n                            \n                                    Public\n                                lang\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                mobile\n                            \n                            \n                                    Public\n                                preload\n                            \n                            \n                                    Public\n                                preloadSize\n                            \n                            \n                                    Public\n                                props\n                            \n                            \n                                    Public\n                                renderer360\n                            \n                            \n                                    Public\n                                responsive\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                webType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canvasMouseDown\n                            \n                            \n                                canvasMouseMove\n                            \n                            \n                                canvasMouseOut\n                            \n                            \n                                canvasMouseUp\n                            \n                            \n                                changeSize\n                            \n                            \n                                changeType\n                            \n                            \n                                closeFullscreen\n                            \n                            \n                                hideMessage\n                            \n                            \n                                initCanvas\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                            \n                                openFullscreen\n                            \n                            \n                                zoomIn\n                            \n                            \n                                zoomOut\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/homepage/homepage.page.ts:140\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ncontextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasMouseDown\n                        \n                    \n                \n            \n            \n                \ncanvasMouseDown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasMouseMove\n                        \n                    \n                \n            \n            \n                \ncanvasMouseMove(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasMouseOut\n                        \n                    \n                \n            \n            \n                \ncanvasMouseOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canvasMouseUp\n                        \n                    \n                \n            \n            \n                \ncanvasMouseUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSize\n                        \n                    \n                \n            \n            \n                \nchangeSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeType\n                        \n                    \n                \n            \n            \n                \nchangeType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeFullscreen\n                        \n                    \n                \n            \n            \n                \ncloseFullscreen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMessage\n                        \n                    \n                \n            \n            \n                \nhideMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCanvas\n                        \n                    \n                \n            \n            \n                \ninitCanvas()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:176\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openFullscreen\n                        \n                    \n                \n            \n            \n                \nopenFullscreen()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomIn\n                        \n                    \n                \n            \n            \n                \nzoomIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomOut\n                        \n                    \n                \n            \n            \n                \nzoomOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/homepage/homepage.page.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        buttons\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        canvasDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvasDiv')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursorActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursorMove\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursorPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'translateX(0px) translateY(0px)'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('custom-controls') === 'true' ? true : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        defaultSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('mobile') === 'contain' ? 'contain' : 'cover'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        elem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasInterior\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('id') || ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isFullScreen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('fullscreen') === 'true' ? true : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('lang') || 'cs'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('mobile') === 'true' ? true : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        preload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('preload') === 'true' ? true : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        preloadSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : window.innerWidth / 3\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        props\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    'url': 'https://cdn-360-dev-driverama.azureedge.net/public/' + this.id,\n    'type': this.route.snapshot.queryParamMap.get('type') ? this.route.snapshot.queryParamMap.get('type') : 'exterior'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer360\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        responsive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('responsive') === 'true' ? true : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('mobile') === 'contain' ? 'contain' : 'cover'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        webType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.route.snapshot.queryParamMap.get('web-type') ?? 'default'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/homepage/homepage.page.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Renderer2, ViewChild, HostListener, ElementRef, OnInit, AfterViewInit, inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { createManifestRenderer, fetchManifest } from '../../../driverama-360-renderer';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.page.html'\n})\n\nexport class HomepagePage implements OnInit, AfterViewInit {\n  private _doc = inject(DOCUMENT);\n  @ViewChild('canvasDiv') canvasDiv?: ElementRef;\n  public id: string = this.route.snapshot.queryParamMap.get('id') || ''; //900343408_1647603373\n  public lang: string = this.route.snapshot.queryParamMap.get('lang') || 'cs';\n  public mobile: boolean = this.route.snapshot.queryParamMap.get('mobile') === 'true' ? true : false;\n  public size: string = this.route.snapshot.queryParamMap.get('mobile') === 'contain' ? 'contain' : 'cover';\n  public defaultSize: string = this.route.snapshot.queryParamMap.get('mobile') === 'contain' ? 'contain' : 'cover';\n  public customControls: boolean = this.route.snapshot.queryParamMap.get('custom-controls') === 'true' ? true : false;\n  public webType: string = this.route.snapshot.queryParamMap.get('web-type') ?? 'default'; // mototechna\n  public props: any = {\n    'url': 'https://cdn-360-dev-driverama.azureedge.net/public/' + this.id,\n    'type': this.route.snapshot.queryParamMap.get('type') ? this.route.snapshot.queryParamMap.get('type') : 'exterior'\n  };\n  public renderer360: any;\n  public loading: boolean = true;\n  public cursorPosition: any = 'translateX(0px) translateY(0px)';\n  public cursorMove: boolean = false;\n  public cursorActive: boolean = false;\n  public message: boolean = true;\n  public elem: any;\n  public isFullScreen: boolean = this.route.snapshot.queryParamMap.get('fullscreen') === 'true' ? true : false;\n  public responsive: boolean = this.route.snapshot.queryParamMap.get('responsive') === 'true' ? true : false;\n  public preload: boolean = this.route.snapshot.queryParamMap.get('preload') === 'true' ? true : false;\n  public preloadSize: number = window.innerWidth / 3;\n  public hasInterior: boolean = false;\n  public buttons: boolean = true;\n\n  @HostListener('contextmenu', ['$event']) onRightClick(event: MouseEvent): void {\n    event.preventDefault();\n  }\n\n  @HostListener('window:resize', ['$event']) onResize(): void {\n    this.changeSize();\n  }\n\n  changeType(type: string): void {\n    this.props.type = type;\n    window.parent.postMessage({ message: 'threesixtyType', value: type }, '*');\n    this.initCanvas();\n  }\n\n  zoomIn(): void {\n    this.renderer360.onZoomIn();\n    window.parent.postMessage({ message: 'threesixtyZoomIn', value: true }, '*');\n  }\n\n  zoomOut(): void {\n    this.renderer360.onZoomOut();\n    window.parent.postMessage({ message: 'threesixtyZoomOut', value: true }, '*');\n  }\n\n  canvasMouseMove(event: MouseEvent): void {\n    this.cursorPosition = 'translateX(' + event.clientX + 'px) translateY(' + event.clientY + 'px)';\n    this.cursorMove = true;\n  }\n\n  canvasMouseOut(): void {\n    this.cursorPosition = 'translateX(0px) translateY(0px)';\n    this.cursorMove = false;\n  }\n\n  canvasMouseDown(): void {\n    this.cursorActive = true;\n  }\n\n  canvasMouseUp(): void {\n    this.cursorActive = false;\n  }\n\n  initCanvas(): void {\n    if (!this.preload) {\n      this.renderer.setProperty(this.canvasDiv?.nativeElement, 'innerHTML', '');\n      this.renderer360 = createManifestRenderer({\n        container: this.canvasDiv?.nativeElement,\n        preload: true\n      });\n      this.loading = true;\n      const abortController = new AbortController();\n      fetchManifest(this.props.url, { signal: abortController.signal }).then(data => {\n        this.hasInterior = data.interior.length > 0 ? true : false;\n        window.parent.postMessage({ message: 'threesixtyLoaded', value: true }, '*');\n        window.parent.postMessage({ message: 'threesixtyHasInterior', value: this.hasInterior }, '*');\n        return this.renderer360.init(\n          this.props.type,\n          data,\n          {\n            onActive: () => { },\n            onZoomChange: (data: any) => { }\n          },\n          { objectFit: this.size }\n        )\n      }).then(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  changeSize(): void {\n    const ratio: number = 100 / (window.innerWidth / window.innerHeight);\n    let newSize: string;\n    if (ratio  84) {\n      newSize = 'contain';\n      this.preloadSize = window.innerWidth / 3;\n    } else {\n      newSize = this.defaultSize;\n      this.preloadSize = window.innerWidth / 3 > window.innerHeight / 2 ? window.innerWidth / 3 : window.innerHeight / 2;\n    }\n    if (newSize != this.size) {\n      this.size = newSize;\n      this.initCanvas();\n    }\n  }\n\n  hideMessage(): void {\n    this.message = false;\n    window.parent.postMessage({ message: 'threesixtyMove', value: true }, '*');\n  }\n\n  openFullscreen(): void {\n    window.parent.postMessage({ message: 'threesixtyFullscreen', value: true }, '*');\n  }\n\n  closeFullscreen(): void {\n    window.parent.postMessage({ message: 'threesixtyFullscreen', value: false }, '*');\n  }\n\n  constructor(private renderer: Renderer2, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.elem = document.documentElement;\n    if (this.isFullScreen) this.renderer.addClass(document.body, 'dark');\n    this.renderer.addClass(this._doc.documentElement, 'web-type--' + this.webType);\n\n    window.addEventListener('message', (event: any) => {\n      if (event.data.message) {\n        if (event.data.message == 'buttons') {\n          if (event.data.value == 'hide') {\n            this.buttons = false;\n          } else {\n            this.buttons = true;\n          }\n        } else if (event.data.message == 'changeType') {\n          this.changeType(event.data.value);\n        } else if (event.data.message == 'zoom') {\n          if (event.data.value == 'in') {\n            this.zoomIn();\n          } else {\n            this.zoomOut();\n          }\n        } else if (event.data.message == 'fullscreen') {\n          if (event.data.value == true) {\n            this.openFullscreen();\n          } else {\n            this.closeFullscreen();\n          }\n        }\n      }\n    }, false);\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.changeSize();\n      this.initCanvas();\n    });\n  }\n}\n    \n\n    \n        \n\n\n  \n\n  \n    Obróć samochód\n    Otočiť auto\n    Otočit auto\n  \n\n  \n\n  \n  \n\n  \n    {{ lang == 'pl' ? 'Zewnętrzny' : 'Exteriér' }}\n    {{ lang == 'pl' ? 'Wnętrze' : 'Interiér' }}\n    \n    \n    \n      {{ lang == 'pl' ? 'Pełny ekran' : 'Celá obrazovka' }}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Obróć samochód    Otočiť auto    Otočit auto              {{ lang == \\'pl\\' ? \\'Zewnętrzny\\' : \\'Exteriér\\' }}    {{ lang == \\'pl\\' ? \\'Wnętrze\\' : \\'Interiér\\' }}                  {{ lang == \\'pl\\' ? \\'Pełny ekran\\' : \\'Celá obrazovka\\' }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomepagePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoMessageComponent.html":{"url":"components/InfoMessageComponent.html","title":"component - InfoMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/info-message/info-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-message\n            \n\n\n\n            \n                styleUrls\n                ./info-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/info-message/info-message.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/info-message/info-message.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-message',\n  templateUrl: './info-message.component.html',\n  styleUrls: ['./info-message.component.scss']\n})\nexport class InfoMessageComponent {\n  @Input() hidden?: boolean;\n\n  constructor() { }\n}\n    \n\n    \n        \n  \n    \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-message.component.scss\n                \n                .info-message {\n  pointer-events: none;\n  transform: translate(-50%, -50%);\n  transition: opacity var(--transition);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 1000;\n  &.info-message--hidden {\n    opacity: 0;\n  }\n  .info-message__content {\n    color: rgb(var(--white-color));\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    .info-message__content__pointer {\n      width: 285px;\n      height: 231px;\n    }\n    .info-message__content__pointer-cursor {\n      width: 33px;\n      height: 40px;\n      animation: messageContentAnimation 5s ease;\n      margin-left: -15px;\n      position: absolute;\n      top: 90px;\n      left: 50%;\n      @keyframes messageContentAnimation {\n        0% {\n          opacity: 0;\n          transform: scale(0.3);\n        }\n        25% {\n          opacity: 1;\n          transform: scale(1.05);\n        }\n        35% {\n          transform: scale(0.9);\n        }\n        50% {\n          transform: scale(1) translateX(0%);\n        }\n        57.5% {\n          transform: translateX(-25%) rotate(-5deg);\n        }\n        65% {\n          transform: translateX(20%) rotate(3deg);\n        }\n        72.5% {\n          transform: translateX(-15%) rotate(-3deg);\n        }\n        80% {\n          transform: translateX(10%) rotate(2deg);\n        }\n        82.5% {\n          transform: translateX(-5%) rotate(-1deg);\n        }\n        100% {\n          transform: translateX(0%);\n        }\n      }\n    }\n  }\n  .info-message__text {\n    position: absolute;\n    top: 136px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InteriorMapCube.html":{"url":"classes/InteriorMapCube.html","title":"class - InteriorMapCube","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InteriorMapCube\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/interior/InteriorMapCube.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        THREE.Group\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                preload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileLoader: TileLoader, tileSize: number, data: InteriorTilePanorama, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMapCube.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tileSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InteriorTilePanorama\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/interior/InteriorMapCube.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { PerspectiveTileMesh } from '../tile/TileMesh'\nimport { InteriorTilePanorama } from '../types'\nimport { TileLoader } from '../tile/TileLoader'\n\nexport class InteriorMapCube extends THREE.Group {\n  constructor(\n    tileLoader: TileLoader,\n    tileSize: number,\n    data: InteriorTilePanorama,\n    baseUrl: string\n  ) {\n    super()\n\n    const idBaseUrl = `${baseUrl}/interior/${data.id}`\n    const pz = new PerspectiveTileMesh(tileLoader, tileSize, idBaseUrl, 'pz')\n    pz.position.set(0, 0, -1).multiplyScalar(0.5 * tileSize)\n    pz.rotation.set(0, 0, 0)\n    pz.scale.set(1, 1, 1)\n\n    this.add(pz)\n\n    const nz = new PerspectiveTileMesh(tileLoader, tileSize, idBaseUrl, 'nz')\n    nz.position.set(0, 0, 1).multiplyScalar(0.5 * tileSize)\n    nz.rotation.set(0, 0, 0)\n    nz.scale.set(-1, 1, -1)\n    this.add(nz)\n\n    const py = new PerspectiveTileMesh(tileLoader, tileSize, idBaseUrl, 'py')\n    py.position.set(0, 1, 0).multiplyScalar(0.5 * tileSize)\n    py.rotation.set(Math.PI / 2, 0, 0)\n    py.scale.set(1, 1, 1)\n    this.add(py)\n\n    const ny = new PerspectiveTileMesh(tileLoader, tileSize, idBaseUrl, 'ny')\n    ny.position.set(0, -1, 0).multiplyScalar(0.5 * tileSize)\n    ny.rotation.set(Math.PI / 2, 0, 0)\n    ny.scale.set(1, -1, -1)\n    this.add(ny)\n\n    const px = new PerspectiveTileMesh(tileLoader, tileSize, idBaseUrl, 'px')\n    px.position.set(1, 0, 0).multiplyScalar(0.5 * tileSize)\n    px.rotation.set(0, Math.PI / 2, 0)\n    px.scale.set(-1, 1, -1)\n    this.add(px)\n\n    const nx = new PerspectiveTileMesh(tileLoader, tileSize, idBaseUrl, 'nx')\n    nx.position.set(-1, 0, 0).multiplyScalar(0.5 * tileSize)\n    nx.rotation.set(0, Math.PI / 2, 0)\n    nx.scale.set(1, 1, 1)\n    this.add(nx)\n  }\n\n  preload() {\n    const tasks: Promise[] = []\n    for (const plane of this.children) {\n      if (plane instanceof PerspectiveTileMesh) {\n        tasks.push(plane.preload())\n      }\n    }\n    return Promise.all(tasks)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InteriorMethod.html":{"url":"classes/InteriorMethod.html","title":"class - InteriorMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InteriorMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/interior/InteriorMethod.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            RenderMethod\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                camera\n                            \n                            \n                                    Protected\n                                computeBottomRight\n                            \n                            \n                                    Protected\n                                computeCamera\n                            \n                            \n                                    Protected\n                                computeTopLeft\n                            \n                            \n                                    Protected\n                                controls\n                            \n                            \n                                    Protected\n                                cubeMap\n                            \n                            \n                                    Protected\n                                data\n                            \n                            \n                                    Protected\n                                frustum\n                            \n                            \n                                    Protected\n                                points\n                            \n                            \n                                    Protected\n                                rendererSize\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getLevelFov\n                            \n                            \n                                onResize\n                            \n                            \n                                preload\n                            \n                            \n                                render\n                            \n                            \n                                setWheelZoomEnabled\n                            \n                            \n                                updateMinZoom\n                            \n                            \n                                zoomIn\n                            \n                            \n                                zoomOut\n                            \n                            \n                                zoomReset\n                            \n                            \n                                    Optional\n                                endTransition\n                            \n                            \n                                    Optional\n                                setObjectFit\n                            \n                            \n                                    Optional\n                                setTransitionProgress\n                            \n                            \n                                    Optional\n                                startTransition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileLoader: TileLoader, renderer: THREE.Renderer, callbacks: RenderCallbacks, options: RenderOptions, data: InteriorTilePanorama, baseUrl: string)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        THREE.Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        callbacks\n                                                  \n                                                        \n                                                                        RenderCallbacks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        RenderOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InteriorTilePanorama\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        computeBottomRight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Vector3\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        computeCamera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        computeTopLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Vector3\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        controls\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteriorControls\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        cubeMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteriorMapCube\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteriorTilePanorama\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        frustum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RenderFrustum\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        rendererSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:111\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLevelFov\n                        \n                    \n                \n            \n            \n                \ngetLevelFov(fov: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fov\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(width: number, height: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:164\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:115\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(delta: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:119\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setWheelZoomEnabled\n                        \n                    \n                \n            \n            \n                \nsetWheelZoomEnabled(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:200\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMinZoom\n                        \n                    \n                \n            \n            \n                \nupdateMinZoom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/interior/InteriorMethod.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomIn\n                        \n                    \n                \n            \n            \n                \nzoomIn()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:188\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomOut\n                        \n                    \n                \n            \n            \n                \nzoomOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:192\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zoomReset\n                        \n                    \n                \n            \n            \n                \nzoomReset()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:196\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endTransition\n                        \n                    \n                \n            \n            \n                \nendTransition()\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:44\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setObjectFit\n                        \n                    \n                \n            \n            \n                \nsetObjectFit(objectFit: ObjectFit)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:47\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectFit\n                                            \n                                                            ObjectFit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setTransitionProgress\n                        \n                    \n                \n            \n            \n                \nsetTransitionProgress(progress: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:45\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                progress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startTransition\n                        \n                    \n                \n            \n            \n                \nstartTransition(source: TransitionViewport, target: TransitionViewport, preserveZoom: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         RenderMethod\n\n                        \n                    \n                    \n                        \n                                Defined in         RenderMethod:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            TransitionViewport\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            TransitionViewport\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preserveZoom\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\n\nimport { InteriorControls } from './InteriorControls'\nimport { InteriorMapCube } from './InteriorMapCube'\nimport {\n  RenderCallbacks,\n  RenderMethod,\n  RenderOptions\n} from '../render/RenderMethod'\nimport { InteriorTilePanorama } from '../types'\nimport { TileLoader } from '../tile/TileLoader'\nimport { RenderFrustum } from '../render/RenderFrustum'\n\nconst WORLD_TILE_SIZE = 256\n\nexport class InteriorMethod extends RenderMethod {\n  protected scene: THREE.Scene\n  protected camera: THREE.PerspectiveCamera\n\n  protected cubeMap: InteriorMapCube\n\n  protected frustum: RenderFrustum\n  protected controls: InteriorControls\n\n  protected data: InteriorTilePanorama\n  protected points: {\n    worldCoords: THREE.Vector3\n    screenCoords: THREE.Vector3\n    element: HTMLElement\n  }[] = []\n\n  protected computeCamera: THREE.PerspectiveCamera\n  protected computeTopLeft: THREE.Vector3\n  protected computeBottomRight: THREE.Vector3\n\n  protected rendererSize: { width: number; height: number }\n\n  constructor(\n    tileLoader: TileLoader,\n    renderer: THREE.Renderer,\n    callbacks: RenderCallbacks,\n    options: RenderOptions,\n    data: InteriorTilePanorama,\n    baseUrl: string\n  ) {\n    super(tileLoader, renderer, callbacks, options)\n    this.rendererSize = {\n      width: this.renderer.domElement.clientWidth,\n      height: this.renderer.domElement.clientHeight\n    }\n    this.data = data\n\n    this.scene = new THREE.Scene()\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      this.rendererSize.width / this.rendererSize.height,\n      1,\n      WORLD_TILE_SIZE\n    )\n\n    this.computeTopLeft = new THREE.Vector3()\n    this.computeBottomRight = new THREE.Vector3()\n\n    this.computeCamera = new THREE.PerspectiveCamera()\n    this.computeCamera.copy(this.camera)\n\n    this.camera.position.setFromSphericalCoords(\n      1,\n      THREE.MathUtils.degToRad(75),\n      THREE.MathUtils.degToRad(145)\n    )\n\n    this.cubeMap = new InteriorMapCube(\n      tileLoader,\n      WORLD_TILE_SIZE,\n      this.data,\n      baseUrl\n    )\n    this.scene.add(this.cubeMap)\n\n    this.controls = new InteriorControls(\n      this.camera,\n      this.renderer.domElement,\n      this.callbacks.onZoomChange\n    )\n\n    this.updateMinZoom()\n    this.frustum = new RenderFrustum(this.scene, this.camera)\n\n    const container = document.querySelector('.hotspots')\n    if (container) {\n      container.style.opacity = '1'\n      for (const child of container.children) {\n        if (child instanceof HTMLElement) {\n          const coords = [child.dataset['x'], child.dataset['y'], child.dataset['z']]\n            .filter((x): x is string => x != null)\n            .map(i => Number.parseFloat(i))\n\n          if (coords.length = 1; fov -= 0.25) {\n      if (this.getLevelFov(fov) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InteriorTilePanorama.html":{"url":"interfaces/InteriorTilePanorama.html","title":"interface - InteriorTilePanorama","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InteriorTilePanorama\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/types.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TilePanorama\n            \n\n\n\n\n    \n\n\n    \n        interface TilePanorama {\n  id: string\n  width: number\n  height: number\n  tileSize: number\n  maxZoom: number\n}\n\nexport interface ExteriorTilePanorama extends TilePanorama {\n  photos: string[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface InteriorTilePanorama extends TilePanorama {}\n\nexport interface HandheldShape {\n  fileName: string\n  type: string | null\n}\n\nexport interface Manifest {\n  baseUrl: string\n  id: number\n  timestamp: number\n  exterior: ExteriorTilePanorama[]\n  interior: InteriorTilePanorama[]\n  handheld?: (HandheldShape | string)[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LazyPromise.html":{"url":"interfaces/LazyPromise.html","title":"interface - LazyPromise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LazyPromise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileLoader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            execute\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        execute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        execute:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileTextureCache } from './TileTextureCache'\n\nexport class TileAbortError extends Error {\n  constructor() {\n    super('Aborted tile loading')\n  }\n}\n\nfunction bindOnce(image: T) {\n  type Name = Parameters[0]\n  type Callback = Parameters[1]\n  const callbacks: [Name, Callback][] = []\n\n  function cancel() {\n    for (const [name, callback] of callbacks) {\n      image.removeEventListener(name, callback)\n    }\n  }\n\n  return {\n    bind(\n      ...[name, func, options]: Parameters\n    ) {\n      callbacks.push([name, func])\n\n      const callback: typeof func = (...args) => {\n        cancel()\n        if (typeof func === 'function') {\n          func(...args)\n        }\n      }\n\n      image.addEventListener(name, callback, options)\n    },\n    cancel\n  }\n}\n\nexport type TileLoaderCancel = () => void\n\n// Images are considered low priority by Chrome etc.\n// https://web.dev/priority-hints/\n// Thus, to load images in high priority, we need to load them via fetch\nclass CancellableImageLoader {\n  load(url: string, signal?: AbortSignal): Promise {\n    const image = document.createElement('img')\n    const callbacks = bindOnce(image)\n    image.crossOrigin = 'anonymous'\n\n    if (signal) {\n      if (signal.aborted) return Promise.reject(new TileAbortError())\n      signal.addEventListener('abort', () => {\n        callbacks.cancel()\n        image.src = ''\n      })\n    }\n\n    // TODO: download and decode images in a web worker to reduce loading times\n    // This will require us to upgrade to Webpack 5 and might destroy\n    // compatibility with Aures\n    return fetch(url, { signal })\n      .then(i => {\n        if (signal?.aborted) throw new TileAbortError()\n        return i.blob()\n      })\n      .then(blob => {\n        if (signal?.aborted) throw new TileAbortError()\n\n        const blobUrl = URL.createObjectURL(blob)\n        image.src = blobUrl\n        return new Promise((resolve, reject) => {\n          callbacks.bind('load', () => resolve(image), false)\n          callbacks.bind('error', () => reject(new TileAbortError()), false)\n        }).finally(() => URL.revokeObjectURL(blobUrl))\n      })\n      .catch(err => {\n        if (\n          err instanceof DOMException &&\n          err.code === DOMException.ABORT_ERR\n        ) {\n          throw new TileAbortError()\n        }\n        throw err\n      })\n  }\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\nfunction getTilePositionString(position: TilePosition) {\n  return [position.level, position.x, position.y].join('_')\n}\n\nenum State {\n  Error,\n  InProgress,\n  Success,\n  Idle\n}\n\ninterface LazyPromise {\n  state: State\n  execute: () => void\n  result: Promise\n}\n\nfunction createLazyPromise(innerFn: () => Promise): LazyPromise {\n  let resolver: ((value: T) => void) | null = null\n  let rejecter: ((reason?: unknown) => void) | null = null\n\n  const result = new Promise((resolve, reject) => {\n    resolver = resolve\n    rejecter = reject\n  })\n\n  const lazyPromise = {\n    state: State.Idle,\n    execute: () => {\n      lazyPromise.state = State.InProgress\n      innerFn()\n        .then(value => {\n          lazyPromise.state = State.Success\n          if (!resolver) throw new Error('Resolver not found')\n          resolver?.(value)\n        })\n        .catch(err => {\n          lazyPromise.state = State.Error\n          rejecter?.(err)\n        })\n    },\n    result\n  }\n\n  return lazyPromise\n}\n\nexport interface TileJob {\n  abortController: AbortController | undefined\n  task: LazyPromise\n}\n\nexport class TileLoader {\n  protected textureCache: TileTextureCache\n  protected jobList = new Map()\n\n  constructor(cache: TileTextureCache) {\n    this.textureCache = cache\n  }\n\n  // To prevent frame drops, execute only a fraction of jobs at 1 frame\n  work() {\n    const idleTasks = [...this.jobList.values()]\n      .filter(\n        i => i.task.state === State.Idle && !i.abortController?.signal.aborted\n      )\n      .slice(0, 3)\n\n    return Promise.all(idleTasks.map(({ task }) => task.execute()))\n  }\n\n  load(baseUrl: string, variant: string, position: TilePosition): TileJob {\n    const fileName = `${getTilePositionString(position)}.jpg`\n    const url = [baseUrl, variant, fileName].join('/')\n\n    const cachedTask = this.jobList.get(url)\n    if (\n      cachedTask != null &&\n      cachedTask.task.state !== State.Error &&\n      !(\n        cachedTask.abortController?.signal.aborted &&\n        cachedTask.task.state !== State.Success\n      )\n    ) {\n      return cachedTask\n    }\n\n    const loader = new CancellableImageLoader()\n    const abortController = new AbortController()\n\n    const execute = () => {\n      // add to cache to perform GC\n      // TODO: handle case when overwriting texture\n      const texture = new THREE.Texture()\n      this.textureCache.set(url, texture)\n\n      return loader.load(url, abortController.signal).then(image => {\n        texture.image = image\n        texture.needsUpdate = true\n\n        return texture\n      })\n    }\n\n    const task = {\n      abortController,\n      task: createLazyPromise(execute)\n    }\n\n    this.jobList.set(url, task)\n    return task\n  }\n\n  cancelAll() {\n    for (const task of this.jobList.values()) {\n      task.abortController?.abort()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n\n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                light\n                            \n                            \n                                mobile\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mobile\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {\n  @Input() light?: boolean;\n  @Input() mobile?: boolean;\n\n  constructor() { }\n}\n    \n\n    \n        \n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader {\n  width: 80px;\n  height: 80px;\n  transform: translate(-50%, -50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  &.loader--mobile {\n    top: calc(50% - 40px);\n    left: 50%;\n  }\n  &.loader--light {\n    &::after {\n      border: 6px solid rgb(var(--white-color));\n      border-color: rgb(var(--white-color)) transparent transparent transparent;\n    }\n  }\n  &::before {\n    content: \"\";\n    background-color: rgb(var(--black-color));\n    width: 80px;\n    height: 80px;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    opacity: 0.1;\n    box-shadow: 0 0 90px 180px rgb(var(--black-color));\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  &::after {\n    content: \"\";\n    width: 64px;\n    height: 64px;\n    animation: loaderAnimation 1.2s linear infinite;\n    border: 6px solid rgb(var(--white-color));\n    border-color: rgb(var(--white-color)) transparent transparent transparent;\n    border-radius: 50%;\n    display: block;\n    @keyframes loaderAnimation {\n      0% {\n        transform: rotate(0deg);\n      }\n      100% {\n        transform: rotate(360deg);\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainComponent.html":{"url":"components/MainComponent.html","title":"component - MainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main/main.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main\n            \n\n\n\n            \n                styleUrls\n                ./main.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                touch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                touched\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main/main.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        touched\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/main/main.component.ts:9\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        touch\n                        \n                    \n                \n            \n            \n                \ntouch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main/main.component.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent {\n  @Output() touched = new EventEmitter();\n\n  touch(): void {\n    this.touched.emit(true);\n  }\n\n  constructor() { }\n}\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./main.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Manifest.html":{"url":"interfaces/Manifest.html","title":"interface - Manifest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Manifest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                        \n                                            exterior\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            handheld\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interior\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exterior\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exterior:     ExteriorTilePanorama[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ExteriorTilePanorama[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handheld\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        handheld:         (HandheldShape | string)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         (HandheldShape | string)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interior\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interior:     InteriorTilePanorama[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InteriorTilePanorama[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TilePanorama {\n  id: string\n  width: number\n  height: number\n  tileSize: number\n  maxZoom: number\n}\n\nexport interface ExteriorTilePanorama extends TilePanorama {\n  photos: string[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface InteriorTilePanorama extends TilePanorama {}\n\nexport interface HandheldShape {\n  fileName: string\n  type: string | null\n}\n\nexport interface Manifest {\n  baseUrl: string\n  id: number\n  timestamp: number\n  exterior: ExteriorTilePanorama[]\n  interior: InteriorTilePanorama[]\n  handheld?: (HandheldShape | string)[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ManifestRenderer.html":{"url":"interfaces/ManifestRenderer.html","title":"interface - ManifestRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ManifestRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/renderer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dispose\n                                        \n                                \n                                \n                                        \n                                            endTransition\n                                        \n                                \n                                \n                                        \n                                            init\n                                        \n                                \n                                \n                                        \n                                            onZoomIn\n                                        \n                                \n                                \n                                        \n                                            onZoomOut\n                                        \n                                \n                                \n                                        \n                                            onZoomReset\n                                        \n                                \n                                \n                                        \n                                            setObjectFit\n                                        \n                                \n                                \n                                        \n                                            setTransitionProgress\n                                        \n                                \n                                \n                                        \n                                            setWheelZoomEnabled\n                                        \n                                \n                                \n                                        \n                                            startTransition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dispose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dispose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTransition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTransition:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        init\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        init:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onZoomIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onZoomIn:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onZoomOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onZoomOut:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onZoomReset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onZoomReset:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setObjectFit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setObjectFit:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setTransitionProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setTransitionProgress:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setWheelZoomEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setWheelZoomEnabled:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTransition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTransition:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { WebGLRenderer, Clock } from './three'\nimport {\n  ObjectFit,\n  RenderCallbacks,\n  RenderMethod,\n  RenderOptions,\n  TransitionViewport\n} from './render/RenderMethod'\nimport { ExteriorMethod } from './exterior/ExteriorMethod'\nimport { InteriorMethod } from './interior/InteriorMethod'\nimport { Manifest } from './types'\nimport { TileTextureCache } from './tile/TileTextureCache'\nimport { TileLoader } from './tile/TileLoader'\n\nfunction getParentSize(element: HTMLElement | null): [number, number] {\n  return [element?.clientWidth ?? 0, element?.clientHeight ?? 0]\n}\n\nexport interface ManifestRenderer {\n  init: (\n    type: 'exterior' | 'interior',\n    data: Manifest,\n    callbacks: RenderCallbacks,\n    options: RenderOptions\n  ) => void\n  onZoomIn: () => void\n  onZoomOut: () => void\n  onZoomReset: () => void\n\n  startTransition: (\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ) => void\n  endTransition: () => void\n  setTransitionProgress: (progress: number) => void\n  setObjectFit: (fit: ObjectFit) => void\n  setWheelZoomEnabled: (state: boolean) => void\n\n  dispose: () => void\n}\n\nexport async function fetchManifest(\n  url: string,\n  options?: { signal?: AbortSignal | null }\n): Promise {\n  const res = await fetch(`${url}/manifest.json`, { signal: options?.signal })\n\n  if (!res.ok) throw new Error(`Failed to fetch manifest (${res.status})`)\n  const data: Omit = await res.json()\n  return { ...data, baseUrl: url }\n}\n\nexport function createManifestRenderer(options: {\n  container: HTMLDivElement\n  preload?: boolean\n}): ManifestRenderer {\n  const renderer = new WebGLRenderer({ alpha: true })\n  const cache = new TileTextureCache()\n  const loader = new TileLoader(cache)\n  const clock = new Clock()\n\n  renderer.setPixelRatio(window.devicePixelRatio)\n  renderer.setSize(...getParentSize(options.container))\n  renderer.setClearColor(0xffffff, 0)\n\n  options.container.appendChild(renderer.domElement)\n\n  let method: RenderMethod | undefined = undefined\n\n  async function init(\n    type: 'exterior' | 'interior',\n    data: Manifest,\n    callbacks: RenderCallbacks,\n    options: RenderOptions\n  ) {\n    method?.destroy()\n\n    switch (type) {\n      case 'exterior': {\n        if (data.exterior.length === 0)\n          throw new Error('No exterior panorama found')\n        method = new ExteriorMethod(\n          loader,\n          renderer,\n          callbacks,\n          options,\n          data.exterior[0],\n          data.baseUrl\n        )\n        break\n      }\n      case 'interior': {\n        if (data.interior.length === 0)\n          throw new Error('No interior panorama found')\n\n        method = new InteriorMethod(\n          loader,\n          renderer,\n          callbacks,\n          options,\n          data.interior[0],\n          data.baseUrl\n        )\n        break\n      }\n      default: {\n        throw new Error('Invalid renderer method')\n      }\n    }\n\n    await method?.preload()\n    animate()\n  }\n\n  let lastAnimationFrame = 0\n\n  function animate() {\n    const [width, height] = getParentSize(options.container)\n\n    if (\n      renderer.domElement.clientWidth !== width ||\n      renderer.domElement.clientHeight !== height\n    ) {\n      method?.onResize(width, height)\n    }\n\n    lastAnimationFrame = requestAnimationFrame(animate)\n    const delta = clock.getDelta()\n    method?.render(delta)\n\n    // process queued image fetching tasks\n    loader.work()\n  }\n\n  function dispose() {\n    cancelAnimationFrame(lastAnimationFrame)\n    loader.cancelAll()\n    cache.destroy()\n    method?.destroy()\n    renderer?.dispose()\n    renderer.domElement.remove()\n  }\n\n  return {\n    init,\n    dispose,\n    onZoomOut() {\n      method?.zoomOut()\n    },\n    onZoomIn() {\n      method?.zoomIn()\n    },\n    onZoomReset() {\n      method?.zoomReset()\n    },\n    startTransition: (\n      source: TransitionViewport,\n      target: TransitionViewport,\n      preserveZoom: boolean\n    ) => {\n      method?.startTransition?.(source, target, preserveZoom)\n    },\n    endTransition: () => {\n      method?.endTransition?.()\n    },\n    setTransitionProgress: progress => {\n      method?.setTransitionProgress?.(progress)\n    },\n    setObjectFit: objectFit => {\n      method?.setObjectFit?.(objectFit)\n    },\n    setWheelZoomEnabled: state => {\n      method?.setWheelZoomEnabled?.(state)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrthographicTileMesh.html":{"url":"classes/OrthographicTileMesh.html","title":"class - OrthographicTileMesh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrthographicTileMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileMesh.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TileMesh\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                childTranslate\n                            \n                            \n                                    Protected\n                                options\n                            \n                            \n                                    Protected\n                                textureAbortController\n                            \n                            \n                                    Protected\n                                textureLoader\n                            \n                            \n                                    Protected\n                                tilePosition\n                            \n                            \n                                    Protected\n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateAngle\n                            \n                            \n                                    Protected\n                                divideSelf\n                            \n                            \n                                    Protected\n                                loadTextureMap\n                            \n                            \n                                    Protected\n                                mergeChildren\n                            \n                            \n                                    Protected\n                                mergeSelf\n                            \n                            \n                                preload\n                            \n                            \n                                requestLevel\n                            \n                            \n                                updateVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(textureLoader: TileLoader, tileSize: number, baseUrl: string, angle: string, x: number, y: number)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:188\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        textureLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tileSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        childTranslate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureAbortController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AbortController | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileLoader\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tilePosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TilePosition\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:19\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateAngle\n                        \n                    \n                \n            \n            \n                \nupdateAngle(angle: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                angle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        divideSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    divideSelf()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:83\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        loadTextureMap\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTextureMap()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:56\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mergeChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:115\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mergeSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeSelf()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:123\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload(altVariant?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:156\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                altVariant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestLevel\n                        \n                    \n                \n            \n            \n                \nrequestLevel(targetLevel: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:148\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetLevel\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVariant\n                        \n                    \n                \n            \n            \n                \nupdateVariant(variant: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:129\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileAbortError, TileLoader } from './TileLoader'\n\ninterface TileOptions {\n  tileSize: number\n  baseUrl: string\n  zOffset?: number\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\ntype PerspectiveOrientationType = 'px' | 'nx' | 'py' | 'ny' | 'pz' | 'nz'\n\nexport class TileMesh extends THREE.Mesh {\n  protected variant: string\n  protected tilePosition: TilePosition\n  protected options: TileOptions\n\n  protected textureAbortController: AbortController | undefined\n  protected textureLoader: TileLoader\n\n  static childTranslate = [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n\n  constructor(\n    textureLoader: TileLoader,\n    variant: string,\n    options: TileOptions,\n    tilePosition: TilePosition\n  ) {\n    super(new THREE.PlaneGeometry(options.tileSize, options.tileSize))\n\n    this.variant = variant\n    this.textureLoader = textureLoader\n\n    this.options = options\n    this.tilePosition = tilePosition\n\n    this.renderOrder = this.tilePosition.level\n    this.material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      transparent: true\n    })\n\n    this.loadTextureMap()\n  }\n\n  protected loadTextureMap() {\n    if (this.textureAbortController != null) {\n      this.textureAbortController.abort()\n    }\n\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      this.variant,\n      this.tilePosition\n    )\n\n    this.textureAbortController = job.abortController\n    job.task.result\n      .then(texture => {\n        if (this.material instanceof THREE.MeshBasicMaterial) {\n          this.material.map = texture\n          this.material.opacity = 1\n          this.material.needsUpdate = true\n        }\n      })\n      .catch(err => {\n        if (!(err instanceof TileAbortError)) {\n          throw err\n        }\n      })\n  }\n\n  protected divideSelf() {\n    let childPlane: THREE.Mesh\n\n    if (this.children.length > 0) return\n    for (const [dx, dy, px, py] of TileMesh.childTranslate) {\n      childPlane = new TileMesh(\n        this.textureLoader,\n        this.variant,\n        this.options,\n        {\n          level: this.tilePosition.level + 1,\n          x: this.tilePosition.x * 2 + dx,\n          y: this.tilePosition.y * 2 + dy\n        }\n      )\n\n      if (this.geometry instanceof THREE.PlaneGeometry) {\n        childPlane.scale.set(0.5, 0.5, 1)\n        childPlane.position.set(\n          px * this.geometry.parameters.width,\n          py * this.geometry.parameters.width,\n          this.options.zOffset ?? 0\n        )\n      }\n\n      this.add(childPlane)\n      childPlane.updateMatrix()\n      childPlane.updateMatrixWorld(true)\n      childPlane.geometry.computeBoundingBox()\n    }\n  }\n\n  protected mergeChildren() {\n    if (this.children.length = 0; i--) {\n      this.remove(this.children[i])\n    }\n  }\n\n  protected mergeSelf() {\n    if (this.parent instanceof TileMesh) {\n      this.parent.mergeChildren()\n    }\n  }\n\n  updateVariant(variant: string) {\n    if (this.variant === variant) return\n    if (this.tilePosition.level > 0) {\n      if (this.material instanceof THREE.MeshBasicMaterial) {\n        this.material.opacity = 0\n        this.material.needsUpdate = true\n      }\n    }\n\n    this.variant = variant\n    this.loadTextureMap()\n\n    for (const item of this.children) {\n      if (item instanceof TileMesh) {\n        item.updateVariant(variant)\n      }\n    }\n  }\n\n  requestLevel(targetLevel: number) {\n    if (this.tilePosition.level  targetLevel) {\n      this.mergeSelf()\n    }\n  }\n\n  preload(altVariant?: string) {\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      altVariant ?? this.variant,\n      this.tilePosition\n    )\n\n    job.task.execute()\n    return job.task.result\n  }\n}\n\nexport class PerspectiveTileMesh extends TileMesh {\n  plane: PerspectiveOrientationType\n\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    baseUrl: string,\n    plane: PerspectiveOrientationType\n  ) {\n    super(\n      textureLoader,\n      plane,\n      // add z translation to combat z-fighting\n      { tileSize, baseUrl, zOffset: 0.01 },\n      { x: 0, y: 0, level: 0 }\n    )\n    this.plane = plane\n  }\n}\n\nexport class OrthographicTileMesh extends TileMesh {\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    protected baseUrl: string,\n    angle: string,\n    x = 0,\n    y = 0\n  ) {\n    super(textureLoader, angle, { tileSize, baseUrl }, { x, y, level: 0 })\n  }\n\n  updateAngle(angle: string) {\n    this.updateVariant(angle)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageComponent.html":{"url":"components/PageComponent.html","title":"component - PageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page/page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page\n            \n\n\n\n            \n                styleUrls\n                ./page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page/page.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.scss']\n})\nexport class PageComponent {\n\n  constructor() { }\n}\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./page.component.scss\n                \n                .page {\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n  z-index: 1;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PerspectiveTileMesh.html":{"url":"classes/PerspectiveTileMesh.html","title":"class - PerspectiveTileMesh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PerspectiveTileMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileMesh.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            TileMesh\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                plane\n                            \n                            \n                                    Static\n                                childTranslate\n                            \n                            \n                                    Protected\n                                options\n                            \n                            \n                                    Protected\n                                textureAbortController\n                            \n                            \n                                    Protected\n                                textureLoader\n                            \n                            \n                                    Protected\n                                tilePosition\n                            \n                            \n                                    Protected\n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                divideSelf\n                            \n                            \n                                    Protected\n                                loadTextureMap\n                            \n                            \n                                    Protected\n                                mergeChildren\n                            \n                            \n                                    Protected\n                                mergeSelf\n                            \n                            \n                                preload\n                            \n                            \n                                requestLevel\n                            \n                            \n                                updateVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(textureLoader: TileLoader, tileSize: number, baseUrl: string, plane: PerspectiveOrientationType)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:169\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        textureLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tileSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plane\n                                                  \n                                                        \n                                                                        PerspectiveOrientationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        plane\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PerspectiveOrientationType\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        childTranslate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileOptions\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureAbortController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AbortController | undefined\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileLoader\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tilePosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TilePosition\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         TileMesh\n\n                            \n                        \n                    \n                        \n                                Defined in         TileMesh:19\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        divideSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    divideSelf()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:83\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        loadTextureMap\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTextureMap()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:56\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mergeChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeChildren()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:115\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mergeSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeSelf()\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:123\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload(altVariant?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:156\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                altVariant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestLevel\n                        \n                    \n                \n            \n            \n                \nrequestLevel(targetLevel: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:148\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetLevel\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVariant\n                        \n                    \n                \n            \n            \n                \nupdateVariant(variant: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         TileMesh\n\n                        \n                    \n                    \n                        \n                                Defined in         TileMesh:129\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileAbortError, TileLoader } from './TileLoader'\n\ninterface TileOptions {\n  tileSize: number\n  baseUrl: string\n  zOffset?: number\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\ntype PerspectiveOrientationType = 'px' | 'nx' | 'py' | 'ny' | 'pz' | 'nz'\n\nexport class TileMesh extends THREE.Mesh {\n  protected variant: string\n  protected tilePosition: TilePosition\n  protected options: TileOptions\n\n  protected textureAbortController: AbortController | undefined\n  protected textureLoader: TileLoader\n\n  static childTranslate = [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n\n  constructor(\n    textureLoader: TileLoader,\n    variant: string,\n    options: TileOptions,\n    tilePosition: TilePosition\n  ) {\n    super(new THREE.PlaneGeometry(options.tileSize, options.tileSize))\n\n    this.variant = variant\n    this.textureLoader = textureLoader\n\n    this.options = options\n    this.tilePosition = tilePosition\n\n    this.renderOrder = this.tilePosition.level\n    this.material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      transparent: true\n    })\n\n    this.loadTextureMap()\n  }\n\n  protected loadTextureMap() {\n    if (this.textureAbortController != null) {\n      this.textureAbortController.abort()\n    }\n\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      this.variant,\n      this.tilePosition\n    )\n\n    this.textureAbortController = job.abortController\n    job.task.result\n      .then(texture => {\n        if (this.material instanceof THREE.MeshBasicMaterial) {\n          this.material.map = texture\n          this.material.opacity = 1\n          this.material.needsUpdate = true\n        }\n      })\n      .catch(err => {\n        if (!(err instanceof TileAbortError)) {\n          throw err\n        }\n      })\n  }\n\n  protected divideSelf() {\n    let childPlane: THREE.Mesh\n\n    if (this.children.length > 0) return\n    for (const [dx, dy, px, py] of TileMesh.childTranslate) {\n      childPlane = new TileMesh(\n        this.textureLoader,\n        this.variant,\n        this.options,\n        {\n          level: this.tilePosition.level + 1,\n          x: this.tilePosition.x * 2 + dx,\n          y: this.tilePosition.y * 2 + dy\n        }\n      )\n\n      if (this.geometry instanceof THREE.PlaneGeometry) {\n        childPlane.scale.set(0.5, 0.5, 1)\n        childPlane.position.set(\n          px * this.geometry.parameters.width,\n          py * this.geometry.parameters.width,\n          this.options.zOffset ?? 0\n        )\n      }\n\n      this.add(childPlane)\n      childPlane.updateMatrix()\n      childPlane.updateMatrixWorld(true)\n      childPlane.geometry.computeBoundingBox()\n    }\n  }\n\n  protected mergeChildren() {\n    if (this.children.length = 0; i--) {\n      this.remove(this.children[i])\n    }\n  }\n\n  protected mergeSelf() {\n    if (this.parent instanceof TileMesh) {\n      this.parent.mergeChildren()\n    }\n  }\n\n  updateVariant(variant: string) {\n    if (this.variant === variant) return\n    if (this.tilePosition.level > 0) {\n      if (this.material instanceof THREE.MeshBasicMaterial) {\n        this.material.opacity = 0\n        this.material.needsUpdate = true\n      }\n    }\n\n    this.variant = variant\n    this.loadTextureMap()\n\n    for (const item of this.children) {\n      if (item instanceof TileMesh) {\n        item.updateVariant(variant)\n      }\n    }\n  }\n\n  requestLevel(targetLevel: number) {\n    if (this.tilePosition.level  targetLevel) {\n      this.mergeSelf()\n    }\n  }\n\n  preload(altVariant?: string) {\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      altVariant ?? this.variant,\n      this.tilePosition\n    )\n\n    job.task.execute()\n    return job.task.result\n  }\n}\n\nexport class PerspectiveTileMesh extends TileMesh {\n  plane: PerspectiveOrientationType\n\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    baseUrl: string,\n    plane: PerspectiveOrientationType\n  ) {\n    super(\n      textureLoader,\n      plane,\n      // add z translation to combat z-fighting\n      { tileSize, baseUrl, zOffset: 0.01 },\n      { x: 0, y: 0, level: 0 }\n    )\n    this.plane = plane\n  }\n}\n\nexport class OrthographicTileMesh extends TileMesh {\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    protected baseUrl: string,\n    angle: string,\n    x = 0,\n    y = 0\n  ) {\n    super(textureLoader, angle, { tileSize, baseUrl }, { x, y, level: 0 })\n  }\n\n  updateAngle(angle: string) {\n    this.updateVariant(angle)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreloadComponent.html":{"url":"components/PreloadComponent.html","title":"component - PreloadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PreloadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/preload/preload.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preload\n            \n\n\n\n            \n                styleUrls\n                ./preload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./preload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                images\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preload/preload.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/preload/preload.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/preload/preload.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/preload/preload.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preload/preload.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preload',\n  templateUrl: './preload.component.html',\n  styleUrls: ['./preload.component.scss']\n})\nexport class PreloadComponent implements OnInit {\n  @Input() id: string = '';\n  @Input() size: number = 0;\n  public images: string[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    let y: number = 0;\n    let x: number = 0;\n    for (let i = 0; i \n    \n\n    \n        \n  \n    \n  \n\n    \n\n    \n                \n                    ./preload.component.scss\n                \n                .preload {\n  background: no-repeat 50% 50%;\n  background-size: cover;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  .preload__content {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n  }\n  .preload__item {\n    background-size: cover;\n    width: 20%;\n    height: 25%;\n    display: block;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ControlsButtonComponent', 'selector': 'app-controls-button'},{'name': 'ControlsComponent', 'selector': 'app-controls'},{'name': 'CursorComponent', 'selector': 'app-cursor'},{'name': 'HomepagePage', 'selector': 'app-homepage'},{'name': 'InfoMessageComponent', 'selector': 'app-info-message'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainComponent', 'selector': 'app-main'},{'name': 'PageComponent', 'selector': 'app-page'},{'name': 'PreloadComponent', 'selector': 'app-preload'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreloadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderCallbacks.html":{"url":"interfaces/RenderCallbacks.html","title":"interface - RenderCallbacks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderCallbacks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/render/RenderMethod.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            onActive\n                                        \n                                \n                                \n                                        \n                                            onZoomChange\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        onActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onActive:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onZoomChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onZoomChange:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Renderer, Texture } from '../three'\nimport type { TileLoader } from '../tile/TileLoader'\n\nexport type ObjectFit = 'cover' | 'contain'\n\nexport interface RenderOptions {\n  objectFit: ObjectFit\n}\n\nexport interface RenderCallbacks {\n  onActive: () => void\n  onZoomChange: (data: { ratio: number; value: number }) => void\n}\n\nexport interface TransitionViewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\nexport abstract class RenderMethod {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(\n    protected tileLoader: TileLoader,\n    protected renderer: Renderer,\n    protected callbacks: RenderCallbacks,\n    protected options: RenderOptions\n  ) {}\n\n  abstract destroy(): void\n  abstract render(delta?: number): void\n\n  abstract onResize(width: number, height: number): void\n  abstract zoomIn(): void\n  abstract zoomOut(): void\n  abstract zoomReset(): void\n  abstract preload(): Promise\n\n  startTransition?(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ): void\n  endTransition?(): void\n  setTransitionProgress?(progress: number): void\n\n  setObjectFit?(objectFit: ObjectFit): void\n\n  abstract setWheelZoomEnabled(state: boolean): void\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenderFrustum.html":{"url":"classes/RenderFrustum.html","title":"class - RenderFrustum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenderFrustum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/render/RenderFrustum.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                camera\n                            \n                            \n                                    Protected\n                                frustum\n                            \n                            \n                                    Protected\n                                matrix4\n                            \n                            \n                                    Protected\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                containsPoint\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: THREE.Scene, camera: THREE.Camera)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    THREE.Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    THREE.Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        camera\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Camera\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        frustum\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Frustum\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        matrix4\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Matrix4\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     THREE.Scene\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        containsPoint\n                        \n                    \n                \n            \n            \n                \ncontainsPoint(vec: THREE.Vector3)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                vec\n                                            \n                                                        THREE.Vector3\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(targetLevel: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderFrustum.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetLevel\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileMesh } from '../tile/TileMesh'\n\nexport class RenderFrustum {\n  protected scene: THREE.Scene\n  protected camera: THREE.Camera\n\n  protected matrix4: THREE.Matrix4\n  protected frustum: THREE.Frustum\n\n  constructor(scene: THREE.Scene, camera: THREE.Camera) {\n    this.scene = scene\n    this.camera = camera\n\n    this.matrix4 = new THREE.Matrix4()\n    this.frustum = new THREE.Frustum()\n  }\n\n  update(targetLevel: number) {\n    this.frustum.setFromProjectionMatrix(\n      this.matrix4.multiplyMatrices(\n        this.camera.projectionMatrix,\n        this.camera.matrixWorldInverse\n      )\n    )\n\n    const visibleNodes = new Set()\n    this.scene.traverse(node => {\n      if (node instanceof TileMesh) {\n        const worldBox3 = new THREE.Box3()\n        worldBox3.setFromObject(node)\n        if (this.frustum.intersectsBox(worldBox3)) {\n          visibleNodes.add(node)\n        }\n      }\n    })\n\n    for (const node of visibleNodes) {\n      node.requestLevel(targetLevel)\n    }\n  }\n\n  containsPoint(vec: THREE.Vector3) {\n    return this.frustum.containsPoint(vec)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RenderMethod.html":{"url":"classes/RenderMethod.html","title":"class - RenderMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RenderMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/render/RenderMethod.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                destroy\n                            \n                            \n                                    Optional\n                                endTransition\n                            \n                            \n                                    Abstract\n                                onResize\n                            \n                            \n                                    Abstract\n                                preload\n                            \n                            \n                                    Abstract\n                                render\n                            \n                            \n                                    Optional\n                                setObjectFit\n                            \n                            \n                                    Optional\n                                setTransitionProgress\n                            \n                            \n                                    Abstract\n                                setWheelZoomEnabled\n                            \n                            \n                                    Optional\n                                startTransition\n                            \n                            \n                                    Abstract\n                                zoomIn\n                            \n                            \n                                    Abstract\n                                zoomOut\n                            \n                            \n                                    Abstract\n                                zoomReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileLoader: TileLoader, renderer: Renderer, callbacks: RenderCallbacks, options: RenderOptions)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        callbacks\n                                                  \n                                                        \n                                                                        RenderCallbacks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        RenderOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    destroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        endTransition\n                        \n                    \n                \n            \n            \n                \nendTransition()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(width: number, height: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                height\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        preload\n                        \n                    \n                \n            \n            \n                \n                        \n                    preload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        render\n                        \n                    \n                \n            \n            \n                \n                        \n                    render(delta?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delta\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setObjectFit\n                        \n                    \n                \n            \n            \n                \nsetObjectFit(objectFit: ObjectFit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                objectFit\n                                            \n                                                            ObjectFit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setTransitionProgress\n                        \n                    \n                \n            \n            \n                \nsetTransitionProgress(progress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                progress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        setWheelZoomEnabled\n                        \n                    \n                \n            \n            \n                \n                        \n                    setWheelZoomEnabled(state: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startTransition\n                        \n                    \n                \n            \n            \n                \nstartTransition(source: TransitionViewport, target: TransitionViewport, preserveZoom: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                            TransitionViewport\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                target\n                                            \n                                                            TransitionViewport\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                preserveZoom\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        zoomIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    zoomIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        zoomOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    zoomOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        zoomReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    zoomReset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/render/RenderMethod.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Renderer, Texture } from '../three'\nimport type { TileLoader } from '../tile/TileLoader'\n\nexport type ObjectFit = 'cover' | 'contain'\n\nexport interface RenderOptions {\n  objectFit: ObjectFit\n}\n\nexport interface RenderCallbacks {\n  onActive: () => void\n  onZoomChange: (data: { ratio: number; value: number }) => void\n}\n\nexport interface TransitionViewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\nexport abstract class RenderMethod {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(\n    protected tileLoader: TileLoader,\n    protected renderer: Renderer,\n    protected callbacks: RenderCallbacks,\n    protected options: RenderOptions\n  ) {}\n\n  abstract destroy(): void\n  abstract render(delta?: number): void\n\n  abstract onResize(width: number, height: number): void\n  abstract zoomIn(): void\n  abstract zoomOut(): void\n  abstract zoomReset(): void\n  abstract preload(): Promise\n\n  startTransition?(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ): void\n  endTransition?(): void\n  setTransitionProgress?(progress: number): void\n\n  setObjectFit?(objectFit: ObjectFit): void\n\n  abstract setWheelZoomEnabled(state: boolean): void\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenderOptions.html":{"url":"interfaces/RenderOptions.html","title":"interface - RenderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RenderOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/render/RenderMethod.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            objectFit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        objectFit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectFit:         ObjectFit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectFit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Renderer, Texture } from '../three'\nimport type { TileLoader } from '../tile/TileLoader'\n\nexport type ObjectFit = 'cover' | 'contain'\n\nexport interface RenderOptions {\n  objectFit: ObjectFit\n}\n\nexport interface RenderCallbacks {\n  onActive: () => void\n  onZoomChange: (data: { ratio: number; value: number }) => void\n}\n\nexport interface TransitionViewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\nexport abstract class RenderMethod {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(\n    protected tileLoader: TileLoader,\n    protected renderer: Renderer,\n    protected callbacks: RenderCallbacks,\n    protected options: RenderOptions\n  ) {}\n\n  abstract destroy(): void\n  abstract render(delta?: number): void\n\n  abstract onResize(width: number, height: number): void\n  abstract zoomIn(): void\n  abstract zoomOut(): void\n  abstract zoomReset(): void\n  abstract preload(): Promise\n\n  startTransition?(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ): void\n  endTransition?(): void\n  setTransitionProgress?(progress: number): void\n\n  setObjectFit?(objectFit: ObjectFit): void\n\n  abstract setWheelZoomEnabled(state: boolean): void\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileAbortError.html":{"url":"classes/TileAbortError.html","title":"class - TileAbortError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileAbortError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileLoader.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileTextureCache } from './TileTextureCache'\n\nexport class TileAbortError extends Error {\n  constructor() {\n    super('Aborted tile loading')\n  }\n}\n\nfunction bindOnce(image: T) {\n  type Name = Parameters[0]\n  type Callback = Parameters[1]\n  const callbacks: [Name, Callback][] = []\n\n  function cancel() {\n    for (const [name, callback] of callbacks) {\n      image.removeEventListener(name, callback)\n    }\n  }\n\n  return {\n    bind(\n      ...[name, func, options]: Parameters\n    ) {\n      callbacks.push([name, func])\n\n      const callback: typeof func = (...args) => {\n        cancel()\n        if (typeof func === 'function') {\n          func(...args)\n        }\n      }\n\n      image.addEventListener(name, callback, options)\n    },\n    cancel\n  }\n}\n\nexport type TileLoaderCancel = () => void\n\n// Images are considered low priority by Chrome etc.\n// https://web.dev/priority-hints/\n// Thus, to load images in high priority, we need to load them via fetch\nclass CancellableImageLoader {\n  load(url: string, signal?: AbortSignal): Promise {\n    const image = document.createElement('img')\n    const callbacks = bindOnce(image)\n    image.crossOrigin = 'anonymous'\n\n    if (signal) {\n      if (signal.aborted) return Promise.reject(new TileAbortError())\n      signal.addEventListener('abort', () => {\n        callbacks.cancel()\n        image.src = ''\n      })\n    }\n\n    // TODO: download and decode images in a web worker to reduce loading times\n    // This will require us to upgrade to Webpack 5 and might destroy\n    // compatibility with Aures\n    return fetch(url, { signal })\n      .then(i => {\n        if (signal?.aborted) throw new TileAbortError()\n        return i.blob()\n      })\n      .then(blob => {\n        if (signal?.aborted) throw new TileAbortError()\n\n        const blobUrl = URL.createObjectURL(blob)\n        image.src = blobUrl\n        return new Promise((resolve, reject) => {\n          callbacks.bind('load', () => resolve(image), false)\n          callbacks.bind('error', () => reject(new TileAbortError()), false)\n        }).finally(() => URL.revokeObjectURL(blobUrl))\n      })\n      .catch(err => {\n        if (\n          err instanceof DOMException &&\n          err.code === DOMException.ABORT_ERR\n        ) {\n          throw new TileAbortError()\n        }\n        throw err\n      })\n  }\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\nfunction getTilePositionString(position: TilePosition) {\n  return [position.level, position.x, position.y].join('_')\n}\n\nenum State {\n  Error,\n  InProgress,\n  Success,\n  Idle\n}\n\ninterface LazyPromise {\n  state: State\n  execute: () => void\n  result: Promise\n}\n\nfunction createLazyPromise(innerFn: () => Promise): LazyPromise {\n  let resolver: ((value: T) => void) | null = null\n  let rejecter: ((reason?: unknown) => void) | null = null\n\n  const result = new Promise((resolve, reject) => {\n    resolver = resolve\n    rejecter = reject\n  })\n\n  const lazyPromise = {\n    state: State.Idle,\n    execute: () => {\n      lazyPromise.state = State.InProgress\n      innerFn()\n        .then(value => {\n          lazyPromise.state = State.Success\n          if (!resolver) throw new Error('Resolver not found')\n          resolver?.(value)\n        })\n        .catch(err => {\n          lazyPromise.state = State.Error\n          rejecter?.(err)\n        })\n    },\n    result\n  }\n\n  return lazyPromise\n}\n\nexport interface TileJob {\n  abortController: AbortController | undefined\n  task: LazyPromise\n}\n\nexport class TileLoader {\n  protected textureCache: TileTextureCache\n  protected jobList = new Map()\n\n  constructor(cache: TileTextureCache) {\n    this.textureCache = cache\n  }\n\n  // To prevent frame drops, execute only a fraction of jobs at 1 frame\n  work() {\n    const idleTasks = [...this.jobList.values()]\n      .filter(\n        i => i.task.state === State.Idle && !i.abortController?.signal.aborted\n      )\n      .slice(0, 3)\n\n    return Promise.all(idleTasks.map(({ task }) => task.execute()))\n  }\n\n  load(baseUrl: string, variant: string, position: TilePosition): TileJob {\n    const fileName = `${getTilePositionString(position)}.jpg`\n    const url = [baseUrl, variant, fileName].join('/')\n\n    const cachedTask = this.jobList.get(url)\n    if (\n      cachedTask != null &&\n      cachedTask.task.state !== State.Error &&\n      !(\n        cachedTask.abortController?.signal.aborted &&\n        cachedTask.task.state !== State.Success\n      )\n    ) {\n      return cachedTask\n    }\n\n    const loader = new CancellableImageLoader()\n    const abortController = new AbortController()\n\n    const execute = () => {\n      // add to cache to perform GC\n      // TODO: handle case when overwriting texture\n      const texture = new THREE.Texture()\n      this.textureCache.set(url, texture)\n\n      return loader.load(url, abortController.signal).then(image => {\n        texture.image = image\n        texture.needsUpdate = true\n\n        return texture\n      })\n    }\n\n    const task = {\n      abortController,\n      task: createLazyPromise(execute)\n    }\n\n    this.jobList.set(url, task)\n    return task\n  }\n\n  cancelAll() {\n    for (const task of this.jobList.values()) {\n      task.abortController?.abort()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TileJob.html":{"url":"interfaces/TileJob.html","title":"interface - TileJob","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TileJob\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileLoader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abortController\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abortController\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abortController:     AbortController | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbortController | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         LazyPromise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LazyPromise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileTextureCache } from './TileTextureCache'\n\nexport class TileAbortError extends Error {\n  constructor() {\n    super('Aborted tile loading')\n  }\n}\n\nfunction bindOnce(image: T) {\n  type Name = Parameters[0]\n  type Callback = Parameters[1]\n  const callbacks: [Name, Callback][] = []\n\n  function cancel() {\n    for (const [name, callback] of callbacks) {\n      image.removeEventListener(name, callback)\n    }\n  }\n\n  return {\n    bind(\n      ...[name, func, options]: Parameters\n    ) {\n      callbacks.push([name, func])\n\n      const callback: typeof func = (...args) => {\n        cancel()\n        if (typeof func === 'function') {\n          func(...args)\n        }\n      }\n\n      image.addEventListener(name, callback, options)\n    },\n    cancel\n  }\n}\n\nexport type TileLoaderCancel = () => void\n\n// Images are considered low priority by Chrome etc.\n// https://web.dev/priority-hints/\n// Thus, to load images in high priority, we need to load them via fetch\nclass CancellableImageLoader {\n  load(url: string, signal?: AbortSignal): Promise {\n    const image = document.createElement('img')\n    const callbacks = bindOnce(image)\n    image.crossOrigin = 'anonymous'\n\n    if (signal) {\n      if (signal.aborted) return Promise.reject(new TileAbortError())\n      signal.addEventListener('abort', () => {\n        callbacks.cancel()\n        image.src = ''\n      })\n    }\n\n    // TODO: download and decode images in a web worker to reduce loading times\n    // This will require us to upgrade to Webpack 5 and might destroy\n    // compatibility with Aures\n    return fetch(url, { signal })\n      .then(i => {\n        if (signal?.aborted) throw new TileAbortError()\n        return i.blob()\n      })\n      .then(blob => {\n        if (signal?.aborted) throw new TileAbortError()\n\n        const blobUrl = URL.createObjectURL(blob)\n        image.src = blobUrl\n        return new Promise((resolve, reject) => {\n          callbacks.bind('load', () => resolve(image), false)\n          callbacks.bind('error', () => reject(new TileAbortError()), false)\n        }).finally(() => URL.revokeObjectURL(blobUrl))\n      })\n      .catch(err => {\n        if (\n          err instanceof DOMException &&\n          err.code === DOMException.ABORT_ERR\n        ) {\n          throw new TileAbortError()\n        }\n        throw err\n      })\n  }\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\nfunction getTilePositionString(position: TilePosition) {\n  return [position.level, position.x, position.y].join('_')\n}\n\nenum State {\n  Error,\n  InProgress,\n  Success,\n  Idle\n}\n\ninterface LazyPromise {\n  state: State\n  execute: () => void\n  result: Promise\n}\n\nfunction createLazyPromise(innerFn: () => Promise): LazyPromise {\n  let resolver: ((value: T) => void) | null = null\n  let rejecter: ((reason?: unknown) => void) | null = null\n\n  const result = new Promise((resolve, reject) => {\n    resolver = resolve\n    rejecter = reject\n  })\n\n  const lazyPromise = {\n    state: State.Idle,\n    execute: () => {\n      lazyPromise.state = State.InProgress\n      innerFn()\n        .then(value => {\n          lazyPromise.state = State.Success\n          if (!resolver) throw new Error('Resolver not found')\n          resolver?.(value)\n        })\n        .catch(err => {\n          lazyPromise.state = State.Error\n          rejecter?.(err)\n        })\n    },\n    result\n  }\n\n  return lazyPromise\n}\n\nexport interface TileJob {\n  abortController: AbortController | undefined\n  task: LazyPromise\n}\n\nexport class TileLoader {\n  protected textureCache: TileTextureCache\n  protected jobList = new Map()\n\n  constructor(cache: TileTextureCache) {\n    this.textureCache = cache\n  }\n\n  // To prevent frame drops, execute only a fraction of jobs at 1 frame\n  work() {\n    const idleTasks = [...this.jobList.values()]\n      .filter(\n        i => i.task.state === State.Idle && !i.abortController?.signal.aborted\n      )\n      .slice(0, 3)\n\n    return Promise.all(idleTasks.map(({ task }) => task.execute()))\n  }\n\n  load(baseUrl: string, variant: string, position: TilePosition): TileJob {\n    const fileName = `${getTilePositionString(position)}.jpg`\n    const url = [baseUrl, variant, fileName].join('/')\n\n    const cachedTask = this.jobList.get(url)\n    if (\n      cachedTask != null &&\n      cachedTask.task.state !== State.Error &&\n      !(\n        cachedTask.abortController?.signal.aborted &&\n        cachedTask.task.state !== State.Success\n      )\n    ) {\n      return cachedTask\n    }\n\n    const loader = new CancellableImageLoader()\n    const abortController = new AbortController()\n\n    const execute = () => {\n      // add to cache to perform GC\n      // TODO: handle case when overwriting texture\n      const texture = new THREE.Texture()\n      this.textureCache.set(url, texture)\n\n      return loader.load(url, abortController.signal).then(image => {\n        texture.image = image\n        texture.needsUpdate = true\n\n        return texture\n      })\n    }\n\n    const task = {\n      abortController,\n      task: createLazyPromise(execute)\n    }\n\n    this.jobList.set(url, task)\n    return task\n  }\n\n  cancelAll() {\n    for (const task of this.jobList.values()) {\n      task.abortController?.abort()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileLoader.html":{"url":"classes/TileLoader.html","title":"class - TileLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileLoader.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                jobList\n                            \n                            \n                                    Protected\n                                textureCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelAll\n                            \n                            \n                                load\n                            \n                            \n                                work\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: TileTextureCache)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:149\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                        TileTextureCache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        jobList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:149\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileTextureCache\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:148\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelAll\n                        \n                    \n                \n            \n            \n                \ncancelAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:208\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(baseUrl: string, variant: string, position: TilePosition)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                baseUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                variant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                            TilePosition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TileJob\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        work\n                        \n                    \n                \n            \n            \n                \nwork()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileLoader.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileTextureCache } from './TileTextureCache'\n\nexport class TileAbortError extends Error {\n  constructor() {\n    super('Aborted tile loading')\n  }\n}\n\nfunction bindOnce(image: T) {\n  type Name = Parameters[0]\n  type Callback = Parameters[1]\n  const callbacks: [Name, Callback][] = []\n\n  function cancel() {\n    for (const [name, callback] of callbacks) {\n      image.removeEventListener(name, callback)\n    }\n  }\n\n  return {\n    bind(\n      ...[name, func, options]: Parameters\n    ) {\n      callbacks.push([name, func])\n\n      const callback: typeof func = (...args) => {\n        cancel()\n        if (typeof func === 'function') {\n          func(...args)\n        }\n      }\n\n      image.addEventListener(name, callback, options)\n    },\n    cancel\n  }\n}\n\nexport type TileLoaderCancel = () => void\n\n// Images are considered low priority by Chrome etc.\n// https://web.dev/priority-hints/\n// Thus, to load images in high priority, we need to load them via fetch\nclass CancellableImageLoader {\n  load(url: string, signal?: AbortSignal): Promise {\n    const image = document.createElement('img')\n    const callbacks = bindOnce(image)\n    image.crossOrigin = 'anonymous'\n\n    if (signal) {\n      if (signal.aborted) return Promise.reject(new TileAbortError())\n      signal.addEventListener('abort', () => {\n        callbacks.cancel()\n        image.src = ''\n      })\n    }\n\n    // TODO: download and decode images in a web worker to reduce loading times\n    // This will require us to upgrade to Webpack 5 and might destroy\n    // compatibility with Aures\n    return fetch(url, { signal })\n      .then(i => {\n        if (signal?.aborted) throw new TileAbortError()\n        return i.blob()\n      })\n      .then(blob => {\n        if (signal?.aborted) throw new TileAbortError()\n\n        const blobUrl = URL.createObjectURL(blob)\n        image.src = blobUrl\n        return new Promise((resolve, reject) => {\n          callbacks.bind('load', () => resolve(image), false)\n          callbacks.bind('error', () => reject(new TileAbortError()), false)\n        }).finally(() => URL.revokeObjectURL(blobUrl))\n      })\n      .catch(err => {\n        if (\n          err instanceof DOMException &&\n          err.code === DOMException.ABORT_ERR\n        ) {\n          throw new TileAbortError()\n        }\n        throw err\n      })\n  }\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\nfunction getTilePositionString(position: TilePosition) {\n  return [position.level, position.x, position.y].join('_')\n}\n\nenum State {\n  Error,\n  InProgress,\n  Success,\n  Idle\n}\n\ninterface LazyPromise {\n  state: State\n  execute: () => void\n  result: Promise\n}\n\nfunction createLazyPromise(innerFn: () => Promise): LazyPromise {\n  let resolver: ((value: T) => void) | null = null\n  let rejecter: ((reason?: unknown) => void) | null = null\n\n  const result = new Promise((resolve, reject) => {\n    resolver = resolve\n    rejecter = reject\n  })\n\n  const lazyPromise = {\n    state: State.Idle,\n    execute: () => {\n      lazyPromise.state = State.InProgress\n      innerFn()\n        .then(value => {\n          lazyPromise.state = State.Success\n          if (!resolver) throw new Error('Resolver not found')\n          resolver?.(value)\n        })\n        .catch(err => {\n          lazyPromise.state = State.Error\n          rejecter?.(err)\n        })\n    },\n    result\n  }\n\n  return lazyPromise\n}\n\nexport interface TileJob {\n  abortController: AbortController | undefined\n  task: LazyPromise\n}\n\nexport class TileLoader {\n  protected textureCache: TileTextureCache\n  protected jobList = new Map()\n\n  constructor(cache: TileTextureCache) {\n    this.textureCache = cache\n  }\n\n  // To prevent frame drops, execute only a fraction of jobs at 1 frame\n  work() {\n    const idleTasks = [...this.jobList.values()]\n      .filter(\n        i => i.task.state === State.Idle && !i.abortController?.signal.aborted\n      )\n      .slice(0, 3)\n\n    return Promise.all(idleTasks.map(({ task }) => task.execute()))\n  }\n\n  load(baseUrl: string, variant: string, position: TilePosition): TileJob {\n    const fileName = `${getTilePositionString(position)}.jpg`\n    const url = [baseUrl, variant, fileName].join('/')\n\n    const cachedTask = this.jobList.get(url)\n    if (\n      cachedTask != null &&\n      cachedTask.task.state !== State.Error &&\n      !(\n        cachedTask.abortController?.signal.aborted &&\n        cachedTask.task.state !== State.Success\n      )\n    ) {\n      return cachedTask\n    }\n\n    const loader = new CancellableImageLoader()\n    const abortController = new AbortController()\n\n    const execute = () => {\n      // add to cache to perform GC\n      // TODO: handle case when overwriting texture\n      const texture = new THREE.Texture()\n      this.textureCache.set(url, texture)\n\n      return loader.load(url, abortController.signal).then(image => {\n        texture.image = image\n        texture.needsUpdate = true\n\n        return texture\n      })\n    }\n\n    const task = {\n      abortController,\n      task: createLazyPromise(execute)\n    }\n\n    this.jobList.set(url, task)\n    return task\n  }\n\n  cancelAll() {\n    for (const task of this.jobList.values()) {\n      task.abortController?.abort()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileMesh.html":{"url":"classes/TileMesh.html","title":"class - TileMesh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileMesh\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileMesh.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        THREE.Mesh\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                childTranslate\n                            \n                            \n                                    Protected\n                                options\n                            \n                            \n                                    Protected\n                                textureAbortController\n                            \n                            \n                                    Protected\n                                textureLoader\n                            \n                            \n                                    Protected\n                                tilePosition\n                            \n                            \n                                    Protected\n                                variant\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                divideSelf\n                            \n                            \n                                    Protected\n                                loadTextureMap\n                            \n                            \n                                    Protected\n                                mergeChildren\n                            \n                            \n                                    Protected\n                                mergeSelf\n                            \n                            \n                                preload\n                            \n                            \n                                requestLevel\n                            \n                            \n                                updateVariant\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(textureLoader: TileLoader, variant: string, options: TileOptions, tilePosition: TilePosition)\n                    \n                \n                        \n                            \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        textureLoader\n                                                  \n                                                        \n                                                                        TileLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        variant\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        TileOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tilePosition\n                                                  \n                                                        \n                                                                        TilePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        childTranslate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileOptions\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureAbortController\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AbortController | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TileLoader\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tilePosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TilePosition\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        variant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        divideSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    divideSelf()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        loadTextureMap\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadTextureMap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mergeChildren\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeChildren()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mergeSelf\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergeSelf()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        preload\n                        \n                    \n                \n            \n            \n                \npreload(altVariant?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                altVariant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestLevel\n                        \n                    \n                \n            \n            \n                \nrequestLevel(targetLevel: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetLevel\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVariant\n                        \n                    \n                \n            \n            \n                \nupdateVariant(variant: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileMesh.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                variant\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileAbortError, TileLoader } from './TileLoader'\n\ninterface TileOptions {\n  tileSize: number\n  baseUrl: string\n  zOffset?: number\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\ntype PerspectiveOrientationType = 'px' | 'nx' | 'py' | 'ny' | 'pz' | 'nz'\n\nexport class TileMesh extends THREE.Mesh {\n  protected variant: string\n  protected tilePosition: TilePosition\n  protected options: TileOptions\n\n  protected textureAbortController: AbortController | undefined\n  protected textureLoader: TileLoader\n\n  static childTranslate = [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n\n  constructor(\n    textureLoader: TileLoader,\n    variant: string,\n    options: TileOptions,\n    tilePosition: TilePosition\n  ) {\n    super(new THREE.PlaneGeometry(options.tileSize, options.tileSize))\n\n    this.variant = variant\n    this.textureLoader = textureLoader\n\n    this.options = options\n    this.tilePosition = tilePosition\n\n    this.renderOrder = this.tilePosition.level\n    this.material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      transparent: true\n    })\n\n    this.loadTextureMap()\n  }\n\n  protected loadTextureMap() {\n    if (this.textureAbortController != null) {\n      this.textureAbortController.abort()\n    }\n\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      this.variant,\n      this.tilePosition\n    )\n\n    this.textureAbortController = job.abortController\n    job.task.result\n      .then(texture => {\n        if (this.material instanceof THREE.MeshBasicMaterial) {\n          this.material.map = texture\n          this.material.opacity = 1\n          this.material.needsUpdate = true\n        }\n      })\n      .catch(err => {\n        if (!(err instanceof TileAbortError)) {\n          throw err\n        }\n      })\n  }\n\n  protected divideSelf() {\n    let childPlane: THREE.Mesh\n\n    if (this.children.length > 0) return\n    for (const [dx, dy, px, py] of TileMesh.childTranslate) {\n      childPlane = new TileMesh(\n        this.textureLoader,\n        this.variant,\n        this.options,\n        {\n          level: this.tilePosition.level + 1,\n          x: this.tilePosition.x * 2 + dx,\n          y: this.tilePosition.y * 2 + dy\n        }\n      )\n\n      if (this.geometry instanceof THREE.PlaneGeometry) {\n        childPlane.scale.set(0.5, 0.5, 1)\n        childPlane.position.set(\n          px * this.geometry.parameters.width,\n          py * this.geometry.parameters.width,\n          this.options.zOffset ?? 0\n        )\n      }\n\n      this.add(childPlane)\n      childPlane.updateMatrix()\n      childPlane.updateMatrixWorld(true)\n      childPlane.geometry.computeBoundingBox()\n    }\n  }\n\n  protected mergeChildren() {\n    if (this.children.length = 0; i--) {\n      this.remove(this.children[i])\n    }\n  }\n\n  protected mergeSelf() {\n    if (this.parent instanceof TileMesh) {\n      this.parent.mergeChildren()\n    }\n  }\n\n  updateVariant(variant: string) {\n    if (this.variant === variant) return\n    if (this.tilePosition.level > 0) {\n      if (this.material instanceof THREE.MeshBasicMaterial) {\n        this.material.opacity = 0\n        this.material.needsUpdate = true\n      }\n    }\n\n    this.variant = variant\n    this.loadTextureMap()\n\n    for (const item of this.children) {\n      if (item instanceof TileMesh) {\n        item.updateVariant(variant)\n      }\n    }\n  }\n\n  requestLevel(targetLevel: number) {\n    if (this.tilePosition.level  targetLevel) {\n      this.mergeSelf()\n    }\n  }\n\n  preload(altVariant?: string) {\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      altVariant ?? this.variant,\n      this.tilePosition\n    )\n\n    job.task.execute()\n    return job.task.result\n  }\n}\n\nexport class PerspectiveTileMesh extends TileMesh {\n  plane: PerspectiveOrientationType\n\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    baseUrl: string,\n    plane: PerspectiveOrientationType\n  ) {\n    super(\n      textureLoader,\n      plane,\n      // add z translation to combat z-fighting\n      { tileSize, baseUrl, zOffset: 0.01 },\n      { x: 0, y: 0, level: 0 }\n    )\n    this.plane = plane\n  }\n}\n\nexport class OrthographicTileMesh extends TileMesh {\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    protected baseUrl: string,\n    angle: string,\n    x = 0,\n    y = 0\n  ) {\n    super(textureLoader, angle, { tileSize, baseUrl }, { x, y, level: 0 })\n  }\n\n  updateAngle(angle: string) {\n    this.updateVariant(angle)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TileOptions.html":{"url":"interfaces/TileOptions.html","title":"interface - TileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileMesh.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            baseUrl\n                                        \n                                \n                                \n                                        \n                                            tileSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zOffset\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zOffset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileAbortError, TileLoader } from './TileLoader'\n\ninterface TileOptions {\n  tileSize: number\n  baseUrl: string\n  zOffset?: number\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\ntype PerspectiveOrientationType = 'px' | 'nx' | 'py' | 'ny' | 'pz' | 'nz'\n\nexport class TileMesh extends THREE.Mesh {\n  protected variant: string\n  protected tilePosition: TilePosition\n  protected options: TileOptions\n\n  protected textureAbortController: AbortController | undefined\n  protected textureLoader: TileLoader\n\n  static childTranslate = [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n\n  constructor(\n    textureLoader: TileLoader,\n    variant: string,\n    options: TileOptions,\n    tilePosition: TilePosition\n  ) {\n    super(new THREE.PlaneGeometry(options.tileSize, options.tileSize))\n\n    this.variant = variant\n    this.textureLoader = textureLoader\n\n    this.options = options\n    this.tilePosition = tilePosition\n\n    this.renderOrder = this.tilePosition.level\n    this.material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      transparent: true\n    })\n\n    this.loadTextureMap()\n  }\n\n  protected loadTextureMap() {\n    if (this.textureAbortController != null) {\n      this.textureAbortController.abort()\n    }\n\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      this.variant,\n      this.tilePosition\n    )\n\n    this.textureAbortController = job.abortController\n    job.task.result\n      .then(texture => {\n        if (this.material instanceof THREE.MeshBasicMaterial) {\n          this.material.map = texture\n          this.material.opacity = 1\n          this.material.needsUpdate = true\n        }\n      })\n      .catch(err => {\n        if (!(err instanceof TileAbortError)) {\n          throw err\n        }\n      })\n  }\n\n  protected divideSelf() {\n    let childPlane: THREE.Mesh\n\n    if (this.children.length > 0) return\n    for (const [dx, dy, px, py] of TileMesh.childTranslate) {\n      childPlane = new TileMesh(\n        this.textureLoader,\n        this.variant,\n        this.options,\n        {\n          level: this.tilePosition.level + 1,\n          x: this.tilePosition.x * 2 + dx,\n          y: this.tilePosition.y * 2 + dy\n        }\n      )\n\n      if (this.geometry instanceof THREE.PlaneGeometry) {\n        childPlane.scale.set(0.5, 0.5, 1)\n        childPlane.position.set(\n          px * this.geometry.parameters.width,\n          py * this.geometry.parameters.width,\n          this.options.zOffset ?? 0\n        )\n      }\n\n      this.add(childPlane)\n      childPlane.updateMatrix()\n      childPlane.updateMatrixWorld(true)\n      childPlane.geometry.computeBoundingBox()\n    }\n  }\n\n  protected mergeChildren() {\n    if (this.children.length = 0; i--) {\n      this.remove(this.children[i])\n    }\n  }\n\n  protected mergeSelf() {\n    if (this.parent instanceof TileMesh) {\n      this.parent.mergeChildren()\n    }\n  }\n\n  updateVariant(variant: string) {\n    if (this.variant === variant) return\n    if (this.tilePosition.level > 0) {\n      if (this.material instanceof THREE.MeshBasicMaterial) {\n        this.material.opacity = 0\n        this.material.needsUpdate = true\n      }\n    }\n\n    this.variant = variant\n    this.loadTextureMap()\n\n    for (const item of this.children) {\n      if (item instanceof TileMesh) {\n        item.updateVariant(variant)\n      }\n    }\n  }\n\n  requestLevel(targetLevel: number) {\n    if (this.tilePosition.level  targetLevel) {\n      this.mergeSelf()\n    }\n  }\n\n  preload(altVariant?: string) {\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      altVariant ?? this.variant,\n      this.tilePosition\n    )\n\n    job.task.execute()\n    return job.task.result\n  }\n}\n\nexport class PerspectiveTileMesh extends TileMesh {\n  plane: PerspectiveOrientationType\n\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    baseUrl: string,\n    plane: PerspectiveOrientationType\n  ) {\n    super(\n      textureLoader,\n      plane,\n      // add z translation to combat z-fighting\n      { tileSize, baseUrl, zOffset: 0.01 },\n      { x: 0, y: 0, level: 0 }\n    )\n    this.plane = plane\n  }\n}\n\nexport class OrthographicTileMesh extends TileMesh {\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    protected baseUrl: string,\n    angle: string,\n    x = 0,\n    y = 0\n  ) {\n    super(textureLoader, angle, { tileSize, baseUrl }, { x, y, level: 0 })\n  }\n\n  updateAngle(angle: string) {\n    this.updateVariant(angle)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TilePanorama.html":{"url":"interfaces/TilePanorama.html","title":"interface - TilePanorama","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TilePanorama\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            maxZoom\n                                        \n                                \n                                \n                                        \n                                            tileSize\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxZoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxZoom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TilePanorama {\n  id: string\n  width: number\n  height: number\n  tileSize: number\n  maxZoom: number\n}\n\nexport interface ExteriorTilePanorama extends TilePanorama {\n  photos: string[]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface InteriorTilePanorama extends TilePanorama {}\n\nexport interface HandheldShape {\n  fileName: string\n  type: string | null\n}\n\nexport interface Manifest {\n  baseUrl: string\n  id: number\n  timestamp: number\n  exterior: ExteriorTilePanorama[]\n  interior: InteriorTilePanorama[]\n  handheld?: (HandheldShape | string)[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TilePosition.html":{"url":"interfaces/TilePosition.html","title":"interface - TilePosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TilePosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileLoader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileTextureCache } from './TileTextureCache'\n\nexport class TileAbortError extends Error {\n  constructor() {\n    super('Aborted tile loading')\n  }\n}\n\nfunction bindOnce(image: T) {\n  type Name = Parameters[0]\n  type Callback = Parameters[1]\n  const callbacks: [Name, Callback][] = []\n\n  function cancel() {\n    for (const [name, callback] of callbacks) {\n      image.removeEventListener(name, callback)\n    }\n  }\n\n  return {\n    bind(\n      ...[name, func, options]: Parameters\n    ) {\n      callbacks.push([name, func])\n\n      const callback: typeof func = (...args) => {\n        cancel()\n        if (typeof func === 'function') {\n          func(...args)\n        }\n      }\n\n      image.addEventListener(name, callback, options)\n    },\n    cancel\n  }\n}\n\nexport type TileLoaderCancel = () => void\n\n// Images are considered low priority by Chrome etc.\n// https://web.dev/priority-hints/\n// Thus, to load images in high priority, we need to load them via fetch\nclass CancellableImageLoader {\n  load(url: string, signal?: AbortSignal): Promise {\n    const image = document.createElement('img')\n    const callbacks = bindOnce(image)\n    image.crossOrigin = 'anonymous'\n\n    if (signal) {\n      if (signal.aborted) return Promise.reject(new TileAbortError())\n      signal.addEventListener('abort', () => {\n        callbacks.cancel()\n        image.src = ''\n      })\n    }\n\n    // TODO: download and decode images in a web worker to reduce loading times\n    // This will require us to upgrade to Webpack 5 and might destroy\n    // compatibility with Aures\n    return fetch(url, { signal })\n      .then(i => {\n        if (signal?.aborted) throw new TileAbortError()\n        return i.blob()\n      })\n      .then(blob => {\n        if (signal?.aborted) throw new TileAbortError()\n\n        const blobUrl = URL.createObjectURL(blob)\n        image.src = blobUrl\n        return new Promise((resolve, reject) => {\n          callbacks.bind('load', () => resolve(image), false)\n          callbacks.bind('error', () => reject(new TileAbortError()), false)\n        }).finally(() => URL.revokeObjectURL(blobUrl))\n      })\n      .catch(err => {\n        if (\n          err instanceof DOMException &&\n          err.code === DOMException.ABORT_ERR\n        ) {\n          throw new TileAbortError()\n        }\n        throw err\n      })\n  }\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\nfunction getTilePositionString(position: TilePosition) {\n  return [position.level, position.x, position.y].join('_')\n}\n\nenum State {\n  Error,\n  InProgress,\n  Success,\n  Idle\n}\n\ninterface LazyPromise {\n  state: State\n  execute: () => void\n  result: Promise\n}\n\nfunction createLazyPromise(innerFn: () => Promise): LazyPromise {\n  let resolver: ((value: T) => void) | null = null\n  let rejecter: ((reason?: unknown) => void) | null = null\n\n  const result = new Promise((resolve, reject) => {\n    resolver = resolve\n    rejecter = reject\n  })\n\n  const lazyPromise = {\n    state: State.Idle,\n    execute: () => {\n      lazyPromise.state = State.InProgress\n      innerFn()\n        .then(value => {\n          lazyPromise.state = State.Success\n          if (!resolver) throw new Error('Resolver not found')\n          resolver?.(value)\n        })\n        .catch(err => {\n          lazyPromise.state = State.Error\n          rejecter?.(err)\n        })\n    },\n    result\n  }\n\n  return lazyPromise\n}\n\nexport interface TileJob {\n  abortController: AbortController | undefined\n  task: LazyPromise\n}\n\nexport class TileLoader {\n  protected textureCache: TileTextureCache\n  protected jobList = new Map()\n\n  constructor(cache: TileTextureCache) {\n    this.textureCache = cache\n  }\n\n  // To prevent frame drops, execute only a fraction of jobs at 1 frame\n  work() {\n    const idleTasks = [...this.jobList.values()]\n      .filter(\n        i => i.task.state === State.Idle && !i.abortController?.signal.aborted\n      )\n      .slice(0, 3)\n\n    return Promise.all(idleTasks.map(({ task }) => task.execute()))\n  }\n\n  load(baseUrl: string, variant: string, position: TilePosition): TileJob {\n    const fileName = `${getTilePositionString(position)}.jpg`\n    const url = [baseUrl, variant, fileName].join('/')\n\n    const cachedTask = this.jobList.get(url)\n    if (\n      cachedTask != null &&\n      cachedTask.task.state !== State.Error &&\n      !(\n        cachedTask.abortController?.signal.aborted &&\n        cachedTask.task.state !== State.Success\n      )\n    ) {\n      return cachedTask\n    }\n\n    const loader = new CancellableImageLoader()\n    const abortController = new AbortController()\n\n    const execute = () => {\n      // add to cache to perform GC\n      // TODO: handle case when overwriting texture\n      const texture = new THREE.Texture()\n      this.textureCache.set(url, texture)\n\n      return loader.load(url, abortController.signal).then(image => {\n        texture.image = image\n        texture.needsUpdate = true\n\n        return texture\n      })\n    }\n\n    const task = {\n      abortController,\n      task: createLazyPromise(execute)\n    }\n\n    this.jobList.set(url, task)\n    return task\n  }\n\n  cancelAll() {\n    for (const task of this.jobList.values()) {\n      task.abortController?.abort()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TilePosition-1.html":{"url":"interfaces/TilePosition-1.html","title":"interface - TilePosition-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TilePosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileMesh.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { TileAbortError, TileLoader } from './TileLoader'\n\ninterface TileOptions {\n  tileSize: number\n  baseUrl: string\n  zOffset?: number\n}\n\ninterface TilePosition {\n  level: number\n  x: number\n  y: number\n}\n\ntype PerspectiveOrientationType = 'px' | 'nx' | 'py' | 'ny' | 'pz' | 'nz'\n\nexport class TileMesh extends THREE.Mesh {\n  protected variant: string\n  protected tilePosition: TilePosition\n  protected options: TileOptions\n\n  protected textureAbortController: AbortController | undefined\n  protected textureLoader: TileLoader\n\n  static childTranslate = [\n    [0, 0, -0.25, 0.25],\n    [1, 0, 0.25, 0.25],\n    [0, 1, -0.25, -0.25],\n    [1, 1, 0.25, -0.25]\n  ]\n\n  constructor(\n    textureLoader: TileLoader,\n    variant: string,\n    options: TileOptions,\n    tilePosition: TilePosition\n  ) {\n    super(new THREE.PlaneGeometry(options.tileSize, options.tileSize))\n\n    this.variant = variant\n    this.textureLoader = textureLoader\n\n    this.options = options\n    this.tilePosition = tilePosition\n\n    this.renderOrder = this.tilePosition.level\n    this.material = new THREE.MeshBasicMaterial({\n      opacity: 0,\n      transparent: true\n    })\n\n    this.loadTextureMap()\n  }\n\n  protected loadTextureMap() {\n    if (this.textureAbortController != null) {\n      this.textureAbortController.abort()\n    }\n\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      this.variant,\n      this.tilePosition\n    )\n\n    this.textureAbortController = job.abortController\n    job.task.result\n      .then(texture => {\n        if (this.material instanceof THREE.MeshBasicMaterial) {\n          this.material.map = texture\n          this.material.opacity = 1\n          this.material.needsUpdate = true\n        }\n      })\n      .catch(err => {\n        if (!(err instanceof TileAbortError)) {\n          throw err\n        }\n      })\n  }\n\n  protected divideSelf() {\n    let childPlane: THREE.Mesh\n\n    if (this.children.length > 0) return\n    for (const [dx, dy, px, py] of TileMesh.childTranslate) {\n      childPlane = new TileMesh(\n        this.textureLoader,\n        this.variant,\n        this.options,\n        {\n          level: this.tilePosition.level + 1,\n          x: this.tilePosition.x * 2 + dx,\n          y: this.tilePosition.y * 2 + dy\n        }\n      )\n\n      if (this.geometry instanceof THREE.PlaneGeometry) {\n        childPlane.scale.set(0.5, 0.5, 1)\n        childPlane.position.set(\n          px * this.geometry.parameters.width,\n          py * this.geometry.parameters.width,\n          this.options.zOffset ?? 0\n        )\n      }\n\n      this.add(childPlane)\n      childPlane.updateMatrix()\n      childPlane.updateMatrixWorld(true)\n      childPlane.geometry.computeBoundingBox()\n    }\n  }\n\n  protected mergeChildren() {\n    if (this.children.length = 0; i--) {\n      this.remove(this.children[i])\n    }\n  }\n\n  protected mergeSelf() {\n    if (this.parent instanceof TileMesh) {\n      this.parent.mergeChildren()\n    }\n  }\n\n  updateVariant(variant: string) {\n    if (this.variant === variant) return\n    if (this.tilePosition.level > 0) {\n      if (this.material instanceof THREE.MeshBasicMaterial) {\n        this.material.opacity = 0\n        this.material.needsUpdate = true\n      }\n    }\n\n    this.variant = variant\n    this.loadTextureMap()\n\n    for (const item of this.children) {\n      if (item instanceof TileMesh) {\n        item.updateVariant(variant)\n      }\n    }\n  }\n\n  requestLevel(targetLevel: number) {\n    if (this.tilePosition.level  targetLevel) {\n      this.mergeSelf()\n    }\n  }\n\n  preload(altVariant?: string) {\n    const job = this.textureLoader.load(\n      this.options.baseUrl,\n      altVariant ?? this.variant,\n      this.tilePosition\n    )\n\n    job.task.execute()\n    return job.task.result\n  }\n}\n\nexport class PerspectiveTileMesh extends TileMesh {\n  plane: PerspectiveOrientationType\n\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    baseUrl: string,\n    plane: PerspectiveOrientationType\n  ) {\n    super(\n      textureLoader,\n      plane,\n      // add z translation to combat z-fighting\n      { tileSize, baseUrl, zOffset: 0.01 },\n      { x: 0, y: 0, level: 0 }\n    )\n    this.plane = plane\n  }\n}\n\nexport class OrthographicTileMesh extends TileMesh {\n  constructor(\n    textureLoader: TileLoader,\n    tileSize: number,\n    protected baseUrl: string,\n    angle: string,\n    x = 0,\n    y = 0\n  ) {\n    super(textureLoader, angle, { tileSize, baseUrl }, { x, y, level: 0 })\n  }\n\n  updateAngle(angle: string) {\n    this.updateVariant(angle)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TileTextureCache.html":{"url":"classes/TileTextureCache.html","title":"class - TileTextureCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TileTextureCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/tile/TileTextureCache.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                get\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/driverama-360-renderer/src/tile/TileTextureCache.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileTextureCache.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileTextureCache.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     THREE.Texture | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, texture: THREE.Texture)\n                \n            \n\n\n                    \n                        \n                            Defined in src/driverama-360-renderer/src/tile/TileTextureCache.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                texture\n                                            \n                                                        THREE.Texture\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as THREE from '../three'\n\nexport class TileTextureCache {\n  protected data = new Map()\n\n  get(key: string): THREE.Texture | undefined {\n    return this.data.get(key)\n  }\n\n  set(key: string, texture: THREE.Texture) {\n    this.data.set(key, texture)\n  }\n\n  destroy() {\n    for (const texture of this.data.values()) {\n      texture.dispose()\n    }\n\n    this.data.clear()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transition.html":{"url":"interfaces/Transition.html","title":"interface - Transition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/exterior/ExteriorMethod.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            preserveZoom\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        preserveZoom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preserveZoom:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:         Viewport\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Viewport\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         Viewport\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Viewport\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { ExteriorControls } from './ExteriorControls'\nimport {\n  ObjectFit,\n  RenderCallbacks,\n  RenderMethod,\n  RenderOptions,\n  TransitionViewport\n} from '../render/RenderMethod'\nimport { ExteriorTilePanorama } from '../types'\nimport { clamp } from 'three/src/math/MathUtils'\nimport { TileLoader } from '../tile/TileLoader'\nimport { ExteriorMapPlane } from './ExteriorMapPlane'\nimport { RenderFrustum } from '../render/RenderFrustum'\nimport { getMinZoom, getMinZoomInterpolate } from './ExteriorUtils'\n\nconst PX_PER_ANGLE = 20\nconst STARTING_ANGLE = 230\n\ninterface Viewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\ninterface Transition {\n  source: Viewport\n  target: Viewport\n  preserveZoom: boolean\n}\n\nexport class ExteriorMethod extends RenderMethod {\n  protected scene: THREE.Scene\n  protected camera: THREE.OrthographicCamera\n  protected planeMap: ExteriorMapPlane\n\n  protected frustum: RenderFrustum\n  protected controls: ExteriorControls\n\n  protected data: ExteriorTilePanorama\n\n  // handle turntable rotation\n  protected deltaX = 0\n  protected maxDelta = 0\n\n  // handle scaling to fit screen\n  protected minZoom = 0\n\n  // object fit\n  protected objectFit: ObjectFit\n\n  // transition of object fit\n  protected transitionProgress = 0\n  protected transitionObjectFit: Transition | null = null\n\n  constructor(\n    tileLoader: TileLoader,\n    renderer: THREE.Renderer,\n    callbacks: RenderCallbacks,\n    options: RenderOptions,\n    data: ExteriorTilePanorama,\n    baseUrl: string\n  ) {\n    super(tileLoader, renderer, callbacks, options)\n\n    this.data = data\n    this.scene = new THREE.Scene()\n    this.scene.background = null\n\n    const { clientWidth, clientHeight } = renderer.domElement\n    this.camera = new THREE.OrthographicCamera(\n      clientWidth / -2,\n      clientWidth / 2,\n      clientHeight / 2,\n      clientHeight / -2,\n      1,\n      1000\n    )\n\n    this.deltaX =\n      Math.floor((STARTING_ANGLE / 360) * this.data.photos.length) *\n      PX_PER_ANGLE\n\n    this.maxDelta = PX_PER_ANGLE * this.data.photos.length\n\n    const minWidth = this.data.width / Math.pow(2, this.data.maxZoom)\n    const minHeight = this.data.height / Math.pow(2, this.data.maxZoom)\n    const tileSize = this.data.tileSize\n\n    this.objectFit = options.objectFit\n\n    this.minZoom = getMinZoom(minWidth, minHeight, {\n      width: clientWidth,\n      height: clientHeight,\n      fit: this.objectFit\n    })\n    this.camera.zoom = this.minZoom\n    this.camera.up.set(0, 0, 0)\n\n    // TODO: consider moving this logic to MapControls\n    // [-tileSize / 2, tileSize / 2] ... translation to the top-left edge of tile\n    // [minWidth / 2, -minHeight / 2] ... translation to the center of the whole image\n    this.camera.position.set(\n      -tileSize / 2 + minWidth / 2,\n      tileSize / 2 - minHeight / 2,\n      1\n    )\n    this.camera.updateProjectionMatrix()\n\n    this.planeMap = new ExteriorMapPlane(\n      tileLoader,\n      tileSize,\n      Math.floor(this.deltaX / PX_PER_ANGLE),\n      this.data,\n      baseUrl\n    )\n    this.scene.add(this.planeMap)\n\n    this.controls = new ExteriorControls(\n      this.camera,\n      this.renderer.domElement,\n      this.minZoom,\n      Math.pow(2, this.data.maxZoom),\n      minWidth,\n      minHeight,\n      delta => {\n        this.callbacks.onActive()\n\n        this.deltaX -= delta\n        if (this.deltaX ('.hotspots')\n    if (container) {\n      container.style.opacity = '0'\n    }\n  }\n\n  destroy() {\n    this.controls.dispose()\n  }\n\n  zoomIn() {\n    this.controls.clickZoomIn()\n  }\n\n  zoomOut() {\n    this.controls.clickZoomOut()\n  }\n\n  zoomReset() {\n    this.controls.zoomReset()\n  }\n\n  override setObjectFit(fit: ObjectFit) {\n    // only available if no transition is happening\n    if (this.transitionObjectFit == null) {\n      this.objectFit = fit\n    }\n  }\n\n  override startTransition(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ) {\n    this.transitionObjectFit = { source, target, preserveZoom }\n  }\n\n  override endTransition() {\n    const targetFit =\n      this.transitionProgress >= 1\n        ? this.transitionObjectFit?.target.fit\n        : this.transitionObjectFit?.source.fit\n\n    if (targetFit != null) {\n      this.objectFit = targetFit\n    }\n\n    this.transitionObjectFit = null\n  }\n\n  override setTransitionProgress(ratio: number) {\n    this.transitionProgress = THREE.MathUtils.clamp(ratio, 0, 1)\n  }\n\n  onResize(width: number, height: number) {\n    this.camera.left = width / -2\n    this.camera.right = width / 2\n    this.camera.top = height / 2\n    this.camera.bottom = height / -2\n    this.camera.updateProjectionMatrix()\n\n    const minWidth = this.data.width / Math.pow(2, this.data.maxZoom)\n    const minHeight = this.data.height / Math.pow(2, this.data.maxZoom)\n\n    if (this.transitionObjectFit != null) {\n      this.minZoom = getMinZoomInterpolate(\n        minWidth,\n        minHeight,\n        this.transitionProgress,\n        [this.transitionObjectFit.source, this.transitionObjectFit.target]\n      )\n    } else {\n      this.minZoom = getMinZoom(minWidth, minHeight, {\n        width,\n        height,\n        fit: this.objectFit\n      })\n    }\n\n    this.camera.zoom = Math.max(this.minZoom, this.camera.zoom)\n    this.camera.updateProjectionMatrix()\n\n    this.controls.updateMinZoom(this.minZoom)\n\n    if (\n      this.transitionObjectFit == null ||\n      this.transitionObjectFit.preserveZoom !== true\n    ) {\n      this.controls.zoomReset()\n    }\n    this.renderer.setSize(width, height)\n  }\n\n  preload() {\n    return this.planeMap.preload()\n  }\n\n  render(delta: number) {\n    const targetLevel = clamp(\n      Math.ceil(Math.log2(this.camera.zoom)),\n      0,\n      this.data.maxZoom\n    )\n\n    this.controls.update(delta)\n    this.frustum.update(targetLevel)\n    this.renderer.render(this.scene, this.camera)\n    this.planeMap.updateAngle(Math.floor(this.deltaX / PX_PER_ANGLE))\n  }\n\n  setWheelZoomEnabled(state: boolean) {\n    this.controls.setWheelEnabled(state)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransitionViewport.html":{"url":"interfaces/TransitionViewport.html","title":"interface - TransitionViewport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransitionViewport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/render/RenderMethod.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fit\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fit:         ObjectFit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectFit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Renderer, Texture } from '../three'\nimport type { TileLoader } from '../tile/TileLoader'\n\nexport type ObjectFit = 'cover' | 'contain'\n\nexport interface RenderOptions {\n  objectFit: ObjectFit\n}\n\nexport interface RenderCallbacks {\n  onActive: () => void\n  onZoomChange: (data: { ratio: number; value: number }) => void\n}\n\nexport interface TransitionViewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\nexport abstract class RenderMethod {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(\n    protected tileLoader: TileLoader,\n    protected renderer: Renderer,\n    protected callbacks: RenderCallbacks,\n    protected options: RenderOptions\n  ) {}\n\n  abstract destroy(): void\n  abstract render(delta?: number): void\n\n  abstract onResize(width: number, height: number): void\n  abstract zoomIn(): void\n  abstract zoomOut(): void\n  abstract zoomReset(): void\n  abstract preload(): Promise\n\n  startTransition?(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ): void\n  endTransition?(): void\n  setTransitionProgress?(progress: number): void\n\n  setObjectFit?(objectFit: ObjectFit): void\n\n  abstract setWheelZoomEnabled(state: boolean): void\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Viewport.html":{"url":"interfaces/Viewport.html","title":"interface - Viewport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Viewport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/driverama-360-renderer/src/exterior/ExteriorMethod.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fit\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fit:         ObjectFit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ObjectFit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as THREE from '../three'\nimport { ExteriorControls } from './ExteriorControls'\nimport {\n  ObjectFit,\n  RenderCallbacks,\n  RenderMethod,\n  RenderOptions,\n  TransitionViewport\n} from '../render/RenderMethod'\nimport { ExteriorTilePanorama } from '../types'\nimport { clamp } from 'three/src/math/MathUtils'\nimport { TileLoader } from '../tile/TileLoader'\nimport { ExteriorMapPlane } from './ExteriorMapPlane'\nimport { RenderFrustum } from '../render/RenderFrustum'\nimport { getMinZoom, getMinZoomInterpolate } from './ExteriorUtils'\n\nconst PX_PER_ANGLE = 20\nconst STARTING_ANGLE = 230\n\ninterface Viewport {\n  width: number\n  height: number\n  fit: ObjectFit\n}\n\ninterface Transition {\n  source: Viewport\n  target: Viewport\n  preserveZoom: boolean\n}\n\nexport class ExteriorMethod extends RenderMethod {\n  protected scene: THREE.Scene\n  protected camera: THREE.OrthographicCamera\n  protected planeMap: ExteriorMapPlane\n\n  protected frustum: RenderFrustum\n  protected controls: ExteriorControls\n\n  protected data: ExteriorTilePanorama\n\n  // handle turntable rotation\n  protected deltaX = 0\n  protected maxDelta = 0\n\n  // handle scaling to fit screen\n  protected minZoom = 0\n\n  // object fit\n  protected objectFit: ObjectFit\n\n  // transition of object fit\n  protected transitionProgress = 0\n  protected transitionObjectFit: Transition | null = null\n\n  constructor(\n    tileLoader: TileLoader,\n    renderer: THREE.Renderer,\n    callbacks: RenderCallbacks,\n    options: RenderOptions,\n    data: ExteriorTilePanorama,\n    baseUrl: string\n  ) {\n    super(tileLoader, renderer, callbacks, options)\n\n    this.data = data\n    this.scene = new THREE.Scene()\n    this.scene.background = null\n\n    const { clientWidth, clientHeight } = renderer.domElement\n    this.camera = new THREE.OrthographicCamera(\n      clientWidth / -2,\n      clientWidth / 2,\n      clientHeight / 2,\n      clientHeight / -2,\n      1,\n      1000\n    )\n\n    this.deltaX =\n      Math.floor((STARTING_ANGLE / 360) * this.data.photos.length) *\n      PX_PER_ANGLE\n\n    this.maxDelta = PX_PER_ANGLE * this.data.photos.length\n\n    const minWidth = this.data.width / Math.pow(2, this.data.maxZoom)\n    const minHeight = this.data.height / Math.pow(2, this.data.maxZoom)\n    const tileSize = this.data.tileSize\n\n    this.objectFit = options.objectFit\n\n    this.minZoom = getMinZoom(minWidth, minHeight, {\n      width: clientWidth,\n      height: clientHeight,\n      fit: this.objectFit\n    })\n    this.camera.zoom = this.minZoom\n    this.camera.up.set(0, 0, 0)\n\n    // TODO: consider moving this logic to MapControls\n    // [-tileSize / 2, tileSize / 2] ... translation to the top-left edge of tile\n    // [minWidth / 2, -minHeight / 2] ... translation to the center of the whole image\n    this.camera.position.set(\n      -tileSize / 2 + minWidth / 2,\n      tileSize / 2 - minHeight / 2,\n      1\n    )\n    this.camera.updateProjectionMatrix()\n\n    this.planeMap = new ExteriorMapPlane(\n      tileLoader,\n      tileSize,\n      Math.floor(this.deltaX / PX_PER_ANGLE),\n      this.data,\n      baseUrl\n    )\n    this.scene.add(this.planeMap)\n\n    this.controls = new ExteriorControls(\n      this.camera,\n      this.renderer.domElement,\n      this.minZoom,\n      Math.pow(2, this.data.maxZoom),\n      minWidth,\n      minHeight,\n      delta => {\n        this.callbacks.onActive()\n\n        this.deltaX -= delta\n        if (this.deltaX ('.hotspots')\n    if (container) {\n      container.style.opacity = '0'\n    }\n  }\n\n  destroy() {\n    this.controls.dispose()\n  }\n\n  zoomIn() {\n    this.controls.clickZoomIn()\n  }\n\n  zoomOut() {\n    this.controls.clickZoomOut()\n  }\n\n  zoomReset() {\n    this.controls.zoomReset()\n  }\n\n  override setObjectFit(fit: ObjectFit) {\n    // only available if no transition is happening\n    if (this.transitionObjectFit == null) {\n      this.objectFit = fit\n    }\n  }\n\n  override startTransition(\n    source: TransitionViewport,\n    target: TransitionViewport,\n    preserveZoom: boolean\n  ) {\n    this.transitionObjectFit = { source, target, preserveZoom }\n  }\n\n  override endTransition() {\n    const targetFit =\n      this.transitionProgress >= 1\n        ? this.transitionObjectFit?.target.fit\n        : this.transitionObjectFit?.source.fit\n\n    if (targetFit != null) {\n      this.objectFit = targetFit\n    }\n\n    this.transitionObjectFit = null\n  }\n\n  override setTransitionProgress(ratio: number) {\n    this.transitionProgress = THREE.MathUtils.clamp(ratio, 0, 1)\n  }\n\n  onResize(width: number, height: number) {\n    this.camera.left = width / -2\n    this.camera.right = width / 2\n    this.camera.top = height / 2\n    this.camera.bottom = height / -2\n    this.camera.updateProjectionMatrix()\n\n    const minWidth = this.data.width / Math.pow(2, this.data.maxZoom)\n    const minHeight = this.data.height / Math.pow(2, this.data.maxZoom)\n\n    if (this.transitionObjectFit != null) {\n      this.minZoom = getMinZoomInterpolate(\n        minWidth,\n        minHeight,\n        this.transitionProgress,\n        [this.transitionObjectFit.source, this.transitionObjectFit.target]\n      )\n    } else {\n      this.minZoom = getMinZoom(minWidth, minHeight, {\n        width,\n        height,\n        fit: this.objectFit\n      })\n    }\n\n    this.camera.zoom = Math.max(this.minZoom, this.camera.zoom)\n    this.camera.updateProjectionMatrix()\n\n    this.controls.updateMinZoom(this.minZoom)\n\n    if (\n      this.transitionObjectFit == null ||\n      this.transitionObjectFit.preserveZoom !== true\n    ) {\n      this.controls.zoomReset()\n    }\n    this.renderer.setSize(width, height)\n  }\n\n  preload() {\n    return this.planeMap.preload()\n  }\n\n  render(delta: number) {\n    const targetLevel = clamp(\n      Math.ceil(Math.log2(this.camera.zoom)),\n      0,\n      this.data.maxZoom\n    )\n\n    this.controls.update(delta)\n    this.frustum.update(targetLevel)\n    this.renderer.render(this.scene, this.camera)\n    this.planeMap.updateAngle(Math.floor(this.deltaX / PX_PER_ANGLE))\n  }\n\n  setWheelZoomEnabled(state: boolean) {\n    this.controls.setWheelEnabled(state)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.4\n        \n            @angular/cdk : ^17.2.2\n        \n            @angular/common : ^17.2.4\n        \n            @angular/compiler : ^17.2.4\n        \n            @angular/core : ^17.2.4\n        \n            @angular/forms : ^17.2.4\n        \n            @angular/material : ^17.2.2\n        \n            @angular/platform-browser : ^17.2.4\n        \n            @angular/platform-browser-dynamic : ^17.2.4\n        \n            @angular/router : ^17.2.4\n        \n            rxjs : ^7.8.1\n        \n            tslib : ^2.5.3\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            State   (src/.../ExteriorControls.ts)\n                        \n                        \n                            State   (src/.../TileLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/driverama-360-renderer/src/exterior/ExteriorControls.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 PAN\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TOUCH_PAN\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TOUCH_DOLLY_PAN\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/driverama-360-renderer/src/tile/TileLoader.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 InProgress\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Idle\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bindOnce   (src/.../TileLoader.ts)\n                        \n                        \n                            createLazyPromise   (src/.../TileLoader.ts)\n                        \n                        \n                            createManifestRenderer   (src/.../renderer.ts)\n                        \n                        \n                            fetchManifest   (src/.../renderer.ts)\n                        \n                        \n                            getMinZoom   (src/.../ExteriorUtils.ts)\n                        \n                        \n                            getMinZoomInterpolate   (src/.../ExteriorUtils.ts)\n                        \n                        \n                            getParentSize   (src/.../renderer.ts)\n                        \n                        \n                            getTilePositionString   (src/.../TileLoader.ts)\n                        \n                        \n                            isApproxEquals   (src/.../math.ts)\n                        \n                        \n                            isApproxZero   (src/.../math.ts)\n                        \n                        \n                            Renderer   (src/.../Renderer.ts)\n                        \n                        \n                            useRefCallback   (src/.../Renderer.ts)\n                        \n                        \n                            useRendererControls   (src/.../Renderer.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/driverama-360-renderer/src/tile/TileLoader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bindOnce\n                        \n                    \n                \n            \n            \n                \nbindOnce(image: T)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createLazyPromise\n                        \n                    \n                \n            \n            \n                \ncreateLazyPromise(innerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                innerFn\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         LazyPromise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTilePositionString\n                        \n                    \n                \n            \n            \n                \ngetTilePositionString(position: TilePosition)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                            TilePosition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/driverama-360-renderer/src/renderer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createManifestRenderer\n                        \n                    \n                \n            \n            \n                \ncreateManifestRenderer(options)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ManifestRenderer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchManifest\n                        \n                    \n                \n            \n            \n                \nfetchManifest(url: string, options?)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getParentSize\n                        \n                    \n                \n            \n            \n                \ngetParentSize(element)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/driverama-360-renderer/src/exterior/ExteriorUtils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMinZoom\n                        \n                    \n                \n            \n            \n                \ngetMinZoom(minWidth: number, minHeight: number, dimensions: ClientDimensions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                minWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minHeight\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dimensions\n                                            \n                                                            ClientDimensions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinZoomInterpolate\n                        \n                    \n                \n            \n            \n                \ngetMinZoomInterpolate(minWidth: number, minHeight: number, ratio: number, ranges)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                minWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                minHeight\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ratio\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ranges\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/driverama-360-renderer/src/math.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isApproxEquals\n                        \n                    \n                \n            \n            \n                \nisApproxEquals(a: number, b: number, error)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                a\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                b\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                error\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    EPS\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isApproxZero\n                        \n                    \n                \n            \n            \n                \nisApproxZero(number: number, error)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                error\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    EPS\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/renderer/src/Renderer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Renderer\n                        \n                    \n                \n            \n            \n                \nRenderer(props)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                props\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useRefCallback\n                        \n                    \n                \n            \n            \n                \nuseRefCallback(fn: T)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/renderer/src/Renderer.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        useRendererControls\n                        \n                    \n                \n            \n            \n                \nuseRendererControls()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInstallation\n\nRun npm install in root folder\nRun npm install in src/driverama-360-renderer folder\n\nDriveramaAngular\nThis project was generated with Angular CLI version 11.2.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCloseComponent\n\nCloseComponent\n\nAppModule -->\n\nCloseComponent->AppModule\n\n\n\n\n\nControlsButtonComponent\n\nControlsButtonComponent\n\nAppModule -->\n\nControlsButtonComponent->AppModule\n\n\n\n\n\nControlsComponent\n\nControlsComponent\n\nAppModule -->\n\nControlsComponent->AppModule\n\n\n\n\n\nCursorComponent\n\nCursorComponent\n\nAppModule -->\n\nCursorComponent->AppModule\n\n\n\n\n\nHomepagePage\n\nHomepagePage\n\nAppModule -->\n\nHomepagePage->AppModule\n\n\n\n\n\nInfoMessageComponent\n\nInfoMessageComponent\n\nAppModule -->\n\nInfoMessageComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nPageComponent\n\nPageComponent\n\nAppModule -->\n\nPageComponent->AppModule\n\n\n\n\n\nPreloadComponent\n\nPreloadComponent\n\nAppModule -->\n\nPreloadComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ControlProp   (src/.../Renderer.utils.ts)\n                        \n                        \n                            ControlsCallbacks   (src/.../Renderer.utils.ts)\n                        \n                        \n                            ObjectFit   (src/.../RenderMethod.ts)\n                        \n                        \n                            PerspectiveOrientationType   (src/.../TileMesh.ts)\n                        \n                        \n                            TileLoaderCancel   (src/.../TileLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/renderer/src/Renderer.utils.ts\n    \n    \n        \n            \n                \n                    \n                    ControlProp\n                \n            \n            \n                \n                            MutableRefObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ControlsCallbacks\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    src/driverama-360-renderer/src/render/RenderMethod.ts\n    \n    \n        \n            \n                \n                    \n                    ObjectFit\n                \n            \n            \n                \n                        \"cover\" | \"contain\"\n\n                \n            \n        \n    \n    src/driverama-360-renderer/src/tile/TileMesh.ts\n    \n    \n        \n            \n                \n                    \n                    PerspectiveOrientationType\n                \n            \n            \n                \n                        \"px\" | \"nx\" | \"py\" | \"ny\" | \"pz\" | \"nz\"\n\n                \n            \n        \n    \n    src/driverama-360-renderer/src/tile/TileLoader.ts\n    \n    \n        \n            \n                \n                    \n                    TileLoaderCancel\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _changeEvent   (src/.../InteriorControls.ts)\n                        \n                        \n                            _endEvent   (src/.../InteriorControls.ts)\n                        \n                        \n                            _startEvent   (src/.../InteriorControls.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EPS   (src/.../math.ts)\n                        \n                        \n                            EPS   (src/.../InteriorControls.ts)\n                        \n                        \n                            PX_PER_ANGLE   (src/.../ExteriorMethod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            STARTING_ANGLE   (src/.../ExteriorMethod.ts)\n                        \n                        \n                            STATE   (src/.../InteriorControls.ts)\n                        \n                        \n                            WORLD_TILE_SIZE   (src/.../InteriorMethod.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/driverama-360-renderer/src/interior/InteriorControls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _changeEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: 'change' }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _endEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: 'end' }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _startEvent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: 'start' }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.000001\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  NONE: -1,\n  ROTATE: 0,\n  TOUCH_ROTATE: 3,\n  TOUCH_DOLLY_PAN: 5\n}\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/driverama-360-renderer/src/math.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1e-5\n                    \n                \n\n\n        \n    \n\n    src/driverama-360-renderer/src/exterior/ExteriorMethod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PX_PER_ANGLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STARTING_ANGLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 230\n                    \n                \n\n\n        \n    \n\n    src/driverama-360-renderer/src/interior/InteriorMethod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WORLD_TILE_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 256\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
